// src/components/Dashboard.jsx
import React, { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import InputSection from './InputSection';
import { getAuth } from 'firebase/auth';
import { collection, doc, getDocs, getDoc, setDoc, updateDoc } from 'firebase/firestore';
import { db } from '../firebase';
import dayjs from 'dayjs';
import Confetti from 'react-confetti';
import { useWindowSize } from 'react-use';
import { motion, AnimatePresence } from 'framer-motion';
import HeroImage from '../assets/logo.png';
import vaultImg from '../assets/vault.png';
import yogaImg from '../assets/yoga.webp';
import jrnlImg from '../assets/jrnl.jpg';
import ayurvedaImg from '../assets/ayurveda.png';

const FEATURE_IMAGES = {
  journal: jrnlImg,
  memoryvault: vaultImg,
  ayurveda: ayurvedaImg,
  yoga: yogaImg        
};

  const TRANSLATIONS = {
    'hi-IN': {
      title: 'рдЬрдирдиреА рдЖрд░реЛрдЧреНрдп',
      subtitle: 'рднрд╛рд░рдд рдХрд╛ рдкрд╣рд▓рд╛ рдорд╛рддрд╛рдУрдВ рдХреЗ рд▓рд┐рдП рд╡реЙрдЗрд╕-рдЖрдзрд╛рд░рд┐рдд рдПрдЖрдИ рд╕рд╛рдереАред',
     description1: 'рднрд╛рд░рддреАрдп рдорд╛рддрд╛рдУрдВ рдХреЗ рд▓рд┐рдП рднрд╛рд░рдд рдХрд╛ рдкрд╣рд▓рд╛ рдмрд╣реБрднрд╛рд╖реА, рд╡реЙрдпрд╕-рдЖрдзрд╛рд░рд┐рдд AI рд╕рд╛рдереАред рдЬрдирдиреА рдЖрд░реЛрдЧреНрдп рдЧрд░реНрднрдзрд╛рд░рдг рд╕реЗ рдкрд╣рд▓реЗ, рдЧрд░реНрднрд╛рд╡рд╕реНрдерд╛ рдХреЗ рджреМрд░рд╛рди рдФрд░ рдкреНрд░рд╕рд╡реЛрддреНрддрд░ рдЕрд╡рдзрд┐ рдореЗрдВ рдорд╣рд┐рд▓рд╛рдУрдВ рдХреЛ рдЖрдпреБрд░реНрд╡реЗрдж рдФрд░ рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рджреЗрдЦрднрд╛рд▓ рдкрд░ рдЖрдзрд╛рд░рд┐рдд рд╕реНрдерд╛рдиреАрдп рднрд╛рд╖рд╛ рдореЗрдВ AI-рд╕рдорд░реНрдерд┐рдд рдорд╛рд░реНрдЧрджрд░реНрд╢рди рдкреНрд░рджрд╛рди рдХрд░рддрд╛ рд╣реИред',
description2: 'рдЧреНрд░рд╛рдореАрдг рдФрд░ рдХрдо рд╕рд╛рдХреНрд╖рд░рддрд╛ рд╡рд╛рд▓реЗ рдЙрдкрдпреЛрдЧрдХрд░реНрддрд╛рдУрдВ рдХреЗ рд▓рд┐рдП рдбрд┐рдЬрд╝рд╛рдЗрди рдХрд┐рдпрд╛ рдЧрдпрд╛, рдпрд╣ рд╡реЙрдпрд╕-рдЖрдзрд╛рд░рд┐рдд рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕рд╣рд╛рдпрддрд╛, рд░рд┐рдорд╛рдЗрдВрдбрд░, рдЬрд░реНрдирд▓рд┐рдВрдЧ рдФрд░ рднрд╛рд╡рдирд╛рддреНрдордХ рдЯреНрд░реИрдХрд┐рдВрдЧ рдЬреИрд╕реА рд╕реБрд╡рд┐рдзрд╛рдПрдБ рдкреНрд░рджрд╛рди рдХрд░рддрд╛ рд╣реИ тАФ рдЬрд┐рд╕рд╕реЗ рдорд╛рддреГрддреНрд╡ рджреЗрдЦрднрд╛рд▓ рд╕реБрд▓рдн, рд╡реНрдпрдХреНрддрд┐рдЧрдд рдФрд░ рд╕рд╢рдХреНрдд рдмрдирддреА рд╣реИред',

      checklistTitle: 'ЁЯМ╕ рджреИрдирд┐рдХ рд╕реНрд╡рд╛рд╕реНрдереНрдп рдЬрд╛рдВрдЪ рд╕реВрдЪреА',
      checklistItems: [
        '3 рд▓реАрдЯрд░ рдкрд╛рдиреА рдкрд┐рдПрдВ',
        'рдорд╛рддреГ рдпреЛрдЧ рдХрд░реЗрдВ',
        'рд╕реНрд╡рд╕реНрде рднреЛрдЬрди рдХрд░реЗрдВ',
        'рдкреНрд░рд╕рд╡ рдкреВрд░реНрд╡ рд╡рд┐рдЯрд╛рдорд┐рди рд▓реЗрдВ',
        'рд╢реНрд╡рд╛рд╕ рдЕрднреНрдпрд╛рд╕ рдХрд░реЗрдВ'
      ],
      reminderTitle: 'ЁЯЧУ рдбреЙрдХреНрдЯрд░-рджреМрд░рд╛ рдЕрдиреБрд╕реНрдорд╛рд░рдХ',
      reminderLabel: 'рджреМрд░рд╛ рддрд┐рдерд┐',
      repeatLabel: 'рджреЛрд╣рд░рд╛рдПрдВ',
      daysRemaining: 'рдбреЙрдХреНрдЯрд░ рдХреЗ рджреМрд░реЗ рдореЗрдВ {days} рджрд┐рди рд╢реЗрд╖',
    nextVisitOn: 'рдЖрдкрдХрд╛ рдЕрдЧрд▓рд╛ рдЪреЗрдХрдЕрдк {date} рдХреЛ рд╣реИ',
    visitToday: 'рдЖрдЬ рдЖрдкрдХрд╛ рдбреЙрдХреНрдЯрд░ рдХрд╛ рджреМрд░рд╛ рд╣реИ!',
    visitPassed: 'рдЖрдкрдХрд╛ рдбреЙрдХреНрдЯрд░ рдХрд╛ рджреМрд░рд╛ {days} рджрд┐рди рдкрд╣рд▓реЗ рдерд╛',
    noVisitScheduled: 'рдХреЛрдИ рдбреЙрдХреНрдЯрд░ рджреМрд░рд╛ рдирд┐рд░реНрдзрд╛рд░рд┐рдд рдирд╣реАрдВ рд╣реИ',
      frequencyOptions: [
        { value: 'once', label: 'рдПрдХ рдмрд╛рд░' },
        { value: 'weekly', label: 'рд╕рд╛рдкреНрддрд╛рд╣рд┐рдХ' },
        { value: 'monthly', label: 'рдорд╛рд╕рд┐рдХ' }
      ],
      saveReminder: 'рдЕрдиреБрд╕реНрдорд╛рд░рдХ рд╕рд╣реЗрдЬреЗрдВ',
      streakTitle: 'ЁЯФе рдЖрдк рдПрдХ рд╕реНрдЯреНрд░реАрдХ рдкрд░ рд╣реИрдВ!',
      streakText: 'рджрд┐рди {streak} рдХреА рдирд┐рд░рдВрддрд░рддрд╛',
      streakSubtext: 'рдЪрд▓рддреЗ рд░рд╣реЛ, рддреБрдо рдЕрджреНрднреБрдд рдХрд░ рд░рд╣реЗ рд╣реЛ ЁЯТк',
      features: [
        { 
          key: 'journal',
          title: 'рдЬрд░реНрдирд▓', 
          desc: 'AI рджреНрд╡рд╛рд░рд╛ рд╕рдВрдЪрд╛рд▓рд┐рдд рджреИрдирд┐рдХ рднрд╛рд╡рдирд╛рддреНрдордХ рд╕рд╛рд░рд╛рдВрд╢, рдореВрдб рд╢рд┐рдлреНрдЯ рдХреЛ рдЯреНрд░реИрдХ рдХрд░рдиреЗ рдФрд░ рдЫреЛрдЯреА рдЬреАрдд рдХрд╛ рдЬрд╢реНрди рдордирд╛рдиреЗ рдореЗрдВ рдорджрдж рдХрд░рддрд╛ рд╣реИред',
          link: '/journal',
    
        },
        { 
          key: 'memoryvault',
          title: 'рдореЗрдореЛрд░реА рд╡реЙрд▓реНрдЯ', 
          desc: 'рдорд╛рдЗрд▓рд╕реНрдЯреЛрди, рднрд╛рд╡рдирд╛рдУрдВ рдФрд░ рддрд╕реНрд╡реАрд░реЛрдВ рдХреЛ рдПрдХ рд╕реНрдерд╛рди рдкрд░ рд╕рдВрд░рдХреНрд╖рд┐рдд рдХрд░реЗрдВ рдЬрд┐рд╕реЗ рдЖрдк рдХрднреА рднреА рджреЗрдЦ рд╕рдХрддреЗ рд╣реИрдВред',
          link: '/memory-vault',
          
        },
        { key:'ayurveda',
          title: 'рдЖрдпреБрд░реНрд╡реЗрдж', 
          desc: 'рдЖрдкрдХреЗ рддреНрд░реИрдорд╛рд╕рд┐рдХ рдпрд╛ рдкреНрд░рд╕рд╡реЛрддреНрддрд░ рдХреЗ рд▓рд┐рдП рднрд╛рд░рддреАрдп рдЬреНрдЮрд╛рди - рдЖрдкрдХреЗ рд▓рд┐рдП рд╡реНрдпрдХреНрддрд┐рдЧрдд рднреЛрдЬрди, рдЬрдбрд╝реА-рдмреВрдЯрд┐рдпрд╛рдБ рдФрд░ рдЕрдиреБрд╖реНрдард╛рдиред',
          link:'/ayurveda'
        },
        { 
          key:'yoga',
          title: 'рдорд╛рддреГ рдпреЛрдЧ', 
          desc: 'рдЖрдкрдХреА рддрд╛рдХрдд, рд╢рд╛рдВрддрд┐ рдФрд░ рдЬреБрдбрд╝рд╛рд╡ рдХреЛ рдкреЛрд╖рд┐рдд рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдЪрд░рдг-рд╡рд╛рд░ рдпреЛрдЧ рджрд┐рдирдЪрд░реНрдпрд╛ред',
          link:'/yoga'
        }
      ],
      exploreNow: 'рдЕрднреА рдПрдХреНрд╕рдкреНрд▓реЛрд░ рдХрд░реЗрдВ',
      jananiSays: 'рдЬрдирдиреА рдХрд╣рддреА рд╣реИ',
    askJanani: 'рдЬрдирдиреА рд╕реЗ рдкреВрдЫреЗрдВ...',
    aiPlaceholder: 'рдЕрдкрдирд╛ рдкреНрд░рд╢реНрди рдпрд╣рд╛рдБ рд▓рд┐рдЦреЗрдВ рдпрд╛ рдорд╛рдЗрдХ рджрдмрд╛рдПрдВ...',
    downhead: 'ЁЯМ╕ рдЖрдкрдХреА рдпрд╛рддреНрд░рд╛, рд╣рдорд╛рд░рд╛ рд╕рдорд░реНрдерди',
     downcontent: 'рдЖрдкрдХреА рдорд╛рддреГрддреНрд╡ рдпрд╛рддреНрд░рд╛ рдХрд╛ рд╣рд░ рдХрджрдо рдЕрдирдореЛрд▓ рд╣реИред рд╣рдо рдЖрдкрдХреЗ рдорд╛рд░реНрдЧрджрд░реНрд╢рди, рд╕рдорд░реНрдерди рдФрд░ рдЙрддреНрд╕рд╡ рдХреЗ рд▓рд┐рдП рдпрд╣рд╛рдБ рд╣реИрдВред',
     journal: 'рдЬрд░реНрдирд▓',
memoryVault: 'рд╕реНрдореГрддрд┐ рд╕рдВрдЧреНрд░рд╣',
ayurveda: 'рдЖрдпреБрд░реНрд╡реЗрдж',
yoga: 'рдпреЛрдЧ',
dayStreak: 'рджрд┐рдиреЛрдВ рдХреА рд╢реНрд░реГрдВрдЦрд▓рд╛'


    },
    'en-IN': {
      title: 'Janani Aarogya',
      subtitle: 'IndiaтАЩs First Voice-led AI Companion For Mothers.',
      description1: 'Janani Aarogya supports women across pre-pregnancy, pregnancy, and postpartum with local-language, AI-powered guidance rooted in Ayurveda and cultural care.',
      description2: 'Designed for rural and low-literacy users, it offers voice-based health support, reminders, journaling, and emotional tracking тАФ making maternal care accessible, personal, and empowering.',

      checklistTitle: 'ЁЯМ╕ Daily Wellness Checklist',
      checklistItems: [
        'Drink 3L Water',
        'Do Maternal Yoga',
        'Eat a Healthy Meal',
        'Take Prenatal Vitamins',
        'Practice Breathing'
      ],
      reminderTitle: 'ЁЯЧУ Doctor-Visit Reminder',
      reminderLabel: 'Visit Date',
      repeatLabel: 'Repeat',
      daysRemaining: '{days} days left for the doctor visit',
  nextVisitOn: 'Your next check-up is on {date}',
  visitToday: 'Your doctor visit is today!',
  visitPassed: 'Your doctor visit was {days} days ago',
  noVisitScheduled: 'No doctor visit is scheduled'
,
      frequencyOptions: [
        { value: 'once', label: 'Once' },
        { value: 'weekly', label: 'Weekly' },
        { value: 'monthly', label: 'Monthly' }
      ],
      saveReminder: 'Save Reminder',
      streakTitle: 'ЁЯФе You\'re on a Streak!',
      streakText: 'Day {streak} of consistency',
      streakSubtext: 'Keep going, you\'re doing amazing ЁЯТк',
      features: [
        {  key:'journal',
          title: 'Journal', 
          desc: 'Daily emotional summaries powered by AI, helping you track mood shifts and celebrate small wins.',
          link: '/journal'
        },
        {  key:'memoryvault',
          title: 'Memory Vault', 
          desc: 'Preserve milestones, emotions, and photos in one space you can revisit anytime.',
          link: '/memory-vault'
        },
        {  key:'ayurveda',
          title: 'Ayurveda', 
          desc: 'Indian wisdom for your trimester or postpartum тАФ food, herbs & rituals personalised to you.',
          link: '/ayurveda'
        },
        {  key:'yoga',
          title: 'Maternal Yoga', 
          desc: 'Stage-wise yoga routines to nurture your strength, peace and connection.',
          link: '/yoga'
        }
      ],
      exploreNow: 'Explore Now',
      jananiSays: "Janani says",
askJanani: "Ask Janani...",

aiPlaceholder: "Type your question here or press the mic...",
downhead: "ЁЯМ╕ Your journey, our support",
downcontent: "Every step of your motherhood journey is precious. We are here to guide, support, and celebrate with you."
    },
    // Add other languages following the same pattern
    'ta-IN': {
    title: 'роЬройройро┐ роЖро░рпЛроХрпНроХро┐ропроорпН',
    subtitle: 'родро╛ропрпНрооро╛ро░рпБроХрпНроХро╛рой роЗроирпНродро┐ропро╛ро╡ро┐ройрпН роорпБродро▓рпН роХрпБро░ро▓рпН ро╡ро┤ро┐роироЯродрпНродрпБроорпН роПроР родрпБрогрпИ.',
    
    checklistTitle: 'ЁЯМ╕ родро┐ройроЪро░ро┐ роЖро░рпЛроХрпНроХро┐роп роЪро░ро┐рокро╛ро░рпНрокрпНрокрпБ рокроЯрпНроЯро┐ропро▓рпН',
    checklistItems: [
      '3 ро▓ро┐роЯрпНроЯро░рпН родрогрпНрогрпАро░рпН роХрпБроЯро┐роХрпНроХро╡рпБроорпН',
      'родро╛ропрпНроорпИ ропрпЛроХро╛ роЪрпЖропрпНропро╡рпБроорпН',
      'роЖро░рпЛроХрпНроХро┐ропрооро╛рой роЙрогро╡рпБ роЙрогрпНрогро╡рпБроорпН',
      'роХро░рпНрокрпНрокродрпНродро┐ро▒рпНроХрпБ роорпБройрпН ро╡рпИроЯрпНроЯрооро┐ройрпНроХро│рпН роОроЯрпБродрпНродрпБроХрпН роХрпКро│рпНро│ро╡рпБроорпН',
      'роЪрпБро╡ро╛роЪрокрпН рокропро┐ро▒рпНроЪро┐ роЪрпЖропрпНропро╡рпБроорпН'
    ],
    reminderTitle: 'ЁЯЧУ рооро░рпБродрпНродрпБро╡ро░рпН-рокро╛ро░рпНро╡рпИ роиро┐ройрпИро╡рпВроЯрпНроЯро▓рпН',
    reminderLabel: 'рокро╛ро░рпНро╡рпИ родрпЗродро┐',
    repeatLabel: 'роорпАрогрпНроЯрпБроорпН',
    daysRemaining: 'рооро░рпБродрпНродрпБро╡ро░рпН роЪроирпНродро┐рокрпНрокро┐ро▒рпНроХрпБ роЗройрпНройрпБроорпН {days} роиро╛роЯрпНроХро│рпН роЙро│рпНро│рой',
nextVisitOn: 'роЙроЩрпНроХро│рпН роЕроЯрпБродрпНрод роЪрпЛродройрпИ родрпЗродро┐ {date}',
visitToday: 'роЗройрпНро▒рпБ роЙроЩрпНроХро│рпН рооро░рпБродрпНродрпБро╡ро░рпН роЪроирпНродро┐рокрпНрокрпБ!',
visitPassed: 'роЙроЩрпНроХро│рпН рооро░рпБродрпНродрпБро╡ро░рпН роЪроирпНродро┐рокрпНрокрпБ {days} роиро╛роЯрпНроХро│рпБроХрпНроХрпБ роорпБройрпН роироЯрпИрокрпЖро▒рпНро▒родрпБ',
noVisitScheduled: 'рооро░рпБродрпНродрпБро╡ро░рпН роЪроирпНродро┐рокрпНрокрпБ роПродрпБроорпН родро┐роЯрпНроЯрооро┐роЯрокрпНрокроЯро╡ро┐ро▓рпНро▓рпИ'
,
    frequencyOptions: [
      { value: 'once', label: 'роТро░рпБ роорпБро▒рпИ' },
      { value: 'weekly', label: 'ро╡ро╛ро░ро╛роирпНродро┐ро░' },
      { value: 'monthly', label: 'рооро╛родро╛роирпНродро┐ро░' }
    ],
    saveReminder: 'роиро┐ройрпИро╡рпВроЯрпНроЯро▓рпИ роЪрпЗрооро┐роХрпНроХро╡рпБроорпН',
    streakTitle: 'ЁЯФе роирпАроЩрпНроХро│рпН роТро░рпБ родрпКроЯро░ро┐ро▓рпН роЗро░рпБроХрпНроХро┐ро▒рпАро░рпНроХро│рпН!',
    streakText: 'роиро┐ро▓рпИродрпНродройрпНроорпИропро┐ройрпН роиро╛ро│рпН {streak}',
    streakSubtext: 'родрпКроЯро░рпНроирпНродрпБ роЪрпЖро▓рпНро▓рпБроЩрпНроХро│рпН, роирпАроЩрпНроХро│рпН роЕро░рпБроорпИропро╛роХ роЪрпЖропрпНроХро┐ро▒рпАро░рпНроХро│рпН ЁЯТк',
    features: [
      { key:'journal',
        title: 'рокродрпНродро┐ро░ро┐роХрпИ', 
        desc: 'AI роорпВро▓роорпН роЗропроХрпНроХрокрпНрокроЯрпБроорпН родро┐ройроЪро░ро┐ роЙрогро░рпНроЪрпНроЪро┐ роЪрпБро░рпБроХрпНроХроЩрпНроХро│рпН, рооройроиро┐ро▓рпИ рооро╛ро▒рпНро▒роЩрпНроХро│рпИроХрпН роХрогрпНроХро╛рогро┐роХрпНроХро╡рпБроорпН роЪро┐ро▒ро┐роп ро╡рпЖро▒рпНро▒ро┐роХро│рпИ роХрпКрогрпНроЯро╛роЯро╡рпБроорпН роЙродро╡рпБроХро┐ро▒родрпБ.',
        link: '/journal'
      },
      { key:'memoryvault',
        title: 'роиро┐ройрпИро╡рпБ роХро│роЮрпНроЪро┐ропроорпН', 
        desc: 'роорпИро▓рпНроХро▒рпНроХро│рпН, роЙрогро░рпНроЪрпНроЪро┐роХро│рпН рооро▒рпНро▒рпБроорпН рокрпБроХрпИрокрпНрокроЯроЩрпНроХро│рпИ роирпАроЩрпНроХро│рпН роОрокрпНрокрпЛродрпБ ро╡рпЗрогрпНроЯрпБрооро╛ройро╛ро▓рпБроорпН роорпАрогрпНроЯрпБроорпН рокро╛ро░рпНроХрпНроХроХрпНроХрпВроЯро┐роп роТро░рпБ роЗроЯродрпНродро┐ро▓рпН рокро╛родрпБроХро╛роХрпНроХро╡рпБроорпН.',
        link: '/memory-vault'
      },
      { key:'ayurveda',
        title: 'роЖропрпБро░рпНро╡рпЗродроорпН', 
        desc: 'роЙроЩрпНроХро│рпН роорпВройрпНро▒рпБ рооро╛род роХро╛ро▓роорпН роЕро▓рпНро▓родрпБ рокро┐ро░роЪро╡родрпНродро┐ро▒рпНроХрпБрокрпН рокро┐роирпНродрпИроп роХро╛ро▓родрпНродро┐ро▒рпНроХро╛рой роЗроирпНродро┐роп роЮро╛ройроорпН - роЙроЩрпНроХро│рпБроХрпНроХрпБ родройро┐рокрпНрокропройро╛роХрпНроХрокрпНрокроЯрпНроЯ роЙрогро╡рпБ, роорпВро▓ро┐роХрпИроХро│рпН рооро▒рпНро▒рпБроорпН роЪроЯроЩрпНроХрпБроХро│рпН.',
        link: '/ayurveda'
      },
      { key:'yoga',
        title: 'родро╛ропрпНроорпИ ропрпЛроХро╛', 
        desc: 'роЙроЩрпНроХро│рпН ро╡ро▓ро┐роорпИ, роЕроорпИродро┐ рооро▒рпНро▒рпБроорпН роЗрогрпИрокрпНрокрпИ ро╡ро│ро░рпНроХрпНроХ роиро┐ро▓рпИ ро╡ро╛ро░ро┐ропро╛роХ ропрпЛроХро╛ ро╡ро┤ро┐роХро╛роЯрпНроЯрпБродро▓рпНроХро│рпН.',
        link: '/yoga'
      }
    ],
    exploreNow: 'роЗрокрпНрокрпЛродрпБ роЖро░ро╛ропрпБроЩрпНроХро│рпН',
    journal: 'рокродрпНродро┐ро░ро┐роХрпИ',
    memoryVault: 'роиро┐ройрпИро╡рпБ роХро│роЮрпНроЪро┐ропроорпН',
    ayurveda: 'роЖропрпБро░рпНро╡рпЗродроорпН',
    yoga: 'ропрпЛроХро╛',
    dayStreak: 'роиро╛ро│рпН родрпКроЯро░рпН',
    jananiSays: 'роЬройройро┐ роХрпВро▒рпБроХро┐ро▒ро╛ро░рпН',
    reminderError: 'родропро╡рпБ роЪрпЖропрпНродрпБ роТро░рпБ родрпЗродро┐ропрпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН.',
    reminderSuccess: 'роиро┐ройрпИро╡рпВроЯрпНроЯро▓рпН роЪрпЗрооро┐роХрпНроХрокрпНрокроЯрпНроЯродрпБ!',
    description1: "роЬройройро┐ роЖро░рпЛроХрпНроХро┐ропроорпН роХро░рпБродрпНродро░ро┐рокрпНрокрпБроХрпНроХрпБ роорпБройрпН, роХро░рпНрокрпНрокроХро╛ро▓роорпН рооро▒рпНро▒рпБроорпН рокро┐ро▒ро╡ро┐роХрпНроХрпБ рокро┐ро▒роХрпБ рокрпЖрогрпНроХро│рпБроХрпНроХрпБ, роЙро│рпНро│рпВро░рпН роорпКро┤ро┐ропро┐ро▓рпН, роЖропрпБро░рпНро╡рпЗродроорпН рооро▒рпНро▒рпБроорпН роХро▓ро╛роЪро╛ро░ рокро░ро╛рооро░ро┐рокрпНрокрпБ роЕроЯро┐рокрпНрокроЯрпИропро┐ро▓ро╛рой роПроР ро╡ро┤ро┐роХро╛роЯрпНроЯрпБродро▓рпИ ро╡ро┤роЩрпНроХрпБроХро┐ро▒родрпБ.",

description2: "роЪроородро│ рооро▒рпНро▒рпБроорпН роХрпБро▒рпИроирпНрод роХро▓рпНро╡ро┐ роЙро│рпНро│ рокропройро░рпНроХро│рпБроХрпНроХро╛роХ ро╡роЯро┐ро╡роорпИроХрпНроХрокрпНрокроЯрпНроЯрпБро│рпНро│родрпБ, роЗродрпБ роХрпБро░ро▓рпН роЕроЯро┐рокрпНрокроЯрпИропро┐ро▓ро╛рой роЪрпБроХро╛родро╛ро░ роЙродро╡ро┐, роиро┐ройрпИро╡рпВроЯрпНроЯро▓рпНроХро│рпН, рокродро┐ро╡рпЗроЯрпНроЯро┐ро▓рпН рокродро┐ро╡рпБ рооро▒рпНро▒рпБроорпН роЙрогро░рпНроЪрпНроЪро┐ роХрогрпНроХро╛рогро┐рокрпНрокрпБ рокрпЛройрпНро▒ роЕроорпНроЪроЩрпНроХро│рпИ ро╡ро┤роЩрпНроХрпБроХро┐ро▒родрпБ тАФ роЗродройрпНроорпВро▓роорпН родро╛ропрпНроорпИ рокро░ро╛рооро░ро┐рокрпНрокрпБ роОро│ро┐родро╛роХро╡рпБроорпН, родройро┐рокрпНрокропройро╛роХрпНроХрокрпНрокроЯрпНроЯродрпБрооро╛роХро╡рпБроорпН, роЪроХрпНродро┐ро╡ро╛ропрпНроирпНродродрпБрооро╛роХ рооро╛ро▒рпБроХро┐ро▒родрпБ.",

jananiSays: "роЬройройро┐ роХрпВро▒рпБроХро┐ро▒ро╛ро░рпН",
askJanani: "роЬройройро┐ропро┐роЯроорпН роХрпЗро│рпБроЩрпНроХро│рпН...",

aiPlaceholder: "роЙроЩрпНроХро│рпН роХрпЗро│рпНро╡ро┐ропрпИ роЗроЩрпНроХрпЗ родроЯрпНроЯроЪрпНроЪрпБ роЪрпЖропрпНропро╡рпБроорпН роЕро▓рпНро▓родрпБ роорпИроХрпН роЕро┤рпБродрпНродро╡рпБроорпН...",
downhead: "ЁЯМ╕ роЙроЩрпНроХро│рпН рокропрогроорпН, роОроЩрпНроХро│рпН роЖродро░ро╡рпБ",
downcontent: "роЙроЩрпНроХро│рпН родро╛ропрпНроорпИ рокропрогродрпНродро┐ройрпН роТро╡рпНро╡рпКро░рпБ рокроЯро┐ропрпБроорпН роородро┐рокрпНрокрпБрооро┐роХрпНроХродрпБ. роЙроЩрпНроХро│рпБроХрпНроХро╛рой ро╡ро┤ро┐роХро╛роЯрпНроЯро▓рпН, роЖродро░ро╡рпБ рооро▒рпНро▒рпБроорпН роХрпКрогрпНроЯро╛роЯрпНроЯродрпНродро┐ро▒рпНроХрпБ роиро╛роЩрпНроХро│рпН роЗроЩрпНроХрпЗ роЗро░рпБроХрпНроХро┐ро▒рпЛроорпН."

  },
    'te-IN': {
    title: 'р░Ьр░ир░ир░┐ р░Жр░░р▒Лр░Чр▒Нр░пр░В',
    subtitle: 'р░др░▓р▒Нр░▓р▒Бр░▓ р░Хр▒Лр░╕р░В р░нр░╛р░░р░др▒НтАМр░▓р▒Л р░др▒Кр░▓р░┐ р░╡р░╛р░пр░┐р░╕р▒Н р░Жр░зр░╛р░░р░┐р░д р░Пр░Р р░╕р░╣р░Ър░░р▒Бр░бр▒Б.',
    
    checklistTitle: 'ЁЯМ╕ р░░р▒Лр░Ьр▒Бр░╡р░╛р░░р▒А р░Жр░░р▒Лр░Чр▒Нр░п р░Ър▒Жр░Хр▒НтАМр░▓р░┐р░╕р▒Нр░Яр▒Н',
    checklistItems: [
      '3 р░▓р▒Ар░Яр░░р▒Нр░▓ р░ир▒Ар░░р▒Б р░др░╛р░Чр░Вр░бр░┐',
      'р░ор░╛р░др▒Г р░пр▒Лр░Чр░╛ р░Ър▒Зр░пр░Вр░бр░┐',
      'р░Жр░░р▒Лр░Чр▒Нр░пр░Хр░░р░ор▒Ир░и р░Жр░╣р░╛р░░р░В р░др░┐р░ир░Вр░бр░┐',
      'р░кр▒Нр░░р░╕р░╡ р░кр▒Вр░░р▒Нр░╡ р░╡р▒Ир░Яр░ор░┐р░ир▒Нр░▓р▒Б р░др▒Ар░╕р▒Бр░Хр▒Лр░Вр░бр░┐',
      'р░╢р▒Нр░╡р░╛р░╕ р░╡р▒Нр░пр░╛р░пр░╛р░ор░В р░Ър▒Зр░пр░Вр░бр░┐'
    ],
    reminderTitle: 'ЁЯЧУ р░бр░╛р░Хр▒Нр░Яр░░р▒Н-р░╡р░┐р░Ьр░┐р░Яр▒Н р░░р░┐р░ор▒Ир░Вр░бр░░р▒Н',
    reminderLabel: 'р░╡р░┐р░Ьр░┐р░Яр▒Н р░др▒Зр░жр▒А',
    repeatLabel: 'р░кр▒Бр░ир░░р░╛р░╡р▒Гр░др░В',
    daysRemaining: 'р░бр░╛р░Хр▒Нр░Яр░░р▒Н р░╕р░Вр░жр░░р▒Нр░╢р░ир░Хр▒Б р░Зр░Вр░Хр░╛ {days} р░░р▒Лр░Ьр▒Бр░▓р▒Б р░ор░┐р░Чр░┐р░▓р░┐ р░Йр░ир▒Нр░ир░╛р░пр░┐',
nextVisitOn: 'р░ор▒А р░др░жр▒Бр░кр░░р░┐ р░Ър▒Жр░Хр░кр▒Н {date}р░и р░Йр░Вр░жр░┐',
visitToday: 'р░И р░░р▒Лр░Ьр▒Б р░ор▒А р░бр░╛р░Хр▒Нр░Яр░░р▒Н р░╕р░Вр░жр░░р▒Нр░╢р░и р░Йр░Вр░жр░┐!',
visitPassed: 'р░ор▒А р░бр░╛р░Хр▒Нр░Яр░░р▒Н р░╕р░Вр░жр░░р▒Нр░╢р░ир░Хр▒Б {days} р░░р▒Лр░Ьр▒Бр░▓р▒Ир░Вр░жр░┐',
noVisitScheduled: 'р░Ор░Яр▒Бр░╡р░Вр░Яр░┐ р░бр░╛р░Хр▒Нр░Яр░░р▒Н р░╕р░Вр░жр░░р▒Нр░╢р░и р░╖р▒Жр░бр▒Нр░пр▒Вр░▓р▒Н р░Хр░╛р░▓р▒Зр░жр▒Б'
,
    frequencyOptions: [
      { value: 'once', label: 'р░Тр░Хр▒Нр░Хр░╕р░╛р░░р░┐' },
      { value: 'weekly', label: 'р░╡р░╛р░░р░╛р░ир░┐р░Хр▒Лр░╕р░╛р░░р░┐' },
      { value: 'monthly', label: 'р░ир▒Жр░▓р░Хр▒Лр░╕р░╛р░░р░┐' }
    ],
    saveReminder: 'р░░р░┐р░ор▒Ир░Вр░бр░░р▒Н р░╕р▒Зр░╡р▒Н р░Ър▒Зр░пр░Вр░бр░┐',
    streakTitle: 'ЁЯФе р░ор▒Ар░░р▒Б р░Тр░Х р░╕р▒Нр░Яр▒Нр░░р▒Ар░Хр▒НтАМр░▓р▒Л р░Йр░ир▒Нр░ир░╛р░░р▒Б!',
    streakText: 'р░╕р▒Нр░ер░┐р░░р░др▒Нр░╡р░В р░пр▒Кр░Хр▒Нр░Х р░░р▒Лр░Ьр▒Б {streak}',
    streakSubtext: 'р░Хр▒Кр░ир░╕р░╛р░Чр░┐р░Вр░Ър░Вр░бр░┐, р░ор▒Ар░░р▒Б р░Ер░жр▒Нр░нр▒Бр░др░Вр░Чр░╛ р░Ър▒Зр░╕р▒Нр░др▒Бр░ир▒Нр░ир░╛р░░р▒Б ЁЯТк',
    features: [
      { key:'journal',
        title: 'р░Ьр░░р▒Нр░ир░▓р▒Н', 
        desc: 'AI р░жр▒Нр░╡р░╛р░░р░╛ р░ир░бр░кр░мр░бр▒З р░░р▒Лр░Ьр▒Бр░╡р░╛р░░р▒А р░нр░╛р░╡р▒Лр░жр▒Нр░╡р▒Зр░Ч р░╕р░╛р░░р░╛р░Вр░╢р░╛р░▓р▒Б, р░ор▒Вр░бр▒Н р░ор░╛р░░р▒Нр░кр▒Бр░▓р░ир▒Б р░Яр▒Нр░░р░╛р░Хр▒Н р░Ър▒Зр░пр░бр░╛р░ир░┐р░Хр░┐ р░ор░░р░┐р░пр▒Б р░Ър░┐р░ир▒Нр░и р░╡р░┐р░Ьр░пр░╛р░▓р░ир▒Б р░Ьр░░р▒Бр░кр▒Бр░Хр▒Лр░╡р░бр░╛р░ир░┐р░Хр░┐ р░╕р░╣р░╛р░пр░кр░бр░др░╛р░пр░┐.',
        link: '/journal'
      },
      { key:'memoryvault',
        title: 'р░ор▒Жр░ор░░р▒А р░╡р░╛р░▓р▒Нр░Яр▒Н', 
        desc: 'р░ор▒Ир░▓р▒Бр░░р░╛р░│р▒Нр░▓р▒Б, р░нр░╛р░╡р░╛р░▓р▒Б р░ор░░р░┐р░пр▒Б р░лр▒Лр░Яр▒Лр░▓р░ир▒Б р░Тр░Хр▒З р░╕р▒Нр░ер░▓р░Вр░▓р▒Л р░╕р░Вр░░р░Хр▒Нр░╖р░┐р░Вр░Ър░Вр░бр░┐, р░ор▒Ар░░р▒Б р░Ор░кр▒Нр░кр▒Бр░бр▒Ир░ир░╛ р░др░┐р░░р░┐р░Чр░┐ р░Ър▒Вр░бр░╡р░Ър▒Нр░Ър▒Б.',
        link: '/memory-vault'
      },
      { key:'ayurveda',
        title: 'р░Жр░пр▒Бр░░р▒Нр░╡р▒Зр░жр░В', 
        desc: 'р░ор▒А р░др▒Нр░░р▒Ир░ор░╛р░╕р░┐р░Хр░В р░▓р▒Зр░жр░╛ р░кр▒Нр░░р░╕р░╡р░╛р░ир░Вр░др░░ р░Хр░╛р░▓р░╛р░ир░┐р░Хр░┐ р░нр░╛р░░р░др▒Ар░п р░Ьр▒Нр░Юр░╛р░ир░В - р░ор▒Ар░Хр▒Б р░╡р▒Нр░пр░Хр▒Нр░др░┐р░Чр░др░ор▒Ир░и р░Жр░╣р░╛р░░р░В, р░ор▒Вр░▓р░┐р░Хр░▓р▒Б р░ор░░р░┐р░пр▒Б р░Жр░Ър░╛р░░р░╛р░▓р▒Б.',
        link: '/ayurveda'
      },
      { key:'yoga',
        title: 'р░ор░╛р░др▒Г р░пр▒Лр░Чр░╛', 
        desc: 'р░ор▒А р░мр░▓р░В, р░╢р░╛р░Вр░др░┐ р░ор░░р░┐р░пр▒Б р░Ер░ир▒Бр░мр░Вр░зр░╛р░ир▒Нр░ир░┐ р░кр▒Жр░Вр░кр▒Кр░Вр░жр░┐р░Вр░Ър░бр░╛р░ир░┐р░Хр░┐ р░жр░╢р░▓ р░╡р░╛р░░р▒А р░пр▒Лр░Чр░╛ р░░р▒Кр░Яр▒Ар░ир▒Нр░▓р▒Б.',
        link: '/yoga'
      }
    ],
    exploreNow: 'р░Зр░кр▒Нр░кр▒Бр░бр▒Б р░Ер░ир▒Нр░╡р▒Зр░╖р░┐р░Вр░Ър░Вр░бр░┐',
    journal: 'р░Ьр░░р▒Нр░ир░▓р▒Н',
    memoryVault: 'р░ор▒Жр░ор░░р▒А р░╡р░╛р░▓р▒Нр░Яр▒Н',
    ayurveda: 'р░Жр░пр▒Бр░░р▒Нр░╡р▒Зр░жр░В',
    yoga: 'р░пр▒Лр░Чр░╛',
    dayStreak: 'р░░р▒Лр░Ьр▒Бр░▓ р░╕р▒Нр░Яр▒Нр░░р▒Ар░Хр▒Н',
    jananiSays: 'р░Ьр░ир░ир░┐ р░Ър▒Жр░кр▒Нр░кр░┐р░Вр░жр░┐',
    reminderError: 'р░жр░пр░Ър▒Зр░╕р░┐ р░Тр░Х р░др▒Зр░жр▒Ар░ир░┐ р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐.',
    reminderSuccess: 'р░░р░┐р░ор▒Ир░Вр░бр░░р▒Н р░╕р▒Зр░╡р▒Н р░Ър▒Зр░пр░мр░бр░┐р░Вр░жр░┐!',
    description1: "р░Ьр░ир░ир░┐ р░Жр░░р▒Лр░Чр▒Нр░пр░В р░Чр░░р▒Нр░нр░зр░╛р░░р░гр░Хр▒Б р░ор▒Бр░Вр░жр▒Б, р░Чр░░р▒Нр░нр░Хр░╛р░▓р░Вр░▓р▒Л, р░кр▒Нр░░р░╕р░╡р░╛р░ир░Вр░др░░р░В р░╕р▒Нр░ер░╛р░ир░┐р░Х р░нр░╛р░╖р░▓р▒Л р░Жр░пр▒Бр░░р▒Нр░╡р▒Зр░жр░В р░ор░░р░┐р░пр▒Б р░╕р░╛р░Вр░╕р▒Нр░Хр▒Гр░др░┐р░Х р░╕р░Вр░░р░Хр▒Нр░╖р░г р░Жр░зр░╛р░░р░┐р░д р░Пр░Р р░ор░╛р░░р▒Нр░Чр░жр░░р▒Нр░╢р░ир░╛р░ир▒Нр░ир░┐ р░ор░╣р░┐р░│р░▓р░Хр▒Б р░Ер░Вр░жр░┐р░╕р▒Нр░др▒Бр░Вр░жр░┐.",

description2: "р░Чр▒Нр░░р░╛р░ор▒Ар░г р░ор░░р░┐р░пр▒Б р░др░Хр▒Нр░Хр▒Бр░╡ р░Ър░жр▒Бр░╡р▒Бр░ир▒Нр░и р░╡р░┐р░ир░┐р░пр▒Лр░Чр░жр░╛р░░р▒Бр░▓ р░Хр▒Лр░╕р░В р░░р▒Вр░кр░Хр░▓р▒Нр░кр░и р░Ър▒Зр░пр░мр░бр░┐р░Вр░жр░┐, р░Зр░жр░┐ р░╡р░╛р░пр░┐р░╕р▒Н р░Жр░зр░╛р░░р░┐р░д р░Жр░░р▒Лр░Чр▒Нр░п р░╕р░╣р░╛р░пр░В, р░░р░┐р░ор▒Ир░Вр░бр░░р▒Нр░▓р▒Б, р░Ьр░░р▒Нр░ир░▓р░┐р░Вр░Чр▒Н р░ор░░р░┐р░пр▒Б р░нр░╛р░╡р▒Лр░жр▒Нр░╡р▒Зр░Ч р░Яр▒Нр░░р░╛р░Хр░┐р░Вр░Чр▒Н р░╡р░Вр░Яр░┐ р░лр▒Ар░Ър░░р▒Нр░▓р░ир▒Б р░Ер░Вр░жр░┐р░╕р▒Нр░др▒Бр░Вр░жр░┐ тАФ р░жр▒Ар░ир░┐ р░жр▒Нр░╡р░╛р░░р░╛ р░ор░╛р░др▒Гр░др▒Нр░╡ р░╕р░Вр░░р░Хр▒Нр░╖р░гр░ир▒Б р░╕р▒Бр░▓р░нр░др░░р░В, р░╡р▒Нр░пр░Хр▒Нр░др░┐р░Чр░др▒Ар░Хр▒Гр░др░В р░ор░░р░┐р░пр▒Б р░╕р░╛р░зр░┐р░Хр░╛р░░р░др░др▒Л р░ор░╛р░░р▒Нр░Ър▒Бр░др▒Бр░Вр░жр░┐.",

jananiSays: "р░Ьр░ир░ир░┐ р░Ър▒Жр░мр▒Бр░др▒Лр░Вр░жр░┐",
askJanani: "р░Ьр░ир░ир░┐р░ир░┐ р░Ер░бр░Чр░Вр░бр░┐...",

aiPlaceholder: "р░ор▒А р░кр▒Нр░░р░╢р▒Нр░ир░ир▒Б р░Зр░Хр▒Нр░Хр░б р░Яр▒Ир░кр▒Н р░Ър▒Зр░пр░Вр░бр░┐ р░▓р▒Зр░жр░╛ р░ор▒Ир░Хр▒Н р░ир▒Кр░Хр▒Нр░Хр░Вр░бр░┐...",
downhead: "ЁЯМ╕ р░ор▒А р░кр▒Нр░░р░пр░╛р░гр░В, р░ор░╛ р░ор░жр▒Нр░жр░др▒Б",
downcontent: "р░ор▒А р░ор░╛р░др▒Гр░др▒Нр░╡ р░кр▒Нр░░р░пр░╛р░гр░Вр░▓р▒Лр░ир░┐ р░кр▒Нр░░р░др░┐ р░Ер░бр▒Бр░Чр▒Б р░╡р░┐р░▓р▒Бр░╡р▒Ир░ир░жр░┐. р░ор▒Зр░ор▒Б р░ор▒Ар░Хр▒Б р░ор░╛р░░р▒Нр░Чр░ир░┐р░░р▒Нр░жр▒Зр░╢р░В, р░ор░жр▒Нр░жр░др▒Б р░ор░░р░┐р░пр▒Б р░Йр░др▒Нр░╕р░╡р░╛р░ир░┐р░Хр░┐ р░Зр░Хр▒Нр░Хр░б р░Йр░ир▒Нр░ир░╛р░ор▒Б."

  },'kn-IN': {
    title: 'р▓Ьр▓ир▓ир▓┐ р▓Жр▓░р│Лр▓Чр│Нр▓п',
    subtitle: 'р▓др▓╛р▓пр▓Вр▓жр▓┐р▓░р▓┐р▓Чр▓╛р▓Чр▓┐ р▓нр▓╛р▓░р▓др▓ж р▓ор│Кр▓жр▓▓ р▓зр│Нр▓╡р▓ир▓┐ р▓Жр▓зр▓╛р▓░р▓┐р▓д р▓Ор▓Р р▓╕р▓╣р▓╛р▓пр▓Чр▓╛р▓░.',
   
    checklistTitle: 'ЁЯМ╕ р▓жр│Ир▓ир▓Вр▓жр▓┐р▓и р▓Жр▓░р│Лр▓Чр│Нр▓п р▓кр▓Яр│Нр▓Яр▓┐',
    checklistItems: [
      '3 р▓▓р│Ар▓Яр▓░р│Н р▓ир│Ар▓░р│Б р▓Хр│Бр▓бр▓┐р▓пр▓┐р▓░р▓┐',
      'р▓ор▓╛р▓др│Г р▓пр│Лр▓Ч р▓ор▓╛р▓бр▓┐',
      'р▓Жр▓░р│Лр▓Чр│Нр▓пр▓Хр▓░ р▓Жр▓╣р▓╛р▓░ р▓др▓┐р▓ир│Нр▓ир▓┐р▓░р▓┐',
      'р▓кр│Нр▓░р▓╕р▓╡р▓кр│Вр▓░р│Нр▓╡ р▓Ьр│Ар▓╡р▓╕р▓др│Нр▓╡р▓Чр▓│р▓ир│Нр▓ир│Б р▓др│Жр▓Чр│Жр▓жр│Бр▓Хр│Кр▓│р│Нр▓│р▓┐',
      'р▓╢р│Нр▓╡р▓╛р▓╕р│Лр▓Ър│Нр▓Ыр│Нр▓╡р▓╛р▓╕ р▓Ер▓нр│Нр▓пр▓╛р▓╕ р▓ор▓╛р▓бр▓┐'
    ],
    reminderTitle: 'ЁЯЧУ р▓╡р│Ир▓жр│Нр▓пр▓░ р▓нр│Зр▓Яр▓┐ р▓Ьр│Нр▓Юр▓╛р▓кр▓ир│Ж',
    reminderLabel: 'р▓нр│Зр▓Яр▓┐ р▓жр▓┐р▓ир▓╛р▓Вр▓Х',
    repeatLabel: 'р▓кр│Бр▓ир▓░р▓╛р▓╡р▓░р│Нр▓др▓┐р▓╕р▓┐',
    daysRemaining: 'р▓бр▓╛р▓Хр│Нр▓Яр▓░р│Н р▓нр│Зр▓Яр▓┐ р▓ор▓╛р▓бр▓▓р│Б р▓Зр▓ир│Нр▓ир│В {days} р▓жр▓┐р▓ир▓Чр▓│р▓┐р▓╡р│Ж',
nextVisitOn: 'р▓ир▓┐р▓ор│Нр▓о р▓ор│Бр▓Вр▓жр▓┐р▓и р▓др▓кр▓╛р▓╕р▓гр│Ж {date}р▓░р▓Вр▓жр│Б р▓Зр▓жр│Ж',
visitToday: 'р▓Зр▓Вр▓жр│Б р▓ир▓┐р▓ор│Нр▓о р▓бр▓╛р▓Хр│Нр▓Яр▓░р│Н р▓нр│Зр▓Яр▓┐р▓пр▓┐р▓жр│Ж!',
visitPassed: 'р▓ир▓┐р▓ор│Нр▓о р▓бр▓╛р▓Хр│Нр▓Яр▓░р│Н р▓нр│Зр▓Яр▓┐ {days} р▓жр▓┐р▓ир▓Чр▓│ р▓╣р▓┐р▓Вр▓жр│Ж р▓ир▓бр│Жр▓пр▓┐р▓др│Б',
noVisitScheduled: 'р▓пр▓╛р▓╡р│Бр▓жр│З р▓бр▓╛р▓Хр│Нр▓Яр▓░р│Н р▓нр│Зр▓Яр▓┐ р▓ир▓┐р▓░р│Нр▓зр▓░р▓┐р▓╕р▓▓р│Нр▓кр▓Яр│Нр▓Яр▓┐р▓▓р│Нр▓▓'
,
    frequencyOptions: [
      { value: 'once', label: 'р▓Тр▓ор│Нр▓ор│Ж' },
      { value: 'weekly', label: 'р▓╕р▓╛р▓кр│Нр▓др▓╛р▓╣р▓┐р▓Х' },
      { value: 'monthly', label: 'р▓ор▓╛р▓╕р▓┐р▓Х' }
    ],
    saveReminder: 'р▓Ьр│Нр▓Юр▓╛р▓кр▓ир│Жр▓пр▓ир│Нр▓ир│Б р▓Йр▓│р▓┐р▓╕р▓┐',
    streakTitle: 'ЁЯФе р▓ир│Ар▓╡р│Б р▓╕р│Нр▓Яр│Нр▓░р│Ар▓Хр│НтАМр▓ир▓▓р│Нр▓▓р▓┐р▓жр│Нр▓жр│Ар▓░р▓┐!',
    streakText: 'р▓╕р│Нр▓ер▓┐р▓░р▓др│Жр▓п {streak}р▓ир│З р▓жр▓┐р▓и',
    streakSubtext: 'р▓ор│Бр▓Вр▓жр│Бр▓╡р▓░р▓┐р▓╕р▓┐, р▓ир│Ар▓╡р│Б р▓Ер▓жр│Нр▓нр│Бр▓др▓╡р▓╛р▓Чр▓┐ р▓ор▓╛р▓бр│Бр▓др│Нр▓др▓┐р▓жр│Нр▓жр│Ар▓░р▓┐ ЁЯТк',
    features: [
      { 
         key:'journal',
        title: 'р▓Ьр▓░р│Нр▓ир▓▓р│Н', 
        desc: 'AI р▓Ър▓╛р▓▓р▓┐р▓д р▓жр│Ир▓ир▓Вр▓жр▓┐р▓и р▓нр▓╛р▓╡р▓ир▓╛р▓др│Нр▓ор▓Х р▓╕р▓╛р▓░р▓╛р▓Вр▓╢р▓Чр▓│р│Б, р▓ор▓ир▓╕р│Нр▓ер▓┐р▓др▓┐ р▓мр▓жр▓▓р▓╛р▓╡р▓гр│Жр▓Чр▓│р▓ир│Нр▓ир│Б р▓Яр│Нр▓░р│Нр▓пр▓╛р▓Хр│Н р▓ор▓╛р▓бр▓▓р│Б р▓ор▓др│Нр▓др│Б р▓╕р▓гр│Нр▓г р▓╡р▓┐р▓Ьр▓пр▓Чр▓│р▓ир│Нр▓ир│Б р▓Жр▓Ър▓░р▓┐р▓╕р▓▓р│Б р▓╕р▓╣р▓╛р▓п р▓ор▓╛р▓бр│Бр▓др│Нр▓др▓жр│Ж.',
        link: '/journal'
      },
      {  key:'memoryvault',
        title: 'р▓ор│Жр▓ор│Кр▓░р▓┐ р▓╡р▓╛р▓▓р│Нр▓Яр│Н', 
        desc: 'р▓ор│Ир▓▓р▓┐р▓Чр▓▓р│Нр▓▓р│Бр▓Чр▓│р│Б, р▓нр▓╛р▓╡р▓ир│Жр▓Чр▓│р│Б р▓ор▓др│Нр▓др│Б р▓лр│Лр▓Яр│Лр▓Чр▓│р▓ир│Нр▓ир│Б р▓Тр▓Вр▓жр│З р▓╕р│Нр▓ер▓│р▓жр▓▓р│Нр▓▓р▓┐ р▓╕р▓Вр▓░р▓Хр│Нр▓╖р▓┐р▓╕р▓┐, р▓ир│Ар▓╡р│Б р▓пр▓╛р▓╡р▓╛р▓Ч р▓мр│Зр▓Хр▓╛р▓жр▓░р│В р▓кр│Бр▓ир▓Г р▓ир│Лр▓бр▓мр▓╣р│Бр▓жр│Б.',
        link: '/memory-vault'
      },
      {  key:'ayurveda',
        title: 'р▓Жр▓пр│Бр▓░р│Нр▓╡р│Зр▓ж', 
        desc: 'р▓ир▓┐р▓ор│Нр▓о р▓др│Нр▓░р│Ир▓ор▓╛р▓╕р▓┐р▓Х р▓Ер▓ер▓╡р▓╛ р▓кр│Нр▓░р▓╕р▓╡р│Лр▓др│Нр▓др▓░ р▓Ер▓╡р▓зр▓┐р▓Чр│Ж р▓нр▓╛р▓░р▓др│Ар▓п р▓Ьр│Нр▓Юр▓╛р▓и - р▓ир▓┐р▓ор▓Чр▓╛р▓Чр▓┐ р▓╡р│Ир▓пр▓Хр│Нр▓др▓┐р▓Хр▓Чр│Кр▓│р▓┐р▓╕р▓▓р▓╛р▓ж р▓Жр▓╣р▓╛р▓░, р▓Фр▓╖р▓зр▓┐р▓Чр▓│р│Б р▓ор▓др│Нр▓др│Б р▓Жр▓Ър▓░р▓гр│Жр▓Чр▓│р│Б.',
        link: '/ayurveda'
      },
      {  key:'yoga',
        title: 'р▓ор▓╛р▓др│Г р▓пр│Лр▓Ч', 
        desc: 'р▓ир▓┐р▓ор│Нр▓о р▓╢р▓Хр│Нр▓др▓┐, р▓╢р▓╛р▓Вр▓др▓┐ р▓ор▓др│Нр▓др│Б р▓╕р▓Вр▓кр▓░р│Нр▓Хр▓╡р▓ир│Нр▓ир│Б р▓мр│Жр▓│р│Жр▓╕р▓▓р│Б р▓╣р▓Вр▓д-р▓╡р▓╛р▓░р│Б р▓пр│Лр▓Ч р▓╡р│Нр▓пр▓╡р▓╕р│Нр▓ер│Ж.',
        link: '/yoga'
      }
    ],
    exploreNow: 'р▓Ир▓Ч р▓Ер▓ир│Нр▓╡р│Зр▓╖р▓┐р▓╕р▓┐',
    journal: 'р▓Ьр▓░р│Нр▓ир▓▓р│Н',
    memoryVault: 'р▓ор│Жр▓ор│Кр▓░р▓┐ р▓╡р▓╛р▓▓р│Нр▓Яр│Н',
    ayurveda: 'р▓Жр▓пр│Бр▓░р│Нр▓╡р│Зр▓ж',
    yoga: 'р▓пр│Лр▓Ч',
    dayStreak: 'р▓жр▓┐р▓ир▓Чр▓│ р▓╕р│Нр▓Яр│Нр▓░р│Ар▓Хр│Н',
    jananiSays: 'р▓Ьр▓ир▓ир▓┐ р▓╣р│Зр▓│р│Бр▓др│Нр▓др▓╛р▓│р│Ж',
    reminderError: 'р▓жр▓пр▓╡р▓┐р▓Яр│Нр▓Яр│Б р▓жр▓┐р▓ир▓╛р▓Вр▓Хр▓╡р▓ир│Нр▓ир│Б р▓Жр▓░р▓┐р▓╕р▓┐.',
    reminderSuccess: 'р▓Ьр│Нр▓Юр▓╛р▓кр▓ир│Жр▓пр▓ир│Нр▓ир│Б р▓Йр▓│р▓┐р▓╕р▓▓р▓╛р▓Чр▓┐р▓жр│Ж!',
    description1: "р▓Ьр▓ир▓ир▓┐ р▓Жр▓░р│Жр│Вр│Хр▓Чр│Нр▓п р▓Чр▓░р│Нр▓нр▓зр▓╛р▓░р▓гр│Жр▓Чр│Ж р▓ор│Кр▓жр▓▓р│Б, р▓Чр▓░р│Нр▓нр▓╛р▓╡р▓╕р│Нр▓ер│Ж р▓ор▓др│Нр▓др│Б р▓кр│Нр▓░р▓╕р▓╡р▓╛р▓ир▓Вр▓др▓░ р▓╕р│Нр▓ер▓│р│Ар▓п р▓нр▓╛р▓╖р│Жр▓пр▓▓р│Нр▓▓р▓┐ р▓Жр▓пр│Бр▓░р│Нр▓╡р│Зр▓ж р▓ор▓др│Нр▓др│Б р▓╕р▓╛р▓Вр▓╕р│Нр▓Хр│Гр▓др▓┐р▓Х р▓Жр▓░р│Ир▓Хр│Ж р▓Жр▓зр▓╛р▓░р▓┐р▓д р▓Ор▓Р р▓ор▓╛р▓░р│Нр▓Чр▓жр▓░р│Нр▓╢р▓ир▓╡р▓ир│Нр▓ир│Б р▓ор▓╣р▓┐р▓│р│Жр▓Чр▓│р▓┐р▓Чр│Ж р▓ир│Ар▓бр│Бр▓др│Нр▓др▓жр│Ж.",

description2: "р▓Чр│Нр▓░р▓╛р▓ор│Ар▓г р▓╣р▓╛р▓Чр│В р▓Хр▓бр▓┐р▓ор│Ж р▓╢р▓┐р▓Хр│Нр▓╖р▓гр▓ж р▓мр▓│р▓Хр│Жр▓жр▓╛р▓░р▓░р▓┐р▓Чр│Ж р▓╡р▓┐р▓ир│Нр▓пр▓╛р▓╕р▓Чр│Кр▓│р▓┐р▓╕р▓▓р▓╛р▓Чр▓┐р▓жр│Нр▓жр│Б, р▓Зр▓жр│Б р▓зр│Нр▓╡р▓ир▓┐ р▓Жр▓зр▓╛р▓░р▓┐р▓д р▓Жр▓░р│Лр▓Чр│Нр▓п р▓╕р▓╣р▓╛р▓п, р▓Ьр│Нр▓Юр▓╛р▓кр▓Хр▓Чр▓│р│Б, р▓жр▓┐р▓ир▓Ър▓░р▓┐ р▓мр▓░р│Жр▓пр│Бр▓╡р│Бр▓жр│Б р▓ор▓др│Нр▓др│Б р▓нр▓╛р▓╡р▓ир▓╛р▓др│Нр▓ор▓Х р▓Яр│Нр▓░р│Нр▓пр▓╛р▓Хр▓┐р▓Вр▓Чр│Н р▓ор│Бр▓Вр▓др▓╛р▓ж р▓╡р│Ир▓╢р▓┐р▓╖р│Нр▓Яр│Нр▓пр▓Чр▓│р▓ир│Нр▓ир│Б р▓Тр▓жр▓Чр▓┐р▓╕р│Бр▓др│Нр▓др▓жр│Ж тАФ р▓Зр▓жр│Б р▓др▓╛р▓пр▓Вр▓жр▓┐р▓░р▓┐р▓Чр│Ж р▓Жр▓░р│Ир▓Хр│Жр▓пр▓ир│Нр▓ир│Б р▓╕р│Бр▓▓р▓н, р▓╡р│Ир▓пр▓Хр│Нр▓др▓┐р▓Х р▓ор▓др│Нр▓др│Б р▓╢р▓Хр│Нр▓др▓┐р▓жр▓╛р▓пр▓Хр▓╡р▓╛р▓Чр▓┐р▓╕р│Бр▓др│Нр▓др▓жр│Ж.",

jananiSays: "р▓Ьр▓ир▓ир▓┐ р▓╣р│Жр│Хр▓│р│Бр▓др│Нр▓др▓╛р▓│р│Ж",
askJanani: "р▓Ьр▓ир▓ир▓┐р▓пр▓ир│Нр▓и р▓Хр│Зр▓│р▓┐...",

aiPlaceholder: "р▓ир▓┐р▓ор│Нр▓о р▓кр│Нр▓░р▓╢р│Нр▓ир│Жр▓пр▓ир│Нр▓ир│Б р▓Зр▓▓р│Нр▓▓р▓┐ ржЯрж╛ржЗр▓кр│Н р▓ор▓╛р▓бр▓┐ р▓Ер▓ер▓╡р▓╛ р▓ор│Ир▓Хр│Н р▓Тр▓др│Нр▓др▓┐р▓░р▓┐...",
downhead: "ЁЯМ╕ р▓ир▓┐р▓ор│Нр▓о р▓кр│Нр▓░р▓пр▓╛р▓г, р▓ир▓ор│Нр▓о р▓мр│Жр▓Вр▓мр▓▓",
downcontent: "р▓ир▓┐р▓ор│Нр▓о р▓др▓╛р▓пр▓др│Нр▓╡р▓ж р▓кр│Нр▓░р▓пр▓╛р▓гр▓ж р▓кр│Нр▓░р▓др▓┐р▓пр│Кр▓Вр▓жр│Б р▓╣р│Жр▓Ьр│Нр▓Ьр│Жр▓пр│В р▓Ер▓ор│Вр▓▓р│Нр▓пр▓╡р▓╛р▓жр▓жр│Нр▓жр│Б. р▓ор▓╛р▓░р│Нр▓Чр▓жр▓░р│Нр▓╢р▓и, р▓мр│Жр▓Вр▓мр▓▓ р▓ор▓др│Нр▓др│Б р▓╣р▓мр│Нр▓мр▓ж р▓╕р▓▓р│Бр▓╡р▓╛р▓Чр▓┐ р▓ир▓╛р▓╡р│Б р▓Зр▓▓р│Нр▓▓р▓┐ р▓Зр▓жр│Нр▓жр│Зр▓╡р│Ж."

  },'mr-IN': {
    title: 'рдЬрдирдиреА рдЖрд░реЛрдЧреНрдп',
    subtitle: 'рдорд╛рддрд╛рдВрд╕рд╛рдареА рднрд╛рд░рддрд╛рдЪрд╛ рдкрд╣рд┐рд▓рд╛ рд╡реНрд╣реЙрдЗрд╕-рдЖрдзрд╛рд░рд┐рдд рдПрдЖрдп рд╕рд╣рдХрд╛рд░реА.',
   
    checklistTitle: 'ЁЯМ╕ рджреИрдирдВрджрд┐рди рдЖрд░реЛрдЧреНрдп рддрдкрд╛рд╕рдгреА рдпрд╛рджреА',
    checklistItems: [
      '3 рд▓рд┐рдЯрд░ рдкрд╛рдгреА рдкреНрдпрд╛',
      'рдорд╛рддреГ рдпреЛрдЧрд╛ рдХрд░рд╛',
      'рдирд┐рд░реЛрдЧреА рдЖрд╣рд╛рд░ рдШреНрдпрд╛',
      'рдкреНрд░рд╕реВрддрд┐рдкреВрд░реНрд╡ рдЬреАрд╡рдирд╕рддреНрддреНрд╡реЗ рдШреНрдпрд╛',
      'рд╢реНрд╡рд╛рд╕реЛрдЪреНрдЫреНрд╡рд╛рд╕рд╛рдЪрд╛ рд╕рд░рд╛рд╡ рдХрд░рд╛'
    ],
    reminderTitle: 'ЁЯЧУ рдбреЙрдХреНрдЯрд░ рднреЗрдЯреАрдЪреА рдЖрдард╡рдг',
    reminderLabel: 'рднреЗрдЯреАрдЪреА рддрд╛рд░реАрдЦ',
    repeatLabel: 'рдкреБрдирд░рд╛рд╡реГрддреНрддреА',
    daysRemaining: 'рдбреЙрдХреНрдЯрд░рд╛рдВрдЪреНрдпрд╛ рднреЗрдЯреАрд╕рд╛рдареА рдЕрдЬреВрди {days} рджрд┐рд╡рд╕ рдЙрд░рд▓реЗ рдЖрд╣реЗрдд',
nextVisitOn: 'рддреБрдордЪреА рдкреБрдвреАрд▓ рддрдкрд╛рд╕рдгреА {date} рд░реЛрдЬреА рдЖрд╣реЗ',
visitToday: 'рдЖрдЬ рддреБрдордЪреА рдбреЙрдХреНрдЯрд░рд╛рдВрдЪреА рднреЗрдЯ рдЖрд╣реЗ!',
visitPassed: 'рддреБрдордЪреА рдбреЙрдХреНрдЯрд░рд╛рдВрдЪреА рднреЗрдЯ {days} рджрд┐рд╡рд╕рд╛рдВрдкреВрд░реНрд╡реА рдЭрд╛рд▓реА рд╣реЛрддреА',
noVisitScheduled: 'рдХреЛрдгрддреАрд╣реА рдбреЙрдХреНрдЯрд░ рднреЗрдЯ рдирд┐рдпреЛрдЬрд┐рдд рдирд╛рд╣реА'
,
    frequencyOptions: [
      { value: 'once', label: 'рдПрдХрджрд╛' },
      { value: 'weekly', label: 'рд╕рд╛рдкреНрддрд╛рд╣рд┐рдХ' },
      { value: 'monthly', label: 'рдорд╛рд╕рд┐рдХ' }
    ],
    saveReminder: 'рдЖрдард╡рдг рдЬрддрди рдХрд░рд╛',
    streakTitle: 'ЁЯФе рддреБрдореНрд╣реА рдПрдХрд╛ рд╕реНрдЯреНрд░реАрдХрд╡рд░ рдЖрд╣рд╛рдд!',
    streakText: 'рд╕рд╛рддрддреНрдпрд╛рдЪрд╛ {streak} рд╡рд╛ рджрд┐рд╡рд╕',
    streakSubtext: 'рд╕реБрд░реВ рдареЗрд╡рд╛, рддреБрдореНрд╣реА рдЕрдкреНрд░рддрд┐рдо рдХрд░рдд рдЖрд╣рд╛рдд ЁЯТк',
    features: [
      {  key:'journal',
        title: 'рдЬрд░реНрдирд▓', 
        desc: 'AI-рдЪрд╛рд▓рд┐рдд рджреИрдирдВрджрд┐рди рднрд╛рд╡рдирд┐рдХ рд╕рд╛рд░рд╛рдВрд╢, рдордирд╕реНрдерд┐рддреАрддреАрд▓ рдмрджрд▓ рдЯреНрд░реЕрдХ рдХрд░рдгреНрдпрд╛рд╕ рдЖрдгрд┐ рд▓рд╣рд╛рди рд╡рд┐рдЬрдп рд╕рд╛рдЬрд░реЗ рдХрд░рдгреНрдпрд╛рд╕ рдорджрдд рдХрд░рддреЗ.',
        link: '/journal'
      },
      {  key:'memoryvault',
        title: 'рдореЗрдорд░реА рд╡реЙрд▓реНрдЯ', 
        desc: 'рдореИрд▓рд╛рдЪреЗ рджрдЧрдб, рднрд╛рд╡рдирд╛ рдЖрдгрд┐ рдлреЛрдЯреЛ рдПрдХрд╛рдЪ рдард┐рдХрд╛рдгреА рдЬрддрди рдХрд░рд╛ рдЬреЗ рддреБрдореНрд╣реА рдХрдзреАрд╣реА рдкреБрдиреНрд╣рд╛ рдкрд╛рд╣реВ рд╢рдХрддрд╛.',
        link: '/memory-vault'
      },
      {  key:'ayurveda',
        title: 'рдЖрдпреБрд░реНрд╡реЗрдж', 
        desc: 'рддреБрдордЪреНрдпрд╛ рддреНрд░реИрдорд╛рд╕рд┐рдХ рдХрд┐рдВрд╡рд╛ рдкреНрд░рд╕реВрддреЛрддреНрддрд░ рдХрд╛рд│рд╛рд╕рд╛рдареА рднрд╛рд░рддреАрдп рдЬреНрдЮрд╛рди - рддреБрдордЪреНрдпрд╛рд╕рд╛рдареА рд╡реИрдпрдХреНрддрд┐рдХ рдХреЗрд▓реЗрд▓реЗ рдЕрдиреНрди, рдФрд╖рдзреА рдЖрдгрд┐ рд╡рд┐рдзреА.',
        link: '/ayurveda'
      },
      {  key:'yoga',
        title: 'рдорд╛рддреГ рдпреЛрдЧрд╛', 
        desc: 'рддреБрдордЪреА рд╢рдХреНрддреА, рд╢рд╛рдВрддрддрд╛ рдЖрдгрд┐ рдЬреЛрдбрдгреА рд╡рд╛рдврд╡рд┐рдгреНрдпрд╛рд╕рд╛рдареА рдЯрдкреНрдкреНрдпрд╛рдиреБрд╕рд╛рд░ рдпреЛрдЧрд╛ рд░реВрдЯреАрди.',
        link: '/yoga'
      }
    ],
    exploreNow: 'рдЖрддрд╛ рдПрдХреНрд╕рдкреНрд▓реЛрд░ рдХрд░рд╛',
    journal: 'рдЬрд░реНрдирд▓',
    memoryVault: 'рдореЗрдорд░реА рд╡реЙрд▓реНрдЯ',
    ayurveda: 'рдЖрдпреБрд░реНрд╡реЗрдж',
    yoga: 'рдпреЛрдЧрд╛',
    dayStreak: 'рджрд┐рд╡рд╕рд╛рдВрдЪрд╛ рд╕реНрдЯреНрд░реАрдХ',
    jananiSays: 'рдЬрдирдиреА рдореНрд╣рдгрддреЗ',
    reminderError: 'рдХреГрдкрдпрд╛ рддрд╛рд░реАрдЦ рдирд┐рд╡рдбрд╛.',
    reminderSuccess: 'рдЖрдард╡рдг рдЬрддрди рдХреЗрд▓реА!',
    description1: "рдЬрдирдиреА рдЖрд░реЛрдЧреНрдп рдЧрд░реНрднрдзрд╛рд░рдгрдкреВрд░реНрд╡, рдЧрд░реНрднрд╛рд╡рд╕реНрдерд╛ рдЖрдгрд┐ рдкреНрд░рд╕рд╡рд╛рдирдВрддрд░ рдорд╣рд┐рд▓рд╛рдВрдирд╛ рд╕реНрдерд╛рдирд┐рдХ рднрд╛рд╖реЗрдд, рдЖрдпреБрд░реНрд╡реЗрдж рдЖрдгрд┐ рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рдХрд╛рд│рдЬреАрд╡рд░ рдЖрдзрд╛рд░рд┐рдд рдПрдЖрдп рдорд╛рд░реНрдЧрджрд░реНрд╢рди рджреЗрддреЗ.",

description2: "рдЧреНрд░рд╛рдореАрдг рдЖрдгрд┐ рдХрдореА рд╕рд╛рдХреНрд╖рд░рддрд╛ рдЕрд╕рд▓реЗрд▓реНрдпрд╛ рд╡рд╛рдкрд░рдХрд░реНрддреНрдпрд╛рдВрд╕рд╛рдареА рдбрд┐рдЭрд╛рдЗрди рдХреЗрд▓реЗрд▓реЗ, рд╣реЗ рд╡реНрд╣реЙрдЗрд╕-рдЖрдзрд╛рд░рд┐рдд рдЖрд░реЛрдЧреНрдп рд╕рд╣рд╛рдпреНрдп, рд╕реНрдорд░рдгрдкрддреНрд░реЗ, рдЬрд░реНрдирд▓рд┐рдВрдЧ рдЖрдгрд┐ рднрд╛рд╡рдирд┐рдХ рдЯреНрд░реЕрдХрд┐рдВрдЧ рдпрд╛рдВрд╕рд╛рд░рдЦреНрдпрд╛ рд╕реБрд╡рд┐рдзрд╛ рдкреНрд░рджрд╛рди рдХрд░рддреЗ тАФ рдЬреНрдпрд╛рдореБрд│реЗ рдорд╛рддреГрддреНрд╡рд╛рдЪреА рдирд┐рдЧрд╛ рд╕реБрд▓рдн, рд╡реИрдпрдХреНрддрд┐рдХреГрдд рдЖрдгрд┐ рд╕рдХреНрд╖рдо рдмрдирддреЗ.",

jananiSays: "рдЬрдирдиреА рдореНрд╣рдгрддреЗ",
askJanani: "рдЬрдирдиреАрд▓рд╛ рд╡рд┐рдЪрд╛рд░рд╛...",

aiPlaceholder: "рдЖрдкрд▓рд╛ рдкреНрд░рд╢реНрди рдпреЗрдереЗ рдЯрд╛рдЗрдк рдХрд░рд╛ рдХрд┐рдВрд╡рд╛ рдорд╛рдпрдХреНрд░реЛрдлреЛрди рджрд╛рдмрд╛...",
downhead: "ЁЯМ╕ рддреБрдордЪрд╛ рдкреНрд░рд╡рд╛рд╕, рдЖрдордЪрд╛ рдкрд╛рдард┐рдВрдмрд╛",
downcontent: "рддреБрдордЪреНрдпрд╛ рдорд╛рддреГрддреНрд╡ рдкреНрд░рд╡рд╛рд╕рд╛рддреАрд▓ рдкреНрд░рддреНрдпреЗрдХ рдкрд╛рдКрд▓ рдЕрдореВрд▓реНрдп рдЖрд╣реЗ. рдорд╛рд░реНрдЧрджрд░реНрд╢рди, рдкрд╛рдард┐рдВрдмрд╛ рдЖрдгрд┐ рд╕рд╛рдЬрд░рд╛ рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА рдЖрдореНрд╣реА рддреБрдордЪреНрдпрд╛рд╕реЛрдмрдд рдЖрд╣реЛрдд."

  },'gu-IN': {
    title: 'ркЬркиркирлА ркЖрк░рлЛркЧрлНркп',
    subtitle: 'ркорк╛ркдрк╛ркУ ркорк╛ркЯрлЗ ркнрк╛рк░ркдркирлЛ рккрк╣рлЗрк▓рлЛ рк╡рлЛркЗрк╕ ркЖркзрк╛рк░рк┐ркд ркПркЖркЗ рк╕рк╛ркерлА.',
    
    checklistTitle: 'ЁЯМ╕ ркжрлИркирк┐ркХ ркЖрк░рлЛркЧрлНркп ркЪрлЗркХрк▓рк┐рк╕рлНркЯ',
    checklistItems: [
      '3 рк▓рк┐ркЯрк░ рккрк╛ркгрлА рккрлАркУ',
      'ркорк╛ркдрлГ ркпрлЛркЧрк╛ ркХрк░рлЛ',
      'рк╕рлНрк╡рк╕рлНрке ркЦрлЛрк░рк╛ркХ ркЦрк╛ркУ',
      'рккрлНрк░рк╕рлВркдрк┐ рккрлВрк░рлНрк╡ рк╡рк┐ркЯрк╛ркорк┐рки рк▓рлЛ',
      'рк╢рлНрк╡рк╛рк╕ рк▓рлЗрк╡рк╛ркирлА ркХрк╕рк░ркд ркХрк░рлЛ'
    ],
    reminderTitle: 'ЁЯЧУ ркбрлЙркХрлНркЯрк░ркирлА ркорлБрк▓рк╛ркХрк╛ркдркирлА ркпрк╛ркж ркЕрккрк╛рк╡ркирк╛рк░',
    reminderLabel: 'ркорлБрк▓рк╛ркХрк╛ркд ркдрк╛рк░рлАркЦ',
    repeatLabel: 'рккрлБркирк░рк╛рк╡рк░рлНркдрки',
    daysRemaining: 'ркбрлЙркХрлНркЯрк░ ркорлБрк▓рк╛ркХрк╛ркд ркорк╛ркЯрлЗ рк╣ркЬрлБ {days} ркжрк┐рк╡рк╕ ркмрк╛ркХрлА ркЫрлЗ',
nextVisitOn: 'ркдркорк╛рк░рлА ркЖркЧрк╛ркорлА ркЪркХрк╛рк╕ркгрлА {date}ркирк╛ рк░рлЛркЬ ркЫрлЗ',
visitToday: 'ркЖркЬрлЗ ркдркорк╛рк░рлА ркбрлЙркХрлНркЯрк░ ркорлБрк▓рк╛ркХрк╛ркд ркЫрлЗ!',
visitPassed: 'ркдркорк╛рк░рлА ркбрлЙркХрлНркЯрк░ ркорлБрк▓рк╛ркХрк╛ркдркирлЗ {days} ркжрк┐рк╡рк╕ ркеркИ ркЧркпрк╛',
noVisitScheduled: 'ркХрлЛркИ ркбрлЙркХрлНркЯрк░ ркорлБрк▓рк╛ркХрк╛ркд ркиркХрлНркХрлА ркиркерлА'
,
    frequencyOptions: [
      { value: 'once', label: 'ркПркХ рк╡рк╛рк░' },
      { value: 'weekly', label: 'рк╕рк╛рккрлНркдрк╛рк╣рк┐ркХ' },
      { value: 'monthly', label: 'ркорк╛рк╕рк┐ркХ' }
    ],
    saveReminder: 'рк░рк┐ркорк╛ркЗркирлНркбрк░ рк╕рлЗрк╡ ркХрк░рлЛ',
    streakTitle: 'ЁЯФе ркдркорлЗ рк╕рлНркЯрлНрк░рлАркХ рккрк░ ркЫрлЛ!',
    streakText: 'рк╕ркдркдркдрк╛ркирлЛ {streak}ркорлЛ ркжрк┐рк╡рк╕',
    streakSubtext: 'ркЪрк╛рк▓рлБ рк░рк╛ркЦрлЛ, ркдркорлЗ ркЕркжркнрлБркд ркХрк░рлА рк░рк╣рлНркпрк╛ркВ ркЫрлЛ ЁЯТк',
    features: [
      { key:'journal',
        title: 'ркЬрк░рлНркирк▓', 
        desc: 'AI-рк╕ркВркЪрк╛рк▓рк┐ркд ркжрлИркирк┐ркХ ркнрк╛рк╡ркирк╛ркдрлНркоркХ рк╕рк╛рк░рк╛ркВрк╢, ркорлВркб рк╢рк┐рклрлНркЯркирлЗ ркЯрлНрк░рлЕркХ ркХрк░рк╡рк╛ркорк╛ркВ ркЕркирлЗ ркирк╛ркирлА ркЬрлАркдрлЛ ркЙркЬрк╡рк╡рк╛ркорк╛ркВ ркоркжркж ркХрк░рлЗ ркЫрлЗ.',
        link: '/journal'
      },
      { key:'memoryvault',
        title: 'ркорлЗркорк░рлА рк╡рлЙрк▓рлНркЯ', 
        desc: 'ркорк╛ркЗрк▓рк╕рлНркЯрлЛрки, ркнрк╛рк╡ркирк╛ркУ ркЕркирлЗ рклрлЛркЯрк╛ ркПркХ ркЬркЧрлНркпрк╛ркП рк╕ркВркЧрлНрк░рк╣рлЛ ркЬрлЗркирлЗ ркдркорлЗ ркХрлЛркИрккркг рк╕ркоркпрлЗ рклрк░рлА ркЬрлЛркИ рк╢ркХрлЛ ркЫрлЛ.',
        link: '/memory-vault'
      },
      { key:'ayurveda',
        title: 'ркЖркпрлБрк░рлНрк╡рлЗркж', 
        desc: 'ркдркорк╛рк░рк╛ ркдрлНрк░рк┐ркорк╛рк╕рк┐ркХ ркЕркерк╡рк╛ рккрлНрк░рк╕рлВркдрк┐ рккркЫрлАркирк╛ рк╕ркоркп ркорк╛ркЯрлЗ ркнрк╛рк░ркдрлАркп ркЬрлНркЮрк╛рки - ркдркорк╛рк░рк╛ ркорк╛ркЯрлЗ рк╡рлНркпркХрлНркдрк┐ркЧркд ркЦрлЛрк░рк╛ркХ, ркЬркбрлАркмрлБркЯрлНркЯрлАркУ ркЕркирлЗ рк░рк┐рк╡рк╛ркЬрлЛ.',
        link: '/ayurveda'
      },
      { key:'yoga',
        title: 'ркорк╛ркдрлГ ркпрлЛркЧрк╛', 
        desc: 'ркдркорк╛рк░рлА рк╢ркХрлНркдрк┐, рк╢рк╛ркВркдрк┐ ркЕркирлЗ ркЬрлЛркбрк╛ркгркирлЗ рккрлЛрк╖рк╡рк╛ ркорк╛ркЯрлЗ ркдркмркХрлНркХрк╛рк╡рк╛рк░ ркпрлЛркЧрк╛ рк░рлБркЯрлАрки.',
        link: '/yoga'
      }
    ],
    exploreNow: 'рк╣рк╡рлЗ ркЕркирлНрк╡рлЗрк╖ркг ркХрк░рлЛ',
    journal: 'ркЬрк░рлНркирк▓',
    memoryVault: 'ркорлЗркорк░рлА рк╡рлЙрк▓рлНркЯ',
    ayurveda: 'ркЖркпрлБрк░рлНрк╡рлЗркж',
    yoga: 'ркпрлЛркЧрк╛',
    dayStreak: 'ркжрк┐рк╡рк╕рлЛркирлА рк╕рлНркЯрлНрк░рлАркХ',
    jananiSays: 'ркЬркиркирлА ркХрк╣рлЗ ркЫрлЗ',
    reminderError: 'ркХрлГрккрк╛ ркХрк░рлАркирлЗ ркдрк╛рк░рлАркЦ рккрк╕ркВркж ркХрк░рлЛ.',
    reminderSuccess: 'рк░рк┐ркорк╛ркЗркирлНркбрк░ рк╕рлЗрк╡ ркеркпрлБркВ!',
    description1: "ркЬркиркирлА ркЖрк░рлЛркЧрлНркп ркЧрк░рлНркнркзрк╛рк░ркг рккрк╣рлЗрк▓рк╛, ркЧрк░рлНркнрк╛рк╡рк╕рлНркерк╛ ркжрк░ркорк┐ркпрк╛рки ркЕркирлЗ рккрлНрк░рк╕рлВркдрк┐ рккркЫрлА ркорк╣рк┐рк▓рк╛ркУркирлЗ рк╕рлНркерк╛ркирк┐ркХ ркнрк╛рк╖рк╛ркорк╛ркВ ркЖркпрлБрк░рлНрк╡рлЗркж ркЕркирлЗ рк╕ркВрк╕рлНркХрлГркдрк┐ркХ ркжрлЗркЦркнрк╛рк│ рккрк░ ркЖркзрк╛рк░рк┐ркд ркПркЖркЗ ркорк╛рк░рлНркЧркжрк░рлНрк╢рки ркЖрккрлЗ ркЫрлЗ.",

description2: "ркЧрлНрк░рк╛ркорк┐ркг ркЕркирлЗ ркУркЫрлА рк╕рк╛ркХрлНрк╖рк░ркдрк╛ ркзрк░рк╛рк╡ркдрк╛ рк╡рккрк░рк╛рк╢ркХрк░рлНркдрк╛ркУ ркорк╛ркЯрлЗ ркбрк┐ркЭрк╛ркЗрки ркХрк░рк╡рк╛ркорк╛ркВ ркЖрк╡рлНркпрлБркВ ркЫрлЗ, ркЬрлЗркорк╛ркВ ркЕрк╡рк╛ркЬ ркЖркзрк╛рк░рк┐ркд ркЖрк░рлЛркЧрлНркп рк╕рк╣рк╛ркпркдрк╛, ркпрк╛ркж ркЕрккрк╛рк╡ркЯрлЛ, ркЬрк░рлНркирк▓рк┐ркВркЧ ркЕркирлЗ ркнрк╛рк╡ркирк╛ркдрлНркоркХ ркЯрлНрк░рлЗркХрк┐ркВркЧ ркЬрлЗрк╡рлА рк╡рк┐рк╢рлЗрк╖ркдрк╛ркУ рк╕ркорк╛рк╡рк┐рк╖рлНркЯ ркЫрлЗ тАФ ркЬрлЗркирк╛ ркжрлНрк╡рк╛рк░рк╛ ркорк╛ркдрлГркдрлНрк╡ рк╕ркВркнрк╛рк│ркирлЗ рк╕рк░рк│, рк╡рлНркпркХрлНркдрк┐ркЧркд ркЕркирлЗ рк╕рк╢ркХрлНркд ркмркирк╛рк╡рк╡рк╛ркорк╛ркВ ркЖрк╡рлЗ ркЫрлЗ.",

jananiSays: "ркЬркиркирлА ркХрк╣рлЗ ркЫрлЗ",
askJanani: "ркЬркиркирлАркирлЗ рккрлВркЫрлЛ...",

aiPlaceholder: "ркдркорк╛рк░рлЛ рккрлНрк░рк╢рлНрки ркЕрк╣рлАркВ рк▓ркЦрлЛ ркЕркерк╡рк╛ ркорк╛ркИркХрлНрк░рлЛрклрлЛрки ркжркмрк╛рк╡рлЛ...",
downhead: "ЁЯМ╕ ркдркорк╛рк░рлБркВ ркпрк╛ркдрлНрк░рк╛, ркЕркорк╛рк░рлБркВ рк╕рк╣ркпрлЛркЧ",
downcontent: "ркдркорк╛рк░рк╛ркВ ркорк╛ркдрлГркдрлНрк╡ ркпрк╛ркдрлНрк░рк╛ркирлБркВ ркжрк░рлЗркХ рккркЧркерк┐ркпрлБркВ ркЕркорлВрк▓рлНркп ркЫрлЗ. ркЕркорлЗ ркорк╛рк░рлНркЧркжрк░рлНрк╢рки, рк╕рк╣рк╛рк░рлЛ ркЕркирлЗ ркЙркЬрк╡ркгрлА ркорк╛ркЯрлЗ ркдркорк╛рк░рлА рк╕рк╛ркерлЗ ркЫрлАркП."

  },'bn-IN': {
    title: 'ржЬржиржирзА ржЖрж░рзЛржЧрзНржп',
    subtitle: 'ржорж╛ржпрж╝рзЗржжрзЗрж░ ржЬржирзНржп ржнрж╛рж░рждрзЗрж░ ржкрзНрж░ржержо ржнржпрж╝рзЗрж╕-ржнрж┐рждрзНрждрж┐ржХ ржПржЖржЗ рж╕ржЩрзНржЧрзАред',
   
    checklistTitle: 'ЁЯМ╕ ржжрзИржирж┐ржХ рж╕рзНржмрж╛рж╕рзНржерзНржп ржЪрзЗржХрж▓рж┐рж╕рзНржЯ',
    checklistItems: [
      'рзй рж▓рж┐ржЯрж╛рж░ ржЬрж▓ ржкрж╛ржи ржХрж░рзБржи',
      'ржорж╛рждрзГ ржпрзЛржЧрж╛ ржХрж░рзБржи',
      'рж╕рзНржмрж╛рж╕рзНржерзНржпржХрж░ ржЦрж╛ржмрж╛рж░ ржЦрж╛ржи',
      'ржкрзНрж░рж╕ржмржкрзВрж░рзНржм ржнрж┐ржЯрж╛ржорж┐ржи ржирж┐ржи',
      'рж╢рзНржмрж╛рж╕-ржкрзНрж░рж╢рзНржмрж╛рж╕рзЗрж░ ржЕржирзБрж╢рзАрж▓ржи ржХрж░рзБржи'
    ],
    reminderTitle: 'ЁЯЧУ ржбрж╛ржХрзНрждрж╛рж░рзЗрж░ ржнрж┐ржЬрж┐ржЯ рж░рж┐ржорж╛ржЗржирзНржбрж╛рж░',
    reminderLabel: 'ржнрж┐ржЬрж┐ржЯрзЗрж░ рждрж╛рж░рж┐ржЦ',
    repeatLabel: 'ржкрзБржирж░рж╛ржмрзГрждрзНрждрж┐',
    daysRemaining: 'ржбрж╛ржХрзНрждрж╛рж░рзЗрж░ ржнрж┐ржЬрж┐ржЯрзЗ ржПржЦржиржУ {days} ржжрж┐ржи ржмрж╛ржХрж┐',
nextVisitOn: 'ржЖржкржирж╛рж░ ржкрж░ржмрж░рзНрждрзА ржЪрзЗржХржЖржк {date} рждрж╛рж░рж┐ржЦрзЗ ржирж┐рж░рзНржзрж╛рж░рж┐ржд',
visitToday: 'ржЖржЬ ржЖржкржирж╛рж░ ржбрж╛ржХрзНрждрж╛рж░рзЗрж░ ржнрж┐ржЬрж┐ржЯ ржЖржЫрзЗ!',
visitPassed: 'ржЖржкржирж╛рж░ ржбрж╛ржХрзНрждрж╛рж░рзЗрж░ ржнрж┐ржЬрж┐ржЯ {days} ржжрж┐ржи ржЖржЧрзЗ рж╣ржпрж╝рзЗржЫрж┐рж▓',
noVisitScheduled: 'ржХрзЛржирзЛ ржбрж╛ржХрзНрждрж╛рж░рзЗрж░ ржнрж┐ржЬрж┐ржЯ ржирж┐рж░рзНржзрж╛рж░рж┐ржд ржирзЗржЗ'
,
    frequencyOptions: [
      { value: 'once', label: 'ржПржХржмрж╛рж░' },
      { value: 'weekly', label: 'рж╕рж╛ржкрзНрждрж╛рж╣рж┐ржХ' },
      { value: 'monthly', label: 'ржорж╛рж╕рж┐ржХ' }
    ],
    saveReminder: 'рж░рж┐ржорж╛ржЗржирзНржбрж╛рж░ рж╕рзЗржн ржХрж░рзБржи',
    streakTitle: 'ЁЯФе ржЖржкржирж┐ ржПржХржЯрж┐ рж╕рзНржЯрзНрж░рж┐ржХрзЗ ржЖржЫрзЗржи!',
    streakText: '{streak} ржжрж┐ржи ржзрж╛рж░рж╛ржмрж╛рж╣рж┐ржХрждрж╛',
    streakSubtext: 'ржЪрж╛рж▓рж┐ржпрж╝рзЗ ржпрж╛ржи, ржЖржкржирж┐ ржжрзБрж░рзНржжрж╛ржирзНржд ржХрж░ржЫрзЗржи ЁЯТк',
    features: [
      { key:'journal',
        title: 'ржЬрж╛рж░рзНржирж╛рж▓', 
        desc: 'AI-ржЪрж╛рж▓рж┐ржд ржжрзИржирж┐ржХ ржорж╛ржирж╕рж┐ржХ рж╕рж╛рж░рж╛ржВрж╢, ржорзЗржЬрж╛ржЬ ржкрж░рж┐ржмрж░рзНрждржи ржЯрзНрж░рзНржпрж╛ржХ ржХрж░рждрзЗ ржПржмржВ ржЫрзЛржЯ ржЬржпрж╝ ржЙржжржпрж╛ржкржи ржХрж░рждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗред',
        link: '/journal'
      },
      { key:'memoryvault',
        title: 'ржорзЗржорзЛрж░рж┐ ржнрж▓рзНржЯ', 
        desc: 'ржорж╛ржЗрж▓ржлрж▓ржХ, ржЖржмрзЗржЧ ржПржмржВ ржлржЯрзЛржЧрзБрж▓рж┐ ржПржХ ржЬрж╛ржпрж╝ржЧрж╛ржпрж╝ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рзБржи ржпрж╛ ржЖржкржирж┐ ржпрзЗржХрзЛржирзЛ рж╕ржоржпрж╝ ржЖржмрж╛рж░ ржжрзЗржЦрждрзЗ ржкрж╛рж░рзЗржиред',
        link: '/memory-vault'
      },
      { key:'ayurveda',
        title: 'ржЖржпрж╝рзБрж░рзНржмрзЗржж', 
        desc: 'ржЖржкржирж╛рж░ рждрзНрж░рзИржорж╛рж╕рж┐ржХ ржмрж╛ ржкрзНрж░рж╕ржмрзЛрждрзНрждрж░ рж╕ржоржпрж╝рзЗрж░ ржЬржирзНржп ржнрж╛рж░рждрзАржпрж╝ ржЬрзНржЮрж╛ржи - ржЖржкржирж╛рж░ ржЬржирзНржп ржмрзНржпржХрзНрждрж┐ржЧрждржХрзГржд ржЦрж╛ржмрж╛рж░, ржнрзЗрж╖ржЬ ржУ рж░рзАрждрж┐ред',
        link: '/ayurveda'
      },
      { key:'yoga',
        title: 'ржорж╛рждрзГ ржпрзЛржЧрж╛', 
        desc: 'ржЖржкржирж╛рж░ рж╢ржХрзНрждрж┐, рж╢рж╛ржирзНрждрж┐ ржПржмржВ рж╕ржВржпрзЛржЧ рж▓рж╛рж▓ржи ржХрж░рж╛рж░ ржЬржирзНржп ржкрж░рзНржпрж╛ржпрж╝ржХрзНрж░ржорж┐ржХ ржпрзЛржЧрж╛ рж░рзБржЯрж┐ржиред',
        link: '/yoga'
      }
    ],
    exploreNow: 'ржПржЦржиржЗ ржПржХрзНрж╕ржкрзНрж▓рзЛрж░ ржХрж░рзБржи',
    journal: 'ржЬрж╛рж░рзНржирж╛рж▓',
    memoryVault: 'ржорзЗржорзЛрж░рж┐ ржнрж▓рзНржЯ',
    ayurveda: 'ржЖржпрж╝рзБрж░рзНржмрзЗржж',
    yoga: 'ржпрзЛржЧрж╛',
    dayStreak: 'ржжрж┐ржирзЗрж░ рж╕рзНржЯрзНрж░рж┐ржХ',
    jananiSays: 'ржЬржиржирзА ржмрж▓рзЗржи',
    reminderError: 'ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржПржХржЯрж┐ рждрж╛рж░рж┐ржЦ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржиред',
    reminderSuccess: 'рж░рж┐ржорж╛ржЗржирзНржбрж╛рж░ рж╕рзЗржн ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ!',
    description1: "ржЬржиржирзА ржЖрж░рзЛржЧрзНржп ржЧрж░рзНржнржзрж╛рж░ржг-ржкрзВрж░рзНржм, ржЧрж░рзНржнрж╛ржмрж╕рзНржерж╛ ржУ ржкрзНрж░рж╕ржм ржкрж░ржмрж░рзНрждрзА рж╕ржоржпрж╝рзЗ ржорж╣рж┐рж▓рж╛ржжрзЗрж░ рж╕рзНржерж╛ржирзАржпрж╝ ржнрж╛рж╖рж╛ржпрж╝, ржЖржпрж╝рзБрж░рзНржмрзЗржж ржУ рж╕рж╛ржВрж╕рзНржХрзГрждрж┐ржХ ржпрждрзНржиржнрж┐рждрзНрждрж┐ржХ ржПржЖржЗ ржирж┐рж░рзНржжрзЗрж╢ржирж╛ ржжрзЗржпрж╝ред",

description2: "ржЧрзНрж░рж╛ржорж╛ржЮрзНржЪрж▓ ржПржмржВ ржХржо рж╢рж┐ржХрзНрж╖рж┐ржд ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАржжрзЗрж░ ржЬржирзНржп ржбрж┐ржЬрж╛ржЗржи ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ, ржПржЯрж┐ ржнржпрж╝рзЗрж╕-ржнрж┐рждрзНрждрж┐ржХ рж╕рзНржмрж╛рж╕рзНржерзНржп рж╕рж╣рж╛ржпрж╝рждрж╛, ржЕржирзБрж╕рзНржорж╛рж░ржХ, ржЬрж╛рж░рзНржирж╛рж▓рж┐ржВ ржПржмржВ ржЖржмрзЗржЧржЬржирж┐ржд ржЯрзНрж░рзНржпрж╛ржХрж┐ржВ-ржПрж░ ржорждрзЛ ржмрзИрж╢рж┐рж╖рзНржЯрзНржп ржкрзНрж░ржжрж╛ржи ржХрж░рзЗ тАФ ржпрж╛рж░ ржорж╛ржзрзНржпржорзЗ ржорж╛рждрзГрждрзНржмржХрж╛рж▓рзАржи ржпрждрзНржиржХрзЗ рж╕рж╣ржЬ, ржмрзНржпржХрзНрждрж┐ржЧржд ржПржмржВ рж╢ржХрзНрждрж┐рж╢рж╛рж▓рзА ржХрж░рзЗ рждрзЛрж▓рзЗред",

jananiSays: "ржЬржиржирзА ржмрж▓ржЫрзЗржи",
askJanani: "ржЬржиржирзАржХрзЗ ржЬрж┐ржЬрзНржЮрж╛рж╕рж╛ ржХрж░рзБржи...",

aiPlaceholder: "ржЖржкржирж╛рж░ ржкрзНрж░рж╢рзНржи ржПржЦрж╛ржирзЗ ржЯрж╛ржЗржк ржХрж░рзБржи ржмрж╛ ржорж╛ржЗржХрзНрж░рзЛржлрзЛржи ржЪрж╛ржкрзБржи...",
downhead: "ЁЯМ╕ ржЖржкржирж╛рж░ ржпрж╛рждрзНрж░рж╛, ржЖржорж╛ржжрзЗрж░ рж╕рж╣рж╛ржпрж╝рждрж╛",
downcontent: "ржорж╛рждрзГрждрзНржмрзЗрж░ ржкржерзЗ ржЖржкржирж╛рж░ ржкрзНрж░рждрж┐ржЯрж┐ ржкржжржХрзНрж╖рзЗржкржЗ ржЕржорзВрж▓рзНржпред ржЖржорж░рж╛ ржЖржЫрж┐ ржЖржкржирж╛ржХрзЗ ржкрже ржжрзЗржЦрж╛рждрзЗ, рж╕рж╣рж╛ржпрж╝рждрж╛ ржХрж░рждрзЗ ржПржмржВ ржЙржжржпрж╛ржкржи ржХрж░рждрзЗред"

  },'ml-IN': {
    title: 'р┤Ьр┤ир┤ир┤┐ р┤Жр┤░р╡Лр┤Чр╡Нр┤п',
    subtitle: 'р┤ор┤╛р┤др┤╛р┤Хр╡Нр┤Хр╡╛р┤Хр╡Нр┤Хр┤╛р┤пр╡Бр┤│р╡Нр┤│ р┤Зр┤ир╡Нр┤др╡Нр┤пр┤пр┤┐р┤▓р╡Ж р┤Жр┤жр╡Нр┤п р┤╢р┤мр╡Нр┤ж р┤Ер┤зр┤┐р┤╖р╡Нр┤ар┤┐р┤д р┤Ор┤Р р┤Хр╡Вр┤Яр╡Нр┤Яр╡Бр┤Хр┤╛р┤░р╡╗.',
    description1: 'р┤Ьр┤ир┤ир┤┐ р┤Жр┤░р╡Лр┤Чр╡Нр┤пр┤В р┤Чр╡╝р┤нр┤зр┤╛р┤░р┤гр┤др╡Нр┤др┤┐р┤ир╡Н р┤ор╡Бр╡╗р┤кр╡Бр┤В, р┤Чр╡╝р┤нр┤Хр┤╛р┤▓р┤др╡Нр┤др╡Бр┤В, р┤кр╡Нр┤░р┤╕р┤╡р┤др╡Нр┤др┤┐р┤ир╡Н р┤╢р╡Зр┤╖р┤╡р╡Бр┤В р┤╕р╡Нр┤др╡Нр┤░р╡Ар┤Хр╡╛р┤Хр╡Нр┤Хр╡Н р┤др┤жр╡Нр┤жр╡Зр┤╢р┤нр┤╛р┤╖р┤пр┤┐р╡╜ р┤Жр┤пр╡Бр┤░р╡НтАНр┤╡р╡Зр┤жр┤╡р╡Бр┤В р┤╕р┤╛р┤Вр┤╕р╡Нр┤Хр┤╛р┤░р┤┐р┤Х р┤кр┤░р┤┐р┤Ър┤░р┤гр┤╡р╡Бр┤ор╡Бр┤│р╡Нр┤│ р┤Ор┤Р р┤ор┤╛р╡╝р┤Чр╡Нр┤Чр┤ир┤┐р╡╝р┤жр╡Нр┤жр╡Зр┤╢р┤В р┤ир╡╜р┤Хр╡Бр┤ир╡Нр┤ир╡Б.',
    description2: 'р┤╡р╡Лр┤пр╡Нр┤╕р╡Н-р┤лр┤╕р╡Нр┤▒р╡Нр┤▒р╡Н, р┤нр┤╛р┤╖р┤╛р┤╕р╡Чр┤╣р╡Гр┤жр┤кр┤░р┤╡р╡Бр┤В р┤╡р╡Нр┤пр┤Хр╡Нр┤др┤┐р┤Чр┤др┤ор┤╛р┤п р┤Ер┤ир╡Бр┤нр┤╡р┤╡р╡Бр┤ор┤╛р┤гр╡Н. р┤Жр┤пр╡Бр┤░р╡НтАНр┤╡р╡Зр┤жр┤др╡Нр┤др┤┐р┤▓р╡НтАН р┤ир┤┐р┤ир╡Нр┤ир╡Бр┤В р┤Ур┤░р╡НтАНр┤ор┤Хр┤│р┤┐р┤▓р╡Зр┤Хр╡Нр┤Хр╡Бр┤│р╡Нр┤│ р┤пр┤╛р┤др╡Нр┤░, р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Лр┤Яр╡Кр┤кр╡Нр┤кр┤В р┤ир┤Яр┤Хр╡Нр┤Хр╡Бр┤ир╡Нр┤ир╡Б.',
    checklistTitle: 'ЁЯМ╕ р┤жр╡Ир┤ир┤Вр┤жр┤┐р┤и р┤Жр┤░р╡Лр┤Чр╡Нр┤п р┤Ър╡Жр┤Хр╡НтАМр┤▓р┤┐р┤╕р╡Нр┤▒р╡Нр┤▒р╡Н',
    checklistItems: [
      '3 р┤▓р┤┐р┤▒р╡Нр┤▒р╡╝ р┤╡р╡Жр┤│р╡Нр┤│р┤В р┤Хр╡Бр┤Яр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х',
      'р┤ор┤╛р┤др╡Гр┤др╡Нр┤╡ р┤пр╡Лр┤Ч р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х',
      'р┤Жр┤░р╡Лр┤Чр╡Нр┤пр┤Хр┤░р┤ор┤╛р┤п р┤нр┤Хр╡Нр┤╖р┤гр┤В р┤Хр┤┤р┤┐р┤Хр╡Нр┤Хр╡Бр┤Х',
      'р┤Чр╡╝р┤нр┤Хр┤╛р┤▓ р┤╡р┤┐р┤▒р╡Нр┤▒р┤╛р┤ор┤┐р┤ир╡Бр┤Хр╡╛ р┤Хр┤┤р┤┐р┤Хр╡Нр┤Хр╡Бр┤Х',
      'р┤╢р╡Нр┤╡р┤╛р┤╕р╡Лр┤кр┤╢р╡Нр┤╡р┤╛р┤╕ р┤Ер┤нр╡Нр┤пр┤╛р┤╕р┤Щр╡Нр┤Щр╡╛ р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х'
    ],
    reminderTitle: 'ЁЯЧУ р┤бр╡Лр┤Хр╡Нр┤Яр╡╝ р┤╡р┤┐р┤╕р┤┐р┤▒р╡Нр┤▒р╡Н р┤Ур╡╝р┤ор╡Нр┤ор┤┐р┤кр╡Нр┤кр┤┐р┤Хр╡Нр┤Хр╡╜',
    reminderLabel: 'р┤╡р┤┐р┤╖р┤┐р┤▒р╡Нр┤▒р┤┐р┤ир╡Нр┤▒р╡Ж р┤др╡Ар┤пр┤др┤┐',
    repeatLabel: 'р┤кр╡Бр┤ир┤░р┤╛р┤╡р╡Гр┤др╡Нр┤др┤┐',
    daysRemaining: 'р┤бр╡Лр┤Хр╡Нр┤Яр┤▒р╡Ж р┤╕р┤ир╡Нр┤жр╡╝р┤╢р┤┐р┤Хр╡Нр┤Хр┤╛р╡╗ р┤Зр┤ир┤┐ {days} р┤жр┤┐р┤╡р┤╕р┤ор┤╛р┤гр╡Н р┤мр┤╛р┤Хр╡Нр┤Хр┤┐',
nextVisitOn: 'р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤Ер┤Яр╡Бр┤др╡Нр┤д р┤кр┤░р┤┐р┤╢р╡Лр┤з {date}р┤ир┤╛р┤гр╡Н',
visitToday: 'р┤Зр┤ир╡Нр┤ир╡Н р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤бр╡Лр┤Хр╡Нр┤Яр╡╝ р┤╕р┤ир╡Нр┤жр╡╝р┤╢р┤ир┤ор┤╛р┤гр╡Н!',
visitPassed: 'р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤бр╡Лр┤Хр╡Нр┤Яр╡╝ р┤╕р┤ир╡Нр┤жр╡╝р┤╢р┤ир┤В {days} р┤жр┤┐р┤╡р┤╕р┤В р┤ор╡Бр┤ор╡Нр┤кр╡Н р┤Жр┤пр┤┐р┤░р╡Бр┤ир╡Нр┤ир╡Б',
noVisitScheduled: 'р┤Пр┤др╡Н р┤бр╡Лр┤Хр╡Нр┤Яр╡╝ р┤╕р┤ир╡Нр┤жр╡╝р┤╢р┤╡р╡Бр┤В р┤ир┤┐р┤╢р╡Нр┤Ър┤пр┤┐р┤Ър╡Нр┤Ър┤┐р┤Яр╡Нр┤Яр┤┐р┤▓р╡Нр┤▓'
,
    frequencyOptions: [
      { value: 'once', label: 'р┤Тр┤░р┤┐р┤Хр╡Нр┤Хр┤▓р╡НтАН' },
      { value: 'weekly', label: 'р┤Жр┤┤р╡Нр┤Ър┤пр┤┐р┤▓р╡НтАН р┤Тр┤ир╡Нр┤ир╡Н' },
      { value: 'monthly', label: 'р┤ор┤╛р┤╕р┤др╡Нр┤др┤┐р╡╜ р┤Тр┤ир╡Нр┤ир╡Н' }
    ],
    saveReminder: 'р┤Ур╡╝р┤ор╡Нр┤ор┤┐р┤кр╡Нр┤кр┤┐р┤Хр╡Нр┤Хр╡╜ р┤╕р╡Зр┤╡р╡Н р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х',
    streakTitle: 'ЁЯФе р┤ир┤┐р┤Щр╡Нр┤Щр╡╛ р┤Тр┤░р╡Б р┤╕р╡Нр┤Яр╡Нр┤░р╡Ар┤Хр╡Нр┤Хр┤┐р┤▓р┤╛р┤гр╡Н!',
    streakText: '{streak} р┤жр┤┐р┤╡р┤╕р┤др╡Нр┤др╡Ж р┤др╡Бр┤Яр╡╝р┤Ър╡Нр┤Ъ',
    streakSubtext: 'р┤др╡Бр┤Яр┤░р╡Бр┤Х, р┤ир┤┐р┤Щр╡Нр┤Щр╡╛ р┤Ер┤др┤┐р┤╡р┤┐р┤╢р╡Зр┤╖р┤ор┤╛р┤гр╡Н ЁЯТк',
    features: [
      { key:'journal',
        title: 'р┤Ьр╡Зр╡╝р┤гр╡╜', 
        desc: 'AI-р┤ир┤┐р╡╝р┤╡р┤╛р┤╣р┤┐р┤др┤ор┤╛р┤п р┤жр╡Ир┤ир┤Вр┤жр┤┐р┤и р┤ор┤╛р┤ир┤╕р┤┐р┤Х р┤╕р┤Вр┤Чр╡Нр┤░р┤╣р┤В, р┤ор┤ир╡Лр┤нр┤╛р┤╡ р┤╡р╡Нр┤пр┤др╡Нр┤пр┤╛р┤╕р┤Щр╡Нр┤Щр╡╛ р┤Яр╡Нр┤░р┤╛р┤Хр╡Нр┤Хр╡Н р┤Ър╡Жр┤пр╡Нр┤пр┤╛р┤ир╡Бр┤В р┤Ър╡Жр┤▒р╡Бр┤Ьр┤пр┤Щр╡Нр┤Щр╡╛ р┤Жр┤Шр╡Лр┤╖р┤┐р┤Хр╡Нр┤Хр┤╛р┤ир╡Бр┤В р┤╕р┤╣р┤╛р┤пр┤┐р┤Хр╡Нр┤Хр╡Бр┤ир╡Нр┤ир╡Б.',
        link: '/journal'
      },
      { key:'memoryvault',
        title: 'р┤ор╡Жр┤ор╡Нр┤ор┤▒р┤┐ р┤╡р┤╛р╡╛р┤Яр╡Нр┤Яр╡Н', 
        desc: 'р┤ор╡Ир╡╜р┤╕р╡Нр┤▒р╡Нр┤▒р╡Лр┤гр╡Бр┤Хр╡╛, р┤╡р┤┐р┤Хр┤╛р┤░р┤Щр╡Нр┤Щр╡╛, р┤лр╡Лр┤Яр╡Нр┤Яр╡Лр┤Хр╡╛ р┤Ор┤▓р╡Нр┤▓р┤╛р┤В р┤Тр┤░р╡З р┤Зр┤Яр┤др╡Нр┤др╡Н р┤╕р╡Вр┤Хр╡Нр┤╖р┤┐р┤Хр╡Нр┤Хр┤╛р┤В, р┤ир┤┐р┤Щр╡Нр┤Щр╡╛р┤Хр╡Нр┤Хр╡Н р┤кр┤┐р┤ир╡Нр┤ир╡Ар┤Яр╡Н р┤Ор┤кр╡Нр┤кр╡Лр┤┤р╡Бр┤В р┤Хр┤╛р┤гр┤╛р╡╗ р┤Хр┤┤р┤┐р┤пр╡Бр┤ир╡Нр┤ир╡Б.',
        link: '/memory-vault'
      },
      { key:'ayurveda',
        title: 'р┤Жр┤пр╡Бр┤░р╡НтАНр┤╡р╡Зр┤жр┤В', 
        desc: 'р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤др╡Нр┤░р╡Ир┤ор┤╛р┤╕р┤┐р┤Х р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤кр╡Нр┤░р┤╕р┤╡р┤╛р┤ир┤ир╡Нр┤др┤░ р┤Шр┤Яр╡Нр┤Яр┤Щр╡Нр┤Щр╡╛р┤Хр╡Нр┤Хр┤╛р┤пр┤┐ р┤Зр┤ир╡Нр┤др╡Нр┤пр╡╗ р┤Ьр╡Нр┤Юр┤╛р┤ир┤В - р┤нр┤Хр╡Нр┤╖р┤гр┤В, р┤Фр┤╖р┤зр┤Щр╡Нр┤Щр╡╛, р┤░р╡Ар┤др┤┐ р┤Ор┤ир╡Нр┤ир┤┐р┤╡ р┤╡р╡Нр┤пр┤Хр╡Нр┤др┤┐р┤Чр┤др┤ор┤╛р┤пр┤┐ р┤Тр┤░р╡Бр┤Хр╡Нр┤Хр╡Бр┤ир╡Нр┤ир╡Б.',
        link: '/ayurveda'
      },
      { key:'yoga',
        title: 'р┤ор┤╛р┤др╡Гр┤др╡Нр┤╡ р┤пр╡Лр┤Ч', 
        desc: 'р┤╢р┤Хр╡Нр┤др┤┐р┤пр╡Бр┤В р┤╕р┤ор┤╛р┤зр┤╛р┤ир┤╡р╡Бр┤В р┤мр┤ир╡Нр┤зр┤╡р╡Бр┤В р┤╡р┤│р╡╝р┤др╡Нр┤др╡Бр┤ир╡Нр┤и р┤Шр┤Яр╡Нр┤Яр┤╛р┤ир╡Бр┤╕р╡Гр┤д р┤пр╡Лр┤Чр┤╛ р┤▒р╡Вр┤Яр╡Нр┤Яр╡Ар╡╗.',
        link: '/yoga'
      }
    ],
    exploreNow: 'р┤Зр┤кр╡Нр┤кр╡Лр╡╛ р┤др┤ир╡Нр┤ир╡Ж р┤Ор┤Хр╡Нр┤╕р╡Нр┤кр╡Нр┤▓р╡Лр╡╝ р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х',
    journal: 'р┤Ьр╡Зр╡╝р┤гр╡╜',
    memoryVault: 'р┤ор╡Жр┤ор╡Нр┤ор┤▒р┤┐ р┤╡р┤╛р╡╛р┤Яр╡Нр┤Яр╡Н',
    ayurveda: 'р┤Жр┤пр╡Бр┤░р╡НтАНр┤╡р╡Зр┤жр┤В',
    yoga: 'р┤пр╡Лр┤Ч',
    dayStreak: 'р┤жр┤┐р┤и р┤╕р╡Нр┤Яр╡Нр┤░р╡Ар┤Хр╡Нр┤Хр╡Н',
    jananiSays: 'р┤Ьр┤ир┤ир┤┐ р┤кр┤▒р┤пр╡Бр┤ир╡Нр┤ир╡Б',
    reminderError: 'р┤жр┤пр┤╡р┤╛р┤пр┤┐ р┤Тр┤░р╡Б р┤др╡Ар┤пр┤др┤┐ р┤др┤┐р┤░р┤Юр╡Нр┤Юр╡Жр┤Яр╡Бр┤Хр╡Нр┤Хр╡Бр┤Х.',
    reminderSuccess: 'р┤Ур╡╝р┤ор╡Нр┤ор┤┐р┤кр╡Нр┤кр┤┐р┤Хр╡Нр┤Хр╡╜ р┤╕р╡Зр┤╡р╡Н р┤Ър╡Жр┤пр╡Нр┤др╡Б!',
    description1: "р┤Зр┤ир╡Нр┤др╡Нр┤пр╡╗ р┤Ер┤ор╡Нр┤ор┤ор┤╛р╡╝р┤Хр╡Нр┤Хр╡Н р┤╡р╡Зр┤гр╡Нр┤Яр┤┐ р┤Зр┤ир╡Нр┤др╡Нр┤пр┤пр┤┐р┤▓р╡Ж р┤Жр┤жр╡Нр┤пр┤др╡Нр┤др╡Ж р┤мр┤╣р╡Бр┤нр┤╛р┤╖р┤╛, р┤╢р┤мр╡Нр┤жр┤╛р┤зр┤╛р┤░р┤┐р┤др┤ор┤╛р┤п AI р┤кр┤Щр╡Нр┤Хр┤╛р┤│р┤┐. р┤Ьр┤ир┤ир┤┐ р┤Жр┤░р╡Лр┤Чр╡Нр┤п р┤Чр╡╝р┤нр┤зр┤╛р┤░р┤гр┤др╡Нр┤др┤┐р┤ир╡Н р┤ор╡Бр┤ор╡Нр┤кр╡Н, р┤Чр╡╝р┤нр┤Хр┤╛р┤▓р┤др╡Нр┤др╡Н, р┤кр╡Нр┤░р┤╕р┤╡р┤╛р┤ир┤ир╡Нр┤др┤░ р┤Хр┤╛р┤▓р┤пр┤│р┤╡р┤┐р╡╜ р┤Жр┤пр╡Бр┤░р╡НтАНр┤╡р╡Зр┤жр┤╡р╡Бр┤В р┤╕р┤╛р┤Вр┤╕р╡Нр┤Хр┤╛р┤░р┤┐р┤Х р┤кр┤░р┤┐р┤Ър┤░р┤гр┤╡р╡Бр┤ор╡Жр┤▓р╡Нр┤▓р┤╛р┤В р┤Ер┤Яр┤┐р┤╕р╡Нр┤ер┤╛р┤ир┤ор┤╛р┤Хр╡Нр┤Хр┤┐р┤пр╡Бр┤│р╡Нр┤│ р┤кр╡Нр┤░р┤╛р┤жр╡Зр┤╢р┤┐р┤Х р┤нр┤╛р┤╖р┤пр┤┐р╡╜ AI р┤╡р┤┤р┤┐р┤Хр┤╛р┤Яр╡Нр┤Яр╡╜ р┤ир╡╜р┤Хр╡Бр┤ир╡Нр┤ир╡Б.",

description2: "р┤Чр╡Нр┤░р┤╛р┤ор╡Ар┤гр┤╡р╡Бр┤В р┤Хр╡Бр┤▒р┤Ър╡Нр┤Ър╡Н р┤╡р┤╛р┤пр┤ир┤╛р┤╢р┤Хр╡Нр┤др┤┐р┤пр╡Бр┤│р╡Нр┤│р┤╡р┤░р╡Бр┤ор┤╛р┤п р┤Йр┤кр┤пр╡Лр┤Хр╡Нр┤др┤╛р┤Хр╡Нр┤Хр┤│р╡Ж р┤▓р┤Хр╡Нр┤╖р╡Нр┤пр┤ор┤╛р┤Хр╡Нр┤Хр┤┐ р┤░р╡Вр┤кр┤Хр╡╜р┤кр┤и р┤Ър╡Жр┤пр╡Нр┤др┤┐р┤░р┤┐р┤Хр╡Нр┤Хр╡Бр┤ир╡Нр┤ир┤др┤╛р┤гр┤┐р┤др╡Н. р┤╢р┤мр╡Нр┤жр┤В р┤Ер┤Яр┤┐р┤╕р╡Нр┤ер┤╛р┤ир┤ор┤╛р┤Хр╡Нр┤Хр┤┐р┤пр╡Бр┤│р╡Нр┤│ р┤Жр┤░р╡Лр┤Чр╡Нр┤пр┤╕р┤╣р┤╛р┤пр┤В, р┤Ур╡╝р┤ор╡Нр┤ор┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤др╡Нр┤др┤▓р╡Бр┤Хр╡╛, р┤Ьр╡Зр╡╝р┤гр╡╜ р┤ир┤Яр┤др╡Нр┤др╡╜, р┤ор┤╛р┤ир┤╕р┤┐р┤Х р┤Ер┤╡р┤╕р╡Нр┤ер┤пр╡Бр┤Яр╡Ж р┤ир┤┐р┤░р╡Ар┤Хр╡Нр┤╖р┤гр┤В р┤Ор┤ир╡Нр┤ир┤┐р┤╡р┤пр╡Бр┤│р╡Нр┤│ р┤╕р┤╡р┤┐р┤╢р╡Зр┤╖р┤др┤Хр╡╛ р┤Зр┤др┤┐р╡╜ р┤Йр╡╛р┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤др╡Нр┤др┤┐р┤пр┤┐р┤Яр╡Нр┤Яр╡Бр┤гр╡Нр┤Яр╡Н тАФ р┤Зр┤др╡Н р┤ор┤╛р┤др╡Гр┤др╡Нр┤╡ р┤кр┤░р┤┐р┤Ър┤░р┤гр┤др╡Нр┤др╡Ж р┤Хр╡Вр┤Яр╡Бр┤др╡╜ р┤Ор┤│р╡Бр┤кр╡Нр┤кр┤ор┤╛р┤Хр╡Нр┤Хр┤┐р┤пр╡Бр┤В р┤╡р╡Нр┤пр┤Хр╡Нр┤др┤┐р┤Чр┤др┤╡р╡Бр┤ор┤╛р┤пр╡Бр┤В р┤╢р┤Хр╡Нр┤др┤┐р┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤др╡Нр┤др┤┐р┤пр╡Бр┤ор┤╛р┤гр╡Н р┤ор┤╛р┤▒р╡Нр┤▒р╡Бр┤ир╡Нр┤ир┤др╡Н.",

jananiSays: "р┤Ьр┤ир┤ир┤┐ р┤кр┤▒р┤пр╡Бр┤ир╡Нр┤ир╡Б",
askJanani: "р┤Ьр┤ир┤ир┤┐р┤пр╡Лр┤Яр╡Н р┤Ър╡Лр┤жр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х...",

aiPlaceholder: "р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤Ър╡Лр┤жр╡Нр┤пр┤В р┤Зр┤╡р┤┐р┤Яр╡Ж р┤Яр╡Ир┤кр╡Нр┤кр╡Н р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤ор╡Ир┤Хр╡Нр┤Хр╡Н р┤Ер┤ор╡╝р┤др╡Нр┤др╡Бр┤Х...",
downhead: "ЁЯМ╕ р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤пр┤╛р┤др╡Нр┤░, р┤Юр┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤кр┤┐р┤ир╡Нр┤др╡Бр┤г",
downcontent: "р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤ор┤╛р┤др╡Гр┤др╡Нр┤╡ р┤пр┤╛р┤др╡Нр┤░р┤пр┤┐р┤▓р╡Ж р┤Ур┤░р╡Л р┤кр┤Яр┤┐р┤пр╡Бр┤ор┤╛р┤гр╡Н р┤╡р┤┐р┤▓р┤кр╡Нр┤кр╡Жр┤Яр╡Нр┤Яр┤др╡Н. р┤ир┤┐р┤Щр╡Нр┤Щр╡╛р┤Хр╡Нр┤Хр╡Н р┤Юр┤Щр╡Нр┤Щр╡╛ р┤╡р┤┤р┤┐р┤Хр┤╛р┤Яр╡Нр┤Яр┤╛р┤ир╡Бр┤В, р┤кр┤┐р┤ир╡Нр┤др╡Бр┤г р┤ир╡╜р┤Хр┤╛р┤ир╡Бр┤В, р┤Жр┤╣р╡Нр┤▓р┤╛р┤жр┤┐р┤кр╡Нр┤кр┤┐р┤Хр╡Нр┤Хр┤╛р┤ир╡Бр┤В р┤Зр┤╡р┤┐р┤Яр╡Ж р┤Йр┤гр╡Нр┤Яр┤╛р┤Хр╡Бр┤ир╡Нр┤ир╡Б."

  },'pa-IN': {
    title: 'риЬриириирйА риЖри░рйЛриЧри┐риЖ',
    subtitle: 'риори╛ри╡ри╛риВ ри▓риИ ринри╛ри░рид рижри╛ рикри╣ри┐ри▓ри╛ ри╡ри╛риЗри╕-риЕризри╛ри░рид риПриЖриИ ри╕ри╛риерйАред',
  
    checklistTitle: 'ЁЯМ╕ ри░рйЛриЬри╝ри╛риири╛ ри╕ри┐ри╣рид риЪрйИрй▒риХри▓ри┐ри╕риЯ',
    checklistItems: [
      '3 ри▓рйАриЯри░ рикри╛ригрйА рикрйАриУ',
      'риори╛ридри╛ рипрйЛриЧ риХри░рйЛ',
      'ри╕ри┐ри╣ридриорй░риж риЦри╛ригри╛ риЦри╛риУ',
      'риЧри░ринрикрйВри░ри╡ ри╡риЯри╛риори┐рии ри▓ри╡рйЛ',
      'ри╕ри╛ри╣ ри▓рйИриг рижрйЗ риЕринри┐риЖри╕ риХри░рйЛ'
    ],
    reminderTitle: 'ЁЯЧУ рибри╛риХриЯри░ рижрйМри░рйЗ рижрйА рипри╛риж рижри┐ри╡ри╛риИ',
    reminderLabel: 'риори┐ри▓риг рижрйА ридри╛ри░рйАриЦ',
    repeatLabel: 'рижрйБри╣ри░ри╛риЙригри╛',
    daysRemaining: 'рибри╛риХриЯри░ рижрйА риорйБри▓ри╛риХри╛рид ри▓риИ ри╣рйЛри░ {days} рижри┐рии римри╛риХрйА ри╣рии',
nextVisitOn: 'ридрйБри╣ри╛рибрйА риЕриЧри▓рйА риЬри╛риВриЪ {date} риирйВрй░ ри╣рйИ',
visitToday: 'риЕрй▒риЬ ридрйБри╣ри╛рибрйА рибри╛риХриЯри░ риири╛ри▓ риорйБри▓ри╛риХри╛рид ри╣рйИ!',
visitPassed: 'ридрйБри╣ри╛рибрйА рибри╛риХриЯри░ рижрйА риорйБри▓ри╛риХри╛рид {days} рижри┐рии рикри╣ри┐ри▓ри╛риВ ри╣рйЛриИ ри╕рйА',
noVisitScheduled: 'риХрйЛриИ ри╡рйА рибри╛риХриЯри░ рижрйА риорйБри▓ри╛риХри╛рид риири┐риприд риири╣рйАриВ риХрйАридрйА риЧриИ'
,
    frequencyOptions: [
      { value: 'once', label: 'риЗрй▒риХ ри╡ри╛ри░рйА' },
      { value: 'weekly', label: 'ри╣рилридри╛ри╡ри╛ри░' },
      { value: 'monthly', label: 'риори╛ри╕ри┐риХ' }
    ],
    saveReminder: 'ри░рйАриори╛риИриВрибри░ ри╕рйЗри╡ риХри░рйЛ',
    streakTitle: 'ЁЯФе ридрйБри╕рйАриВ риЗрй▒риХ ри╕риЯрйНри░рйАриХ тАЩридрйЗ ри╣рйЛ!',
    streakText: '{streak} рижри┐риири╛риВ рижрйА ри▓риЧри╛ридри╛ри░ридри╛',
    streakSubtext: 'риЬри╛ри░рйА ри░рй▒риЦрйЛ, ридрйБри╕рйАриВ ри╕ри╝ри╛риирижри╛ри░ риХри░ ри░ри╣рйЗ ри╣рйЛ ЁЯТк',
    features: [
      { key:'journal',
        title: 'риЬри░риири▓', 
        desc: 'риПриЖриИ-риЪри▓ри┐рид ри░рйЛриЬри╝ри╛риири╛ риори╛риири╕ри┐риХ ри╕рй░риЦрйЗрик, риорйВриб римрижри▓ри╛риЕ риирйВрй░ риЯри░рйИриХ риХри░рии риЕридрйЗ риЫрйЛриЯрйАриЖриВ риЦрйБри╕ри╝рйАриЖриВ риориири╛риЙриг ри╡ри┐рй▒риЪ риорижриж риХри░рижри╛ ри╣рйИред',
        link: '/journal'
      },
      { key:'memoryvault',
        title: 'риорйИриорйЛри░рйА ри╡ри╛ри▓риЯ', 
        desc: 'риориирйЛри░рие, ринри╛ри╡риири╛ ридрйЗ рилрйЛриЯрйЛриЖриВ риирйВрй░ риЗрй▒риХ риери╛риВ ри╕рй░ринри╛ри▓рйЛ риЬрйЛ ридрйБри╕рйАриВ риХри┐ри╕рйЗ ри╡рйА ри╕риорйЗриВ ри╡ри╛рикри╕ рижрйЗриЦ ри╕риХрижрйЗ ри╣рйЛред',
        link: '/memory-vault'
      },
      { key:'ayurveda',
        title: 'риЖрипрйБри░ри╡рйЗриж', 
        desc: 'ридрйБри╣ри╛рибрйЗ ридри┐риори╛ри╣рйА риЬри╛риВ риЬригрио ридрйЛриВ римри╛риЕриж рижрйЗ рикрйЬри╛риЕ ри▓риИ ринри╛ри░ридрйА риЧри┐риЖрии - ри╡ри┐риЕриХридрйАриЧрид ринрйЛриЬрии, риЬрйЬрйАриЖриВ риЕридрйЗ ри░ри┐ри╡ри╛риЬред',
        link: '/ayurveda'
      },
      { key:'yoga',
        title: 'риори╛ридри╛ рипрйЛриЧ', 
        desc: 'ридри╛риХрид, ри╕ри╝ри╛риВридрйА риЕридрйЗ риЬрйБрйЬри╛риЕ риирйВрй░ рикри╛ри▓риг ри▓риИ рикрйЬри╛риЕ риЕриирйБри╕ри╛ри░ рипрйЛриЧ ри░рйВриЯрйАрииред',
        link: '/yoga'
      }
    ],
    exploreNow: 'ри╣рйБригрйЗ риРриХри╕рикри▓рйЛри░ риХри░рйЛ',
    journal: 'риЬри░риири▓',
    memoryVault: 'риорйИриорйЛри░рйА ри╡ри╛ри▓риЯ',
    ayurveda: 'риЖрипрйБри░ри╡рйЗриж',
    yoga: 'рипрйЛриЧ',
    dayStreak: 'рижри┐рии ри╕риЯрйНри░рйАриХ',
    jananiSays: 'риЬриириирйА риХри╣ри┐рй░рижрйА ри╣рйИ',
    reminderError: 'риХри┐ри░рикри╛ риХри░риХрйЗ риЗрй▒риХ ридри╛ри░рйАриЦ риЪрйБригрйЛред',
    reminderSuccess: 'ри░рйАриори╛риИриВрибри░ ри╕рйЗри╡ риХри░ рижри┐рй▒ридри╛ риЧри┐риЖ ри╣рйИ!',
    description1: "риЬриириирйА риЖри░рйЛриЧри┐риЖ риЧри░рин ризри╛ри░риг ридрйЛриВ рикри╣ри┐ри▓ри╛риВ, риЧри░рин риЕри╡ри╕риери╛ рижрйМри░ри╛рии риЕридрйЗ рибри┐ри▓ри┐ри╡ри░рйА ридрйЛриВ римри╛риЕриж риори╣ри┐ри▓ри╛ри╡ри╛риВ риирйВрй░ рижрйЗри╕рйА ринри╛ри╕ри╝ри╛ ри╡ри┐рй▒риЪ риЖрипрйБри░ри╡рйЗриж риЕридрйЗ ри╕рй▒ринри┐риЖриЪри╛ри░риХ рижрйЗриЦринри╛ри▓ риЕризри╛ри░ри┐рид риПриЖриИ ри░ри╛ри╣риирйБриори╛риИ рижри┐рй░рижри╛ ри╣рйИред",

description2: "рикрйЗриВрибрйВ риЕридрйЗ риШрй▒риЯ ри╕ри┐рй▒риЦри┐риЖ ри╡ри╛ри▓рйЗ риЙрикринрйЛриЧридри╛ри╡ри╛риВ ри▓риИ рибри┐риЬри╝ри╛риИрии риХрйАридри╛ риЧри┐риЖ, риЗри╣ риЖри╡ри╛риЬри╝-риЕризри╛ри░рид ри╕ри┐ри╣рид ри╕ри╣ри╛риЗридри╛, рипри╛риж рижри┐ри▓ри╛риЙриг ри╡ри╛ри▓рйАриЖриВ ри╕рйЗри╡ри╛ри╡ри╛риВ, риЬри░риири▓ри┐рй░риЧ риЕридрйЗ ринри╛ри╡риири╛ридриориХ риЯри░рйИриХри┐рй░риЧ ри╡ри░риЧрйАриЖриВ ри╡ри┐ри╕ри╝рйЗри╕ри╝ридри╛ри╡ри╛риВ рикрйНри░рижри╛рии риХри░рижри╛ ри╣рйИ тАФ риЬри┐ри╕ риири╛ри▓ риори╛ридри╛-ри╕рй░ринри╛ри▓ риЖри╕ри╛рии, риири┐рй▒риЬрйА риЕридрйЗ ри╕ри╝риХридрйАри╕ри╝ри╛ри▓рйА римригрижрйА ри╣рйИред",

jananiSays: "риЬриириирйА риХри╣ри┐рй░рижрйА ри╣рйИ",
askJanani: "риЬриириирйА риирйВрй░ рикрйБрй▒риЫрйЛ...",

aiPlaceholder: "риЖрикригри╛ ри╕ри╡ри╛ри▓ риЗрй▒риерйЗ ри▓ри┐риЦрйЛ риЬри╛риВ риори╛риИриХ рижримри╛риУ...",
downhead: "ЁЯМ╕ ридрйБри╣ри╛рибрйА рипри╛ридри░ри╛, ри╕ри╛рибри╛ ри╕ри╣ри┐рипрйЛриЧ",
downcontent: "риори╛ридри╛ римригрии рижрйА ридрйБри╣ри╛рибрйА ри╣ри░ риЗриХ риХрижрио риХрйАриоридрйА ри╣рйИред риЕри╕рйАриВ ридрйБри╣ри╛рибрйА риорижриж, ри╕ри╣ри┐рипрйЛриЧ риЕридрйЗ риЦрйБри╕ри╝рйА риориири╛риЙриг ри▓риИ риЗрй▒риерйЗ ри╣ри╛риВред"

  }


    // Continue for other languages
  };
  // Animation variants
const containerVariants = {
  hidden: { opacity: 0, y: 20 },
  visible: {
    opacity: 1,
    y: 0,
    transition: {
      duration: 0.6,
      staggerChildren: 0.1
    }
  }
};

const itemVariants = {
  hidden: { opacity: 0, y: 20 },
  visible: {
    opacity: 1,
    y: 0,
    transition: { duration: 0.4 }
  }
};

const cardHoverVariants = {
  rest: { scale: 1, y: 0 },
  hover: { 
    scale: 1.02, 
    y: -5,
    transition: {
      duration: 0.2,
      type: "spring",
      stiffness: 400,
      damping: 10
    }
  }
};

const pulseVariants = {
  pulse: {
    scale: [1, 1.05, 1],
    transition: {
      duration: 2,
      repeat: Infinity,
      ease: "easeInOut"
    }
  }
};

function Dashboard() {
  const [aiReply, setAiReply] = useState('');
  const [stage, setStage] = useState('');
  const [checks, setChecks] = useState([]);
  const [streak, setStreak] = useState(0);
  const [reminderDate, setReminderDate] = useState('');
  const [reminderFreq, setReminderFreq] = useState('once');
  const [msg, setMsg] = useState(null);
  const [showConfetti, setShowConfetti] = useState(false);
  const [language, setLanguage] = useState('en-IN');
  const [translations, setTranslations] = useState(TRANSLATIONS['en-IN']);
  const [nextVisitDate, setNextVisitDate] = useState(null);
  const [isAiReplying, setIsAiReplying] = useState(false);
  
  const auth = getAuth();
  const navigate = useNavigate();
  const { width, height } = useWindowSize();

  // Load saved reminder function
  const loadSavedReminder = async () => {
    const user = auth.currentUser;
    if (!user) return;
    
    try {
      const reminderRef = collection(db, 'users', user.uid, 'reminders');
      const querySnapshot = await getDocs(reminderRef);
      
      if (!querySnapshot.empty) {
        let latestReminder = null;
        querySnapshot.forEach((doc) => {
          const data = doc.data();
          if (!latestReminder || new Date(data.date) > new Date(latestReminder.date)) {
            latestReminder = data;
          }
        });
        
        if (latestReminder) {
          setReminderDate(latestReminder.date);
          setReminderFreq(latestReminder.frequency || 'once');
        }
      }
    } catch (error) {
      console.error("Error loading reminders:", error);
    }
  };

  // Calculate days remaining effect
  useEffect(() => {
    if (!reminderDate) return;
    
    const today = dayjs();
    const visitDate = dayjs(reminderDate);
    const daysDiff = visitDate.diff(today, 'day');
    
    setNextVisitDate({
      date: visitDate.format('DD MMMM YYYY'),
      daysRemaining: daysDiff
    });
  }, [reminderDate]);

  // Load language preference
  useEffect(() => {
    const savedLang = localStorage.getItem('lang') || 'en-IN';
    setLanguage(savedLang);
    setTranslations(TRANSLATIONS[savedLang] || TRANSLATIONS['en-IN']);
  }, []);

  // Load checklist items
  const CHECK_ITEMS = translations.checklistItems;
  const todayKey = () => `checklist_${new Date().toISOString().split('T')[0]}`;

  useEffect(() => {
    const key = todayKey();
    const saved = JSON.parse(localStorage.getItem(key) || '[]');
    if (Array.isArray(saved) && saved.length === CHECK_ITEMS.length) {
      setChecks(saved);
    } else {
      const fresh = Array(CHECK_ITEMS.length).fill(false);
      setChecks(fresh);
      localStorage.setItem(key, JSON.stringify(fresh));
    }
  }, [CHECK_ITEMS.length]);

  // Auth state and initial data loading
  useEffect(() => {
    const unsub = auth.onAuthStateChanged(async (user) => {
      if (user) {
        await loadSavedReminder();
        const snap = await getDoc(doc(db, 'users', user.uid));
        if (snap.exists()) {
          const d = snap.data();
          setStage(d.stage || 'prepregnancy');
          setStreak(d.streak || 0);
        }
      }
    });
    return () => unsub();
  }, [auth]);

  const triggerCelebration = () => {
    setShowConfetti(true);
    setTimeout(() => setShowConfetti(false), 5000);
  };

  const updateStreakInFirestore = async () => {
    const user = auth.currentUser;
    if (!user) return;
    const ref = doc(db, 'users', user.uid);
    const snap = await getDoc(ref);
    if (!snap.exists()) return;

    const today = dayjs().format('YYYY-MM-DD');
    const yesterday = dayjs().subtract(1, 'day').format('YYYY-MM-DD');
    const data = snap.data();

    if (data.lastCheckinDate === today) return;
    const newStreak = data.lastCheckinDate === yesterday ? (data.streak || 0) + 1 : 1;

    await updateDoc(ref, { streak: newStreak, lastCheckinDate: today });
    setStreak(newStreak);
  };

  const getVisitStatusText = () => {
    if (!nextVisitDate) return translations.noVisitScheduled;
    
    const { date, daysRemaining } = nextVisitDate;
    
    if (daysRemaining === 0) {
      return translations.visitToday;
    } else if (daysRemaining > 0) {
      return (
        <>
          <div className="text-xl font-semibold text-pink-600">
            {translations.daysRemaining.replace('{days}', daysRemaining)}
          </div>
          <div className="text-sm text-pink-400 mt-1">
            {translations.nextVisitOn.replace('{date}', date)}
          </div>
        </>
      );
    } else {
      return translations.visitPassed.replace('{days}', Math.abs(daysRemaining));
    }
  };

  const saveReminder = async () => {
    const user = auth.currentUser;
    if (!user) return;
    if (!reminderDate) {
      setMsg({ type: 'error', text: translations.reminderError || 'Please pick a date.' });
      return;
    }
    try {
      const reminderRef = doc(collection(db, 'users', user.uid, 'reminders'));
      await setDoc(reminderRef, {
        id: reminderRef.id,
        email: user.email,
        date: reminderDate,
        frequency: reminderFreq,
        createdAt: new Date().toISOString()
      });
      
      setMsg({ type: 'success', text: translations.reminderSuccess || 'Reminder saved!' });
      setTimeout(() => setMsg(null), 3000);
    } catch (err) {
      console.error(err);
      setMsg({ type: 'error', text: translations.reminderError || 'Could not save reminder.' });
    }
  };

  const handleAiReply = (reply) => {
    setIsAiReplying(true);
    setTimeout(() => {
      setAiReply(reply);
      setIsAiReplying(false);
    }, 500);
  };

  const getAyurvedaPath = () =>
    stage === 'prepregnancy'
      ? '/preconception-ayurveda'
      : stage === 'pregnancy'
      ? '/pregnancy-ayurveda'
      : '/post-ayurveda';

  const getYogaPath = () =>
    stage === 'prepregnancy'
      ? '/preconception-yoga'
      : stage === 'pregnancy'
      ? '/pregnancy-yoga'
      : '/post-yoga';

  return (
    <div className="min-h-screen bg-gradient-to-br from-pink-50 via-rose-50 to-pink-100 relative overflow-x-hidden">
      {/* Animated Background Elements */}
      <div className="absolute inset-0 overflow-hidden pointer-events-none">
        <motion.div 
          className="absolute top-20 left-10 w-20 h-20 bg-pink-200 rounded-full opacity-30"
          animate={{
            y: [-20, 20, -20],
            x: [-10, 10, -10],
          }}
          transition={{
            duration: 6,
            repeat: Infinity,
            ease: "easeInOut"
          }}
        />
        <motion.div 
          className="absolute top-40 right-20 w-16 h-16 bg-rose-200 rounded-full opacity-40"
          animate={{
            y: [20, -20, 20],
            x: [10, -10, 10],
          }}
          transition={{
            duration: 8,
            repeat: Infinity,
            ease: "easeInOut"
          }}
        />
        <motion.div 
          className="absolute bottom-40 left-1/4 w-12 h-12 bg-pink-300 rounded-full opacity-20"
          animate={{
            y: [-15, 15, -15],
            rotate: [0, 360],
          }}
          transition={{
            duration: 10,
            repeat: Infinity,
            ease: "easeInOut"
          }}
        />
      </div>

      {/* Enhanced Navbar */}
      <motion.nav 
        initial={{ y: -100 }}
        animate={{ y: 0 }}
        transition={{ duration: 0.6 }}
        className="bg-white/80 backdrop-blur-md shadow-lg sticky top-0 z-50 px-6 py-4 flex justify-between items-center border-b border-pink-200"
      >
        <motion.h1 
          className="text-3xl font-extrabold bg-gradient-to-r from-pink-600 to-rose-600 bg-clip-text text-transparent tracking-wide"
          whileHover={{ scale: 1.05 }}
        >
          {translations.title}
        </motion.h1>
        <div className="flex gap-4 items-center text-sm font-semibold text-gray-700">
          {streak > 0 && (
            <motion.span 
              className="bg-gradient-to-r from-yellow-100 to-orange-100 text-orange-800 px-3 py-1 rounded-full text-xs shadow-md"
              variants={pulseVariants}
              animate="pulse"
            >
                ЁЯФе {streak}-{translations.dayStreak || 'day Streak'}
            </motion.span>
          )}
          <motion.button 
            onClick={() => navigate('/journal')} 
            className="hover:text-pink-600 transition-colors duration-200"
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
          >
             {translations.journal || 'Journal'}
          </motion.button>
          <motion.button 
            onClick={() => navigate('/memory-vault')} 
            className="hover:text-pink-600 transition-colors duration-200"
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
          >
            {translations.memoryVault || 'Memory Vault'}
          </motion.button>
          <motion.button 
            onClick={() => navigate(getAyurvedaPath())} 
            className="hover:text-pink-600 transition-colors duration-200"
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
          >
             {translations.ayurveda || 'Ayurveda'}
          </motion.button>
          <motion.button 
            onClick={() => navigate(getYogaPath())} 
            className="hover:text-pink-600 transition-colors duration-200"
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
          >
            {translations.yoga || 'Yoga'}
          </motion.button>
          <motion.button 
            onClick={() => navigate('/profile')} 
            className="w-10 h-10 bg-gradient-to-r from-pink-100 to-rose-100 text-pink-700 rounded-full flex items-center justify-center hover:shadow-lg transition-all duration-200"
            whileHover={{ scale: 1.1 }}
            whileTap={{ scale: 0.9 }}
          >
            ЁЯСд
          </motion.button>
        </div>
      </motion.nav>

      {/* Enhanced Hero Section */}
      <motion.section
        variants={containerVariants}
        initial="hidden"
        animate="visible"
        className="max-w-7xl mx-auto mt-8 bg-white/70 backdrop-blur-sm border border-pink-200 rounded-3xl shadow-2xl p-12 flex flex-col md:flex-row items-center gap-10 hover:shadow-pink-200 transition-all duration-500"
      >
        <motion.div 
          variants={itemVariants}
          className="flex-1"
        >
          <motion.h2 
            className="text-5xl font-bold bg-gradient-to-r from-pink-700 to-rose-700 bg-clip-text text-transparent mb-6 leading-tight"
            initial={{ opacity: 0, x: -50 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ delay: 0.3, duration: 0.8 }}
          >
            {translations.subtitle}
          </motion.h2>
          <motion.p 
            className="text-gray-700 mb-4 leading-relaxed text-lg"
            initial={{ opacity: 0, x: -30 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ delay: 0.5, duration: 0.8 }}
          >
            {translations.description1}
          </motion.p>
          <motion.p 
            className="text-gray-700 text-lg"
            initial={{ opacity: 0, x: -30 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ delay: 0.7, duration: 0.8 }}
          >
            {translations.description2}
          </motion.p>
        </motion.div>
        <motion.div
          variants={itemVariants}
          whileHover={{ scale: 1.05 }}
          className="relative"
        >
          <div className="absolute inset-0 bg-gradient-to-r from-pink-200 to-rose-200 rounded-xl blur-xl opacity-30"></div>
          <img 
            src={HeroImage} 
            alt="Hero" 
            className="relative w-full md:w-80 rounded-xl shadow-2xl object-cover" 
          />
        </motion.div>
      </motion.section>

   {/* Enhanced AI Input Section - No Continuous Movement */}
<motion.div 
  className="mt-12 px-4"
  initial={{ opacity: 0, y: 50 }}
  animate={{ opacity: 1, y: 0 }}
  transition={{ delay: 0.8, duration: 0.8 }}
>
  <div className="max-w-4xl mx-auto mb-8">
    <div className="bg-gradient-to-r from-pink-500 to-rose-500 p-8 rounded-2xl shadow-2xl">
      
      <motion.h2 
        className="text-3xl font-bold text-white text-center mb-6"
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 1, duration: 0.6 }}
      >
        ЁЯТм {translations.askJanani}
      </motion.h2>

      <motion.div 
        className="bg-white/20 backdrop-blur-sm rounded-xl p-6 border border-white/30"
        initial={{ opacity: 0, scale: 0.9 }}
        animate={{ opacity: 1, scale: 1 }}
        transition={{ delay: 1.2, duration: 0.6 }}
      >
        <InputSection onReply={handleAiReply} />
      </motion.div>

    </div>
  </div>
</motion.div>

        {/* Enhanced AI Reply Section */}
        <div className="max-w-4xl mx-auto mb-8 min-h-[10px] transition-all duration-500">
  <motion.div
    initial={{ opacity: 0 }}
    animate={{ opacity: aiReply || isAiReplying ? 1 : 0 }}
    transition={{ duration: 0.4 }}
    className={`bg-white/90 backdrop-blur-sm border-2 border-pink-200 rounded-2xl shadow-xl p-8 transition-all duration-300 ${
      aiReply || isAiReplying ? 'block' : 'hidden'
    }`}
  >
    <div className="flex items-center gap-3 mb-4">
      <div className="w-10 h-10 bg-gradient-to-r from-pink-500 to-rose-500 rounded-full flex items-center justify-center">
        <span className="text-white font-bold">J</span>
      </div>
      <h3 className="text-xl font-semibold text-pink-600">
        {translations.jananiSays}
      </h3>
    </div>

    {isAiReplying ? (
      <div className="flex items-center gap-2 text-gray-600">
        <div className="flex gap-1">
          <motion.div
            className="w-2 h-2 bg-pink-400 rounded-full"
            animate={{ scale: [1, 1.5, 1] }}
            transition={{ duration: 1, repeat: Infinity, repeatType: "loop", delay: 0 }}
          />
          <motion.div
            className="w-2 h-2 bg-pink-400 rounded-full"
            animate={{ scale: [1, 1.5, 1] }}
            transition={{ duration: 1, repeat: Infinity, repeatType: "loop", delay: 0.2 }}
          />
          <motion.div
            className="w-2 h-2 bg-pink-400 rounded-full"
            animate={{ scale: [1, 1.5, 1] }}
            transition={{ duration: 1, repeat: Infinity, repeatType: "loop", delay: 0.4 }}
          />
        </div>
        <span className="text-sm">Janani is thinking...</span>
      </div>
    ) : (
      <div className="text-gray-800 text-lg leading-relaxed">
        {aiReply}
      </div>
    )}
  </motion.div>
</div>

        {/* Enhanced Doctor Visit Countdown */}
        <AnimatePresence>
          {reminderDate && (
            <motion.div 
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              exit={{ opacity: 0, y: -30 }}
              className="max-w-2xl mx-auto mb-8"
            >
              <motion.div 
                className="bg-gradient-to-r from-blue-50 to-indigo-50 border-2 border-blue-200 rounded-2xl shadow-lg p-6 text-center"
                whileHover={{ scale: 1.02 }}
                transition={{ duration: 0.2 }}
              >
                <h3 className="text-xl font-semibold text-blue-600 mb-4">
                  {translations.reminderTitle}
                </h3>
                <div className="flex flex-col items-center justify-center">
                  {getVisitStatusText()}
                </div>
              </motion.div>
            </motion.div>
          )}
        </AnimatePresence>

        {/* Enhanced Checklist + Reminder Grid */}
        <motion.div 
          className="mt-12 grid grid-cols-1 lg:grid-cols-2 gap-8 max-w-6xl mx-auto"
          variants={containerVariants}
          initial="hidden"
          animate="visible"
        >
          {/* Enhanced Checklist */}
          <motion.div 
            variants={itemVariants}
            className="bg-white/80 backdrop-blur-sm p-8 rounded-2xl shadow-xl border border-pink-200"
            whileHover={{ scale: 1.02 }}
            transition={{ duration: 0.2 }}
          >
            <h2 className="text-2xl font-bold text-pink-600 mb-6 flex items-center gap-2">
              {translations.checklistTitle}
            </h2>
            <ul className="space-y-4">
              {CHECK_ITEMS.map((item, idx) => (
                <motion.li 
                  key={idx} 
                  className="flex items-center gap-4 p-3 rounded-lg hover:bg-pink-50 transition-colors duration-200"
                  whileHover={{ x: 5 }}
                  transition={{ duration: 0.2 }}
                >
                  <motion.input
                    type="checkbox"
                    checked={checks[idx] || false}
                    onChange={async () => {
                      const updated = [...checks];
                      updated[idx] = !updated[idx];
                      setChecks(updated);
                      localStorage.setItem(todayKey(), JSON.stringify(updated));
                      if (updated.every(Boolean)) {
                        triggerCelebration();
                        await updateStreakInFirestore();
                      }
                    }}
                    className="w-6 h-6 text-pink-500 focus:ring-pink-400 rounded-md cursor-pointer"
                    whileHover={{ scale: 1.1 }}
                    whileTap={{ scale: 0.9 }}
                  />
                  <motion.span 
                    className={`text-lg ${checks[idx] ? 'line-through text-gray-400' : 'text-gray-700'} transition-all duration-300`}
                    animate={{ opacity: checks[idx] ? 0.6 : 1 }}
                  >
                    {item}
                  </motion.span>
                  {checks[idx] && (
                    <motion.span
                      initial={{ scale: 0 }}
                      animate={{ scale: 1 }}
                      className="text-green-500 text-xl"
                    >
                      тЬУ
                    </motion.span>
                  )}
                </motion.li>
              ))}
            </ul>
          </motion.div>

          {/* Enhanced Reminder */}
          <motion.div 
            variants={itemVariants}
            className="bg-white/80 backdrop-blur-sm p-8 rounded-2xl shadow-xl border border-pink-200"
            whileHover={{ scale: 1.02 }}
            transition={{ duration: 0.2 }}
          >
            <h3 className="text-2xl font-bold text-pink-600 mb-6">{translations.reminderTitle}</h3>
            <div className="space-y-6">
              <div>
                <label className="block text-sm font-semibold mb-2 text-gray-700">{translations.reminderLabel}</label>
                <motion.input 
                  type="date" 
                  value={reminderDate} 
                  onChange={(e) => setReminderDate(e.target.value)} 
                  className="w-full border-2 border-pink-200 rounded-lg p-3 focus:border-pink-500 focus:ring-2 focus:ring-pink-200 transition-all duration-200"
                  whileFocus={{ scale: 1.02 }}
                />
              </div>
              <div>
                <label className="block text-sm font-semibold mb-2 text-gray-700">{translations.repeatLabel}</label>
                <motion.select 
                  value={reminderFreq} 
                  onChange={(e) => setReminderFreq(e.target.value)} 
                  className="w-full border-2 border-pink-200 rounded-lg p-3 focus:border-pink-500 focus:ring-2 focus:ring-pink-200 transition-all duration-200"
                  whileFocus={{ scale: 1.02 }}
                >
                  {translations.frequencyOptions.map(option => (
                    <option key={option.value} value={option.value}>{option.label}</option>
                  ))}
                </motion.select>
              </div>
              <motion.button 
                onClick={saveReminder} 
                className="w-full bg-gradient-to-r from-pink-500 to-rose-500 hover:from-pink-600 hover:to-rose-600 text-white py-3 rounded-lg font-semibold shadow-lg transition-all duration-200"
                whileHover={{ scale: 1.02 }}
                whileTap={{ scale: 0.98 }}
              >
                {translations.saveReminder}
              </motion.button>
              <AnimatePresence>
                {msg && (
                  <motion.p 
                    initial={{ opacity: 0, y: -10 }}
                    animate={{ opacity: 1, y: 0 }}
                    exit={{ opacity: 0, y: -10 }}
                    className={`text-sm text-center p-3 rounded-lg ${
                      msg.type === 'success' 
                        ? 'text-green-700 bg-green-50 border border-green-200' 
                        : 'text-red-700 bg-red-50 border border-red-200'
                    }`}
                  >
                    {msg.text}
                  </motion.p>
                )}
              </AnimatePresence>
            </div>
          </motion.div>
        </motion.div>

        {/* Enhanced Streak Card */}
        <AnimatePresence>
          {streak > 0 && (
            <motion.div 
              initial={{ opacity: 0, scale: 0.9 }}
              animate={{ opacity: 1, scale: 1 }}
              exit={{ opacity: 0, scale: 0.9 }}
              className="mt-12 max-w-2xl mx-auto"
            >
              <motion.div 
                className="bg-gradient-to-r from-yellow-100 to-orange-100 border-2 border-yellow-300 rounded-2xl shadow-xl p-8 text-center"
                variants={pulseVariants}
                animate="pulse"
                whileHover={{ scale: 1.05 }}
              >
                <motion.h2 
                  className="text-3xl font-bold text-yellow-600 mb-2"
                  initial={{ opacity: 0, y: -20 }}
                  animate={{ opacity: 1, y: 0 }}
                >
                  {translations.streakTitle}
                </motion.h2>
                <motion.p 
                  className="text-2xl text-gray-700 font-semibold"
                  initial={{ opacity: 0, scale: 0.8 }}
                  animate={{ opacity: 1, scale: 1 }}
                  transition={{ delay: 0.2 }}
                >
                  {translations.streakText.replace('{streak}', streak)}
                </motion.p>
                <motion.p 
                  className="text-lg text-gray-600 mt-2"
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  transition={{ delay: 0.4 }}
                >
                  {translations.streakSubtext}
                </motion.p>
              </motion.div>
            </motion.div>
          )}
        </AnimatePresence>

        {/* Enhanced Features Grid */}
        <motion.div 
          className="mt-16 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-8 max-w-7xl mx-auto px-4"
          variants={containerVariants}
          initial="hidden"
          animate="visible"
        >
          {translations.features.map(({ key, title, desc, link }, index) => {
            let path = link;
            if (!path) {
              if (key === 'yoga') path = getYogaPath();
              if (key === 'ayurveda') path = getAyurvedaPath();
            }
            return (
              <motion.div 
                key={key || title} 
                variants={itemVariants}
                className="group cursor-pointer"
                whileHover="hover"
                initial="rest"
                animate="rest"
              >
                <motion.div 
                  className="bg-white/80 backdrop-blur-sm shadow-lg rounded-2xl overflow-hidden border border-pink-200 transition-all duration-300"
                  variants={cardHoverVariants}
                >
                  <div className="relative overflow-hidden">
                    <motion.img
                      src={FEATURE_IMAGES[key?.toLowerCase()] || '/assets/placeholder.png'}
                      alt={title}
                      className="w-full h-48 object-cover transition-transform duration-300 group-hover:scale-110"
                    />
                    <div className="absolute inset-0 bg-gradient-to-t from-pink-500/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                  </div>
                  <div className="p-6">
                    <motion.h3 
                      className="text-xl font-bold mb-3 text-pink-600 group-hover:text-pink-700 transition-colors duration-200"
                      initial={{ opacity: 0, y: 10 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ delay: index * 0.1 }}
                    >
                      {title}
                    </motion.h3>
                    <motion.p 
                      className="text-gray-600 mb-4 leading-relaxed"
                      initial={{ opacity: 0, y: 10 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ delay: index * 0.1 + 0.1 }}
                    >
                      {desc}
                    </motion.p>
                    {path && (
                      <motion.button 
                        onClick={() => navigate(path)} 
                        className="w-full bg-gradient-to-r from-pink-500 to-rose-500 hover:from-pink-600 hover:to-rose-600 text-white px-6 py-3 rounded-lg font-semibold shadow-md transition-all duration-200 transform group-hover:scale-105"
                        whileHover={{ scale: 1.05 }}
                        whileTap={{ scale: 0.95 }}
                        initial={{ opacity: 0, y: 10 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ delay: index * 0.1 + 0.2 }}
                      >
                        {translations.exploreNow}
                      </motion.button>
                    )}
                  </div>
                </motion.div>
              </motion.div>
            );
          })}
        </motion.div>

        {/* Enhanced Footer Section */}
        <motion.div 
          className="mt-20 mb-10 text-center"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 1.5, duration: 0.8 }}
        >
          <div className="max-w-4xl mx-auto bg-white/60 backdrop-blur-sm rounded-2xl p-8 border border-pink-200">
            <motion.h3 
              className="text-2xl font-bold text-pink-600 mb-4"
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 1.7 }}
            >
              {translations.downhead}
            </motion.h3>
            <motion.p 
              className="text-gray-700 text-lg leading-relaxed"
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 1.9 }}
            >
             {translations.downcontent}
            </motion.p>
          </div>
        </motion.div>

      {/* Enhanced Confetti */}
      <AnimatePresence>
        {showConfetti && (
          <motion.div 
            className="fixed inset-0 z-50 pointer-events-none"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
          >
            <Confetti 
              width={width} 
              height={height} 
              numberOfPieces={400} 
              recycle={false} 
              colors={['#ec4899', '#f43f5e', '#fbbf24', '#fb7185', '#f97316']}
            />
          </motion.div>
          
        )}
      </AnimatePresence>
    </div>
  );
  }


export default Dashboard;