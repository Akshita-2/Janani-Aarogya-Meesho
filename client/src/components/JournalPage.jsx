// src/pages/JournalPage.jsx
import React, { useEffect, useState } from 'react';
<<<<<<< Updated upstream
<<<<<<< Updated upstream
import { useNavigate } from 'react-router-dom';
import { getAuth, onAuthStateChanged } from 'firebase/auth';
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
import {
  collection,
  query,
  where,
  getDocs,
  orderBy,
  Timestamp,
  serverTimestamp,
  doc,
  setDoc,
<<<<<<< Updated upstream
<<<<<<< Updated upstream
  getDoc,
=======
  getDoc
>>>>>>> Stashed changes
=======
  getDoc
>>>>>>> Stashed changes
} from 'firebase/firestore';
import { getAuth, onAuthStateChanged } from 'firebase/auth';
import { db } from '../firebase';
import { getGeminiReply } from '../services/geminiApi';
<<<<<<< Updated upstream
<<<<<<< Updated upstream
import './journal.css'; // tapeтАСandтАСpaper styles

/* тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА HELPER тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА */
=======

// Helper to skip trivial messages like "hi"
>>>>>>> Stashed changes
=======

// Helper to skip trivial messages like "hi"
>>>>>>> Stashed changes
const isTrivial = (text) =>
  !text ||
  text.trim().length < 3 ||
  /^(hi|hello|hey|namaste|hola)$/i.test(text.trim());

<<<<<<< Updated upstream
<<<<<<< Updated upstream
/* тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА UIтАпLABEL TRANSLATIONS (add more anytime) тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА */
=======
// UI Translations only
>>>>>>> Stashed changes
=======
// UI Translations only
>>>>>>> Stashed changes
const journalUITranslations = {
  'en-IN': {
    title: 'Your Daily Journal',
    entriesToday: 'Entries detected today:',
    createButton: "Create Today's Journal",
    generating: 'Generating...',
    journalTitle: "Today's Journal",
    themeLabel: 'Choose Paper Style',
    noEntriesError: 'Please interact at least once today to generate your journal.',
    noLanguageError: 'Language not set yet. Please wait or refresh.',
    trivialError: 'Todays messages are just greetings. Have a deeper chat, then try again!',
    successMessage: 'тЬЕ Journal created!',
<<<<<<< Updated upstream
<<<<<<< Updated upstream
    errorMessage: 'Error generating journal. Please try again.',
    journal: 'Journal',
    memoryVault: 'Memory Vault',
    ayurveda: 'Ayurveda',
    yoga: 'Yoga',
  },
  /* тАжhiтАСIN, taтАСIN, teтАСIN, knтАСIN, mrтАСIN, bnтАСIN, guтАСIN, mlтАСIN, paтАСIN (unchanged) тАж */
  /* For brevity those entries are identical to the ones you already had. */
};

/* тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА NAVBAR (pure UI) тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА */
const Navbar = ({ translations }) => {
  const navigate = useNavigate();
  return (
    <nav className="bg-white shadow-md sticky top-0 z-50 px-6 py-4 flex justify-between items-center border-b border-rose-200">
      <h1 className="text-2xl font-extrabold text-rose-600 tracking-wide">
        Janani Aarogya
      </h1>
      <div className="flex gap-4 items-center text-sm font-semibold text-gray-700">
        <button onClick={() => navigate('/journal')} className="hover:text-rose-600">
          {translations.journal || 'Journal'}
        </button>
        <button onClick={() => navigate('/memory-vault')} className="hover:text-rose-600">
          {translations.memoryVault || 'Memory Vault'}
        </button>
        <button onClick={() => navigate('/ayurveda')} className="hover:text-rose-600">
          {translations.ayurveda || 'Ayurveda'}
        </button>
        <button onClick={() => navigate('/yoga')} className="hover:text-rose-600">
          {translations.yoga || 'Yoga'}
        </button>
        <button
          onClick={() => navigate('/profile')}
          className="w-8 h-8 bg-rose-100 text-rose-700 rounded-full flex items-center justify-center hover:ring hover:ring-rose-300"
        >
          ЁЯСд
        </button>
      </div>
    </nav>
  );
=======
    errorMessage: 'Error generating journal. Please try again.'
  },
  'hi-IN': {
    title: 'рдЖрдкрдХреА рджреИрдирд┐рдХ рдбрд╛рдпрд░реА',
    entriesToday: 'рдЖрдЬ рдХреЗ рд╕рдВрд╡рд╛рдж:',
    createButton: "рдЖрдЬ рдХреА рдбрд╛рдпрд░реА рдмрдирд╛рдПрдВ",
    generating: 'рдмрдирд╛ рд░рд╣рд╛ рд╣реИ...',
    journalTitle: "рдЖрдЬ рдХреА рдбрд╛рдпрд░реА",
    noEntriesError: 'рдХреГрдкрдпрд╛ рдЬрд░реНрдирд▓ рдмрдирд╛рдиреЗ рдХреЗ рд▓рд┐рдП рдЖрдЬ рдХрдо рд╕реЗ рдХрдо рдПрдХ рдмрд╛рд░ рдмрд╛рддрдЪреАрдд рдХрд░реЗрдВред',
    noLanguageError: 'рднрд╛рд╖рд╛ рдЕрднреА рд╕реЗрдЯ рдирд╣реАрдВ рд╣реБрдИ рд╣реИред рдХреГрдкрдпрд╛ рдкреНрд░рддреАрдХреНрд╖рд╛ рдХрд░реЗрдВ рдпрд╛ рдкреГрд╖реНрда рдХреЛ рддрд╛рдЬрд╝рд╛ рдХрд░реЗрдВред',
    trivialError: 'рдЖрдЬ рдХреЗ рд╕рдВрд╡рд╛рдж рдХреЗрд╡рд▓ рдЕрднрд┐рд╡рд╛рджрди рд╣реИрдВред рдХреГрдкрдпрд╛ рдХреБрдЫ рдЧрд╣рд░реА рдмрд╛рддрдЪреАрдд рдХрд░рдХреЗ рдлрд┐рд░ рдХреЛрд╢рд┐рд╢ рдХрд░реЗрдВ!',
    successMessage: 'тЬЕ рдбрд╛рдпрд░реА рдмрди рдЧрдИ!',
    errorMessage: 'рдбрд╛рдпрд░реА рдмрдирд╛рдиреЗ рдореЗрдВ рддреНрд░реБрдЯрд┐ред рдХреГрдкрдпрд╛ рдкреБрдирдГ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВред'
  },
  'ta-IN': {
    title: 'роЙроЩрпНроХро│рпН родро┐ройроЪро░ро┐ рокродрпНродро┐ро░ро┐роХрпИ',
    entriesToday: 'роЗройрпНро▒рпИроп роЙро░рпИропро╛роЯро▓рпНроХро│рпН:',
    createButton: "роЗройрпНро▒рпИроп рокродрпНродро┐ро░ро┐роХрпИропрпИ роЙро░рпБро╡ро╛роХрпНроХро╡рпБроорпН",
    generating: 'роЙро░рпБро╡ро╛роХрпНроХрпБроХро┐ро▒родрпБ...',
    journalTitle: "роЗройрпНро▒рпИроп рокродрпНродро┐ро░ро┐роХрпИ",
    noEntriesError: 'роЙроЩрпНроХро│рпН рокродрпНродро┐ро░ро┐роХрпИропрпИ роЙро░рпБро╡ро╛роХрпНроХ роЗройрпНро▒рпБ роХрпБро▒рпИроирпНродродрпБ роТро░рпБ роорпБро▒рпИропро╛ро╡родрпБ родрпКроЯро░рпНрокрпБ роХрпКро│рпНро│ро╡рпБроорпН.',
    noLanguageError: 'роорпКро┤ро┐ роЗройрпНройрпБроорпН роЕроорпИроХрпНроХрокрпНрокроЯро╡ро┐ро▓рпНро▓рпИ. роХро╛родрпНродро┐ро░рпБроХрпНроХро╡рпБроорпН роЕро▓рпНро▓родрпБ рокроХрпНроХродрпНродрпИрокрпН рокрпБродрпБрокрпНрокро┐роХрпНроХро╡рпБроорпН.',
    trivialError: 'роЗройрпНро▒рпИроп роЪрпЖропрпНродро┐роХро│рпН ро╡ро╛ро┤рпНродрпНродрпБроХрпНроХро│рпН роороЯрпНроЯрпБроорпЗ. роТро░рпБ роЖро┤рооро╛рой роЙро░рпИропро╛роЯро▓рпИроХрпН роХрпКрогрпНроЯро┐ро░рпБроЩрпНроХро│рпН, рокро┐ро▒роХрпБ роорпБропро▒рпНроЪро┐роХрпНроХро╡рпБроорпН!',
    successMessage: 'тЬЕ рокродрпНродро┐ро░ро┐роХрпИ роЙро░рпБро╡ро╛роХрпНроХрокрпНрокроЯрпНроЯродрпБ!',
    errorMessage: 'рокродрпНродро┐ро░ро┐роХрпИ роЙро░рпБро╡ро╛роХрпНроХрпБро╡родро┐ро▓рпН рокро┐ро┤рпИ. роорпАрогрпНроЯрпБроорпН роорпБропро▒рпНроЪро┐роХрпНроХро╡рпБроорпН.'
  },'te-IN': {
  title: 'р░ор▒А р░░р▒Лр░Ьр▒Бр░╡р░╛р░░р▒А р░Ьр░░р▒Нр░ир░▓р▒Н',
  entriesToday: 'р░Ир░░р▒Лр░Ьр▒Б р░Ър░░р▒Нр░Ър░▓р▒Б:',
  createButton: "р░Ир░░р▒Лр░Ьр▒Б р░Ьр░░р▒Нр░ир░▓р▒НтАМр░ир▒Б р░╕р▒Гр░╖р▒Нр░Яр░┐р░Вр░Ър░Вр░бр░┐",
  generating: 'р░╕р▒Гр░╖р▒Нр░Яр░┐р░╕р▒Нр░др▒Лр░Вр░жр░┐...',
  journalTitle: "р░Ир░░р▒Лр░Ьр▒Б р░Ьр░░р▒Нр░ир░▓р▒Н",
  noEntriesError: 'р░Ир░░р▒Лр░Ьр▒Б р░ор▒А р░Ьр░░р▒Нр░ир░▓р▒НтАМр░ир▒Б р░╕р▒Гр░╖р▒Нр░Яр░┐р░Вр░Ър░бр░╛р░ир░┐р░Хр░┐ р░Хр░ир▒Ар░╕р░В р░Тр░Хр░╕р░╛р░░р░┐ р░╕р░Вр░нр░╛р░╖р░г р░Ър▒Зр░пр░Вр░бр░┐.',
  noLanguageError: 'р░нр░╛р░╖ р░Зр░Вр░Хр░╛ р░╕р▒Жр░Яр░кр▒Н р░Хр░╛р░▓р▒Зр░жр▒Б. р░жр░пр░Ър▒Зр░╕р░┐ р░╡р▒Зр░Ър░┐ р░Йр░Вр░бр░Вр░бр░┐ р░▓р▒Зр░жр░╛ р░кр▒Зр░Ьр▒Ар░ир░┐ р░░р░┐р░лр▒Нр░░р▒Жр░╖р▒Н р░Ър▒Зр░пр░Вр░бр░┐.',
  trivialError: 'р░Ир░░р▒Лр░Ьр▒Б р░╡р░╛р░░р▒Нр░др░▓р▒Б р░Хр▒Зр░╡р░▓р░В р░╢р▒Бр░нр░╛р░Хр░╛р░Вр░Хр▒Нр░╖р░▓р▒З. р░▓р▒Лр░др▒Ир░и р░╕р░Вр░нр░╛р░╖р░гр░ир▒Б р░Хр▒Кр░ир░╕р░╛р░Чр░┐р░Вр░Ър░Вр░бр░┐, р░др░░р▒Нр░╡р░╛р░д р░ор░│р▒Нр░▓р▒А р░кр▒Нр░░р░пр░др▒Нр░ир░┐р░Вр░Ър░Вр░бр░┐!',
  successMessage: 'тЬЕ р░Ьр░░р▒Нр░ир░▓р▒Н р░╡р░┐р░Ьр░пр░╡р░Вр░др░Вр░Чр░╛ р░╕р▒Гр░╖р▒Нр░Яр░┐р░Вр░Ър░мр░бр░┐р░Вр░жр░┐!',
  errorMessage: 'р░Ьр░░р▒Нр░ир░▓р▒Н р░╕р▒Гр░╖р▒Нр░Яр░┐р░Вр░Ър░бр░Вр░▓р▒Л р░▓р▒Лр░кр░В. р░жр░пр░Ър▒Зр░╕р░┐ р░ор░│р▒Нр░▓р▒А р░кр▒Нр░░р░пр░др▒Нр░ир░┐р░Вр░Ър░Вр░бр░┐.'
},'kn-IN': {
  title: 'р▓ир▓┐р▓ор│Нр▓о р▓жр│Ир▓ир▓Вр▓жр▓┐р▓и р▓кр▓др│Нр▓░р▓┐р▓Хр│Ж',
  entriesToday: 'р▓Зр▓Вр▓жр▓┐р▓и р▓╕р▓Вр▓╡р▓╣р▓ир▓Чр▓│р│Б:',
  createButton: "р▓Зр▓Вр▓жр▓┐р▓и р▓кр▓др│Нр▓░р▓┐р▓Хр│Жр▓пр▓ир│Нр▓ир│Б р▓░р▓Ър▓┐р▓╕р▓┐",
  generating: 'р▓░р▓Ър▓┐р▓╕р▓▓р▓╛р▓Чр│Бр▓др│Нр▓др▓┐р▓жр│Ж...',
  journalTitle: "р▓Зр▓Вр▓жр▓┐р▓и р▓кр▓др│Нр▓░р▓┐р▓Хр│Ж",
  noEntriesError: 'р▓Зр▓Вр▓жр▓┐р▓и р▓кр▓др│Нр▓░р▓┐р▓Хр│Жр▓пр▓ир│Нр▓ир│Б р▓░р▓Ър▓┐р▓╕р▓▓р│Б р▓Хр▓ир▓┐р▓╖р│Нр▓а р▓Тр▓Вр▓жр│Б р▓мр▓╛р▓░р▓┐ р▓╕р▓Вр▓╡р▓╣р▓и р▓ир▓бр│Жр▓╕р▓┐р▓░р▓┐.',
  noLanguageError: 'р▓нр▓╛р▓╖р│Жр▓пр▓ир│Нр▓ир│Б р▓Зр▓ир│Нр▓ир│В р▓╣р│Кр▓Вр▓жр▓┐р▓╕р▓▓р▓╛р▓Чр▓┐р▓▓р│Нр▓▓. р▓жр▓пр▓╡р▓┐р▓Яр│Нр▓Яр│Б р▓Хр▓╛р▓пр▓┐р▓░р▓┐ р▓Ер▓ер▓╡р▓╛ р▓кр│Бр▓Яр▓╡р▓ир│Нр▓ир│Б р▓░р▓┐р▓лр│Нр▓░р│Жр▓╢р│Н р▓ор▓╛р▓бр▓┐.',
  trivialError: 'р▓Зр▓Вр▓жр▓┐р▓и р▓╕р│Бр▓жр│Нр▓жр▓┐р▓Чр▓│р│Б р▓Хр│Зр▓╡р▓▓ р▓╢р│Бр▓нр▓╛р▓╢р▓пр▓Чр▓│р▓╖р│Нр▓Яр│Ж. р▓Жр▓│р▓╡р▓╛р▓ж р▓╕р▓Вр▓╡р▓╣р▓ир▓╡р▓ир│Нр▓ир│Б р▓ор▓╛р▓бр▓┐, р▓ир▓Вр▓др▓░ р▓ор▓др│Нр▓др│Ж р▓кр│Нр▓░р▓пр▓др│Нр▓ир▓┐р▓╕р▓┐!',
  successMessage: 'тЬЕ р▓кр▓др│Нр▓░р▓┐р▓Хр│Ж р▓пр▓╢р▓╕р│Нр▓╡р▓┐р▓пр▓╛р▓Чр▓┐ р▓░р▓Ър▓┐р▓╕р▓▓р▓╛р▓Чр▓┐р▓жр│Ж!',
  errorMessage: 'р▓кр▓др│Нр▓░р▓┐р▓Хр│Ж р▓░р▓Ър▓┐р▓╕р│Бр▓╡р▓▓р│Нр▓▓р▓┐ р▓жр│Лр▓╖. р▓жр▓пр▓╡р▓┐р▓Яр│Нр▓Яр│Б р▓ор▓др│Нр▓др│Ж р▓кр│Нр▓░р▓пр▓др│Нр▓ир▓┐р▓╕р▓┐.'
},'mr-IN': {
  title: 'рддреБрдордЪреА рджреИрдирдВрджрд┐рди рдЬрд░реНрдирд▓',
  entriesToday: 'рдЖрдЬрдЪреНрдпрд╛ рд╕рдВрд╡рд╛рджрд╛рдВрдЪреА рд╕рдВрдЦреНрдпрд╛:',
  createButton: "рдЖрдЬрдЪрд╛ рдЬрд░реНрдирд▓ рддрдпрд╛рд░ рдХрд░рд╛",
  generating: 'рддрдпрд╛рд░ рдХрд░рдд рдЖрд╣реЗ...',
  journalTitle: "рдЖрдЬрдЪрд╛ рдЬрд░реНрдирд▓",
  noEntriesError: 'рдЖрдЬрдЪрд╛ рдЬрд░реНрдирд▓ рддрдпрд╛рд░ рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА рдХрдореАрдд рдХрдореА рдПрдХ рд╕рдВрд╡рд╛рдж рдЖрд╡рд╢реНрдпрдХ рдЖрд╣реЗ.',
  noLanguageError: 'рднрд╛рд╖рд╛ рдЕрдЬреВрди рд╕реЗрдЯ рдХреЗрд▓реЗрд▓реА рдирд╛рд╣реА. рдХреГрдкрдпрд╛ рдереЛрдбрд╛ рд╡реЗрд│ рдерд╛рдВрдмрд╛ рдХрд┐рдВрд╡рд╛ рдкреГрд╖реНрда рд░реАрдлреНрд░реЗрд╢ рдХрд░рд╛.',
  trivialError: 'рдЖрдЬрдЪреНрдпрд╛ рдмрд╛рддрдореНрдпрд╛ рдХреЗрд╡рд│ рд╢реБрднреЗрдЪреНрдЫрд╛ рдЖрд╣реЗрдд. рд╕рдЦреЛрд▓ рд╕рдВрд╡рд╛рдж рд╕рд╛рдзрд╛ рдЖрдгрд┐ рдкреБрдиреНрд╣рд╛ рдкреНрд░рдпрддреНрди рдХрд░рд╛!',
  successMessage: 'тЬЕ рдЬрд░реНрдирд▓ рдпрд╢рд╕реНрд╡реАрд░рд┐рддреНрдпрд╛ рддрдпрд╛рд░ рдЭрд╛рд▓рд╛ рдЖрд╣реЗ!',
  errorMessage: 'рдЬрд░реНрдирд▓ рддрдпрд╛рд░ рдХрд░рддрд╛рдирд╛ рддреНрд░реБрдЯреА рдЖрд▓реА. рдХреГрдкрдпрд╛ рдкреБрдиреНрд╣рд╛ рдкреНрд░рдпрддреНрди рдХрд░рд╛.'
},'bn-IN': {
  title: 'ржЖржкржирж╛рж░ ржжрзИржирж┐ржХ ржЬрж╛рж░рзНржирж╛рж▓',
  entriesToday: 'ржЖржЬржХрзЗрж░ ржХржерзЛржкржХржержирзЗрж░ рж╕ржВржЦрзНржпрж╛:',
  createButton: "ржЖржЬржХрзЗрж░ ржЬрж╛рж░рзНржирж╛рж▓ рждрзИрж░рж┐ ржХрж░рзБржи",
  generating: 'рждрзИрж░рж┐ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ...',
  journalTitle: "ржЖржЬржХрзЗрж░ ржЬрж╛рж░рзНржирж╛рж▓",
  noEntriesError: 'ржЖржЬржХрзЗрж░ ржЬрж╛рж░рзНржирж╛рж▓ рждрзИрж░рж┐ ржХрж░рждрзЗ ржЕржирзНрждржд ржПржХржЯрж┐ ржХржерзЛржкржХржержи ржкрзНрж░ржпрж╝рзЛржЬржиред',
  noLanguageError: 'ржнрж╛рж╖рж╛ ржПржЦржирзЛ ржирж┐рж░рзНржзрж╛рж░рж┐ржд рж╣ржпрж╝ржирж┐ред ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржЕржкрзЗржХрзНрж╖рж╛ ржХрж░рзБржи ржмрж╛ ржкрзГрж╖рзНржарж╛ржЯрж┐ рж░рж┐ржлрзНрж░рзЗрж╢ ржХрж░рзБржиред',
  trivialError: 'ржЖржЬржХрзЗрж░ ржЦржмрж░ рж╢рзБржзрзБржЗ рж╢рзБржнрзЗржЪрзНржЫрж╛ред ржЖрж░ржУ ржЧржнрзАрж░ ржХржерзЛржкржХржержи ржХрж░рзБржи ржПржмржВ ржкрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржи!',
  successMessage: 'тЬЕ ржЬрж╛рж░рзНржирж╛рж▓ рж╕ржлрж▓ржнрж╛ржмрзЗ рждрзИрж░рж┐ рж╣ржпрж╝рзЗржЫрзЗ!',
  errorMessage: 'ржЬрж╛рж░рзНржирж╛рж▓ рждрзИрж░рж┐ ржХрж░рждрзЗ рждрзНрж░рзБржЯрж┐ рж╣ржпрж╝рзЗржЫрзЗред ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред'
}
,'gu-IN': {
  title: 'ркдркорк╛рк░рлБркВ ркжрлИркирк┐ркХ ркЬрк░рлНркирк▓',
  entriesToday: 'ркЖркЬркирлА рк╡рк╛ркдркЪрлАркдрлЛркирлА рк╕ркВркЦрлНркпрк╛:',
  createButton: "ркЖркЬркирлБркВ ркЬрк░рлНркирк▓ ркмркирк╛рк╡рлЛ",
  generating: 'ркмркирк╛рк╡рк╛ркИ рк░рк╣рлНркпрлБркВ ркЫрлЗ...',
  journalTitle: "ркЖркЬркирлБркВ ркЬрк░рлНркирк▓",
  noEntriesError: 'ркЖркЬркирлБркВ ркЬрк░рлНркирк▓ ркмркирк╛рк╡рк╡рк╛ ркорк╛ркЯрлЗ ркУркЫрк╛ркорк╛ркВ ркУркЫрлА ркПркХ рк╡рк╛рк░ рк╡рк╛ркдркЪрлАркд ркЬрк░рлВрк░рлА ркЫрлЗ.',
  noLanguageError: 'ркнрк╛рк╖рк╛ рк╣ркЬрлА рк╕рлБркзрлА рк╕рлБркпрлЛркЬрк┐ркд ркиркерлА. ркХрлГрккрк╛ ркХрк░рлАркирлЗ рк░рк╛рк╣ ркЬрлБркУ ркЕркерк╡рк╛ рккрлЗркЬркирлЗ рк░рк┐рклрлНрк░рлЗрк╢ ркХрк░рлЛ.',
  trivialError: 'ркЖркЬркирлА ркорк╛рк╣рк┐ркдрлА рклркХрлНркд рк╢рлБркнрлЗркЪрлНркЫрк╛ркУ ркЫрлЗ. рк╡ркзрлБ ркЧрк╛ркв рк╕ркВрк╡рк╛ркж ркХрк░рлЛ ркЕркирлЗ рккркЫрлА рклрк░рлА рккрлНрк░ркпрк╛рк╕ ркХрк░рлЛ!',
  successMessage: 'тЬЕ ркЬрк░рлНркирк▓ рк╕рклрк│ркдрк╛рккрлВрк░рлНрк╡ркХ ркмркирк╛рк╡рк╛ркпрлБркВ ркЫрлЗ!',
  errorMessage: 'ркЬрк░рлНркирк▓ ркмркирк╛рк╡рк╡рк╛ркорк╛ркВ ркнрлВрк▓ ркЖрк╡рлА ркЫрлЗ. ркХрлГрккрк╛ ркХрк░рлАркирлЗ рклрк░рлА рккрлНрк░ркпрк╛рк╕ ркХрк░рлЛ.'
},'ml-IN': {
  title: 'р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤жр┤┐р┤╡р┤╕р╡Зр┤и р┤Ьр╡Зр╡╝р┤гр╡╜',
  entriesToday: 'р┤Зр┤ир╡Нр┤ир┤др╡Нр┤др╡Ж р┤╕р┤Вр┤нр┤╛р┤╖р┤гр┤Щр╡Нр┤Щр╡╛:',
  createButton: "р┤Зр┤ир╡Нр┤ир┤др╡Нр┤др╡Ж р┤Ьр╡Зр╡╝р┤гр╡╜ р┤╕р╡Гр┤╖р╡Нр┤Яр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х",
  generating: 'р┤╕р╡Гр┤╖р╡Нр┤Яр┤┐р┤Хр╡Нр┤Хр╡Бр┤ир╡Нр┤ир╡Б...',
  journalTitle: "р┤Зр┤ир╡Нр┤ир┤др╡Нр┤др╡Ж р┤Ьр╡Зр╡╝р┤гр╡╜",
  noEntriesError: 'р┤Ьр╡Зр╡╝р┤гр╡╜ р┤╕р╡Гр┤╖р╡Нр┤Яр┤┐р┤Хр╡Нр┤Хр┤╛р╡╗ р┤Зр┤ир╡Нр┤ир╡Н р┤Хр╡Бр┤▒р┤Юр╡Нр┤Юр┤др╡Н р┤Тр┤░р╡Б р┤╕р┤Вр┤нр┤╛р┤╖р┤гр┤В р┤Йр┤гр╡Нр┤Яр┤╛р┤пр┤┐р┤░р┤┐р┤Хр╡Нр┤Хр┤гр┤В.',
  noLanguageError: 'р┤нр┤╛р┤╖ р┤Зр┤ир┤┐р┤пр╡Бр┤В р┤Хр╡Нр┤░р┤ор╡Ар┤Хр┤░р┤┐р┤Ър╡Нр┤Ър┤┐р┤Яр╡Нр┤Яр┤┐р┤▓р╡Нр┤▓. р┤жр┤пр┤╡р┤╛р┤пр┤┐ р┤Хр┤╛р┤др╡Нр┤др┤┐р┤░р┤┐р┤Хр╡Нр┤Хр╡Бр┤Х р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤кр╡Зр┤Ьр╡Н р┤▒р┤┐р┤лр╡Нр┤░р┤╖р╡Н р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х.',
  trivialError: 'р┤Зр┤ир╡Нр┤ир┤др╡Нр┤др╡Ж р┤╡р┤┐р┤╡р┤░р┤Щр╡Нр┤Щр╡╛ р┤╡р╡Жр┤▒р╡Бр┤В р┤Жр┤╢р┤Вр┤╕р┤Хр┤│р┤╛р┤гр╡Н. р┤Хр╡Вр┤Яр╡Бр┤др╡╜ р┤Жр┤┤р┤ор╡Бр┤│р╡Нр┤│ р┤╕р┤Вр┤нр┤╛р┤╖р┤гр┤В р┤ир┤Яр┤др╡Нр┤др┤┐р┤п р┤╢р╡Зр┤╖р┤В р┤╡р╡Ар┤гр╡Нр┤Яр╡Бр┤В р┤╢р╡Нр┤░р┤ор┤┐р┤Хр╡Нр┤Хр╡Бр┤Х!',
  successMessage: 'тЬЕ р┤Ьр╡Зр╡╝р┤гр╡╜ р┤╡р┤┐р┤Ьр┤пр┤Хр┤░р┤ор┤╛р┤пр┤┐ р┤╕р╡Гр┤╖р╡Нр┤Яр┤┐р┤Ър╡Нр┤Ър╡Б!',
  errorMessage: 'р┤Ьр╡Зр╡╝р┤гр╡╜ р┤╕р╡Гр┤╖р╡Нр┤Яр┤┐р┤Хр╡Нр┤Хр╡Бр┤ор╡Нр┤кр╡Лр╡╛ р┤кр┤┐р┤╢р┤Хр╡Н. р┤╡р╡Ар┤гр╡Нр┤Яр╡Бр┤В р┤╢р╡Нр┤░р┤ор┤┐р┤Хр╡Нр┤Хр╡Бр┤Х.'
},'pa-IN': {
  title: 'ридрйБри╣ри╛рибри╛ ри░рйЛриЬри╝ри╛риири╛ риЬри░риири▓',
  entriesToday: 'риЕрй▒риЬ рижрйАриЖриВ риЧрй▒ри▓римри╛ридри╛риВ:',
  createButton: 'риЕрй▒риЬ рижри╛ риЬри░риири▓ римригри╛риУ',
  generating: 'римригри╛ ри░ри╣рйЗ ри╣ри╛риВ...',
  journalTitle: 'риЕрй▒риЬ рижри╛ риЬри░риири▓',
  noEntriesError: 'риЬри░риири▓ римригри╛риЙриг ри▓риИ риХри┐ри░рикри╛ риХри░риХрйЗ риЕрй▒риЬ риШрй▒риЯрйЛ-риШрй▒риЯ риЗрй▒риХ ри╡ри╛ри░ риЧрй▒ри▓римри╛рид риХри░рйЛред',
  noLanguageError: 'ринри╛ри╕ри╝ри╛ ри╣риЬрйЗ ридрй▒риХ ри╕рйИриЯ риири╣рйАриВ ри╣рйЛриИред риХри┐ри░рикри╛ риХри░риХрйЗ риЙрибрйАриХ риХри░рйЛ риЬри╛риВ рикрйЗриЬ риирйВрй░ ри░рйАрилрйНри░рйИри╕ри╝ риХри░рйЛред',
  trivialError: 'риЕрй▒риЬ рижрйАриЖриВ риЬри╛ригриХри╛ри░рйАриЖриВ ри╕ри┐ри░рил ри╕ри╝рйБринриХри╛риориири╛ри╡ри╛риВ ри╣рииред риерйЛрйЬрйНри╣рйА ри╣рйЛри░ риЧрй░ринрйАри░ риЧрй▒ри▓римри╛рид риХри░рйЛ, рилри┐ри░ рижрйБримри╛ри░ри╛ риХрйЛри╕ри╝ри┐ри╕ри╝ риХри░рйЛ!',
  successMessage: 'тЬЕ риЬри░риири▓ ри╕рилри▓ридри╛рикрйВри░ри╡риХ римригри╛риЗриЖ риЧри┐риЖ!',
  errorMessage: 'риЬри░риири▓ римригри╛риЙриг ри╡ри┐рй▒риЪ риЧри▓ридрйА риЖриИред риХри┐ри░рикри╛ риХри░риХрйЗ рилри┐ри░ риХрйЛри╕ри╝ри┐ри╕ри╝ риХри░рйЛред'
}

=======
    errorMessage: 'Error generating journal. Please try again.'
  },
  'hi-IN': {
    title: 'рдЖрдкрдХреА рджреИрдирд┐рдХ рдбрд╛рдпрд░реА',
    entriesToday: 'рдЖрдЬ рдХреЗ рд╕рдВрд╡рд╛рдж:',
    createButton: "рдЖрдЬ рдХреА рдбрд╛рдпрд░реА рдмрдирд╛рдПрдВ",
    generating: 'рдмрдирд╛ рд░рд╣рд╛ рд╣реИ...',
    journalTitle: "рдЖрдЬ рдХреА рдбрд╛рдпрд░реА",
    noEntriesError: 'рдХреГрдкрдпрд╛ рдЬрд░реНрдирд▓ рдмрдирд╛рдиреЗ рдХреЗ рд▓рд┐рдП рдЖрдЬ рдХрдо рд╕реЗ рдХрдо рдПрдХ рдмрд╛рд░ рдмрд╛рддрдЪреАрдд рдХрд░реЗрдВред',
    noLanguageError: 'рднрд╛рд╖рд╛ рдЕрднреА рд╕реЗрдЯ рдирд╣реАрдВ рд╣реБрдИ рд╣реИред рдХреГрдкрдпрд╛ рдкреНрд░рддреАрдХреНрд╖рд╛ рдХрд░реЗрдВ рдпрд╛ рдкреГрд╖реНрда рдХреЛ рддрд╛рдЬрд╝рд╛ рдХрд░реЗрдВред',
    trivialError: 'рдЖрдЬ рдХреЗ рд╕рдВрд╡рд╛рдж рдХреЗрд╡рд▓ рдЕрднрд┐рд╡рд╛рджрди рд╣реИрдВред рдХреГрдкрдпрд╛ рдХреБрдЫ рдЧрд╣рд░реА рдмрд╛рддрдЪреАрдд рдХрд░рдХреЗ рдлрд┐рд░ рдХреЛрд╢рд┐рд╢ рдХрд░реЗрдВ!',
    successMessage: 'тЬЕ рдбрд╛рдпрд░реА рдмрди рдЧрдИ!',
    errorMessage: 'рдбрд╛рдпрд░реА рдмрдирд╛рдиреЗ рдореЗрдВ рддреНрд░реБрдЯрд┐ред рдХреГрдкрдпрд╛ рдкреБрдирдГ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВред'
  },
  'ta-IN': {
    title: 'роЙроЩрпНроХро│рпН родро┐ройроЪро░ро┐ рокродрпНродро┐ро░ро┐роХрпИ',
    entriesToday: 'роЗройрпНро▒рпИроп роЙро░рпИропро╛роЯро▓рпНроХро│рпН:',
    createButton: "роЗройрпНро▒рпИроп рокродрпНродро┐ро░ро┐роХрпИропрпИ роЙро░рпБро╡ро╛роХрпНроХро╡рпБроорпН",
    generating: 'роЙро░рпБро╡ро╛роХрпНроХрпБроХро┐ро▒родрпБ...',
    journalTitle: "роЗройрпНро▒рпИроп рокродрпНродро┐ро░ро┐роХрпИ",
    noEntriesError: 'роЙроЩрпНроХро│рпН рокродрпНродро┐ро░ро┐роХрпИропрпИ роЙро░рпБро╡ро╛роХрпНроХ роЗройрпНро▒рпБ роХрпБро▒рпИроирпНродродрпБ роТро░рпБ роорпБро▒рпИропро╛ро╡родрпБ родрпКроЯро░рпНрокрпБ роХрпКро│рпНро│ро╡рпБроорпН.',
    noLanguageError: 'роорпКро┤ро┐ роЗройрпНройрпБроорпН роЕроорпИроХрпНроХрокрпНрокроЯро╡ро┐ро▓рпНро▓рпИ. роХро╛родрпНродро┐ро░рпБроХрпНроХро╡рпБроорпН роЕро▓рпНро▓родрпБ рокроХрпНроХродрпНродрпИрокрпН рокрпБродрпБрокрпНрокро┐роХрпНроХро╡рпБроорпН.',
    trivialError: 'роЗройрпНро▒рпИроп роЪрпЖропрпНродро┐роХро│рпН ро╡ро╛ро┤рпНродрпНродрпБроХрпНроХро│рпН роороЯрпНроЯрпБроорпЗ. роТро░рпБ роЖро┤рооро╛рой роЙро░рпИропро╛роЯро▓рпИроХрпН роХрпКрогрпНроЯро┐ро░рпБроЩрпНроХро│рпН, рокро┐ро▒роХрпБ роорпБропро▒рпНроЪро┐роХрпНроХро╡рпБроорпН!',
    successMessage: 'тЬЕ рокродрпНродро┐ро░ро┐роХрпИ роЙро░рпБро╡ро╛роХрпНроХрокрпНрокроЯрпНроЯродрпБ!',
    errorMessage: 'рокродрпНродро┐ро░ро┐роХрпИ роЙро░рпБро╡ро╛роХрпНроХрпБро╡родро┐ро▓рпН рокро┐ро┤рпИ. роорпАрогрпНроЯрпБроорпН роорпБропро▒рпНроЪро┐роХрпНроХро╡рпБроорпН.'
  },'te-IN': {
  title: 'р░ор▒А р░░р▒Лр░Ьр▒Бр░╡р░╛р░░р▒А р░Ьр░░р▒Нр░ир░▓р▒Н',
  entriesToday: 'р░Ир░░р▒Лр░Ьр▒Б р░Ър░░р▒Нр░Ър░▓р▒Б:',
  createButton: "р░Ир░░р▒Лр░Ьр▒Б р░Ьр░░р▒Нр░ир░▓р▒НтАМр░ир▒Б р░╕р▒Гр░╖р▒Нр░Яр░┐р░Вр░Ър░Вр░бр░┐",
  generating: 'р░╕р▒Гр░╖р▒Нр░Яр░┐р░╕р▒Нр░др▒Лр░Вр░жр░┐...',
  journalTitle: "р░Ир░░р▒Лр░Ьр▒Б р░Ьр░░р▒Нр░ир░▓р▒Н",
  noEntriesError: 'р░Ир░░р▒Лр░Ьр▒Б р░ор▒А р░Ьр░░р▒Нр░ир░▓р▒НтАМр░ир▒Б р░╕р▒Гр░╖р▒Нр░Яр░┐р░Вр░Ър░бр░╛р░ир░┐р░Хр░┐ р░Хр░ир▒Ар░╕р░В р░Тр░Хр░╕р░╛р░░р░┐ р░╕р░Вр░нр░╛р░╖р░г р░Ър▒Зр░пр░Вр░бр░┐.',
  noLanguageError: 'р░нр░╛р░╖ р░Зр░Вр░Хр░╛ р░╕р▒Жр░Яр░кр▒Н р░Хр░╛р░▓р▒Зр░жр▒Б. р░жр░пр░Ър▒Зр░╕р░┐ р░╡р▒Зр░Ър░┐ р░Йр░Вр░бр░Вр░бр░┐ р░▓р▒Зр░жр░╛ р░кр▒Зр░Ьр▒Ар░ир░┐ р░░р░┐р░лр▒Нр░░р▒Жр░╖р▒Н р░Ър▒Зр░пр░Вр░бр░┐.',
  trivialError: 'р░Ир░░р▒Лр░Ьр▒Б р░╡р░╛р░░р▒Нр░др░▓р▒Б р░Хр▒Зр░╡р░▓р░В р░╢р▒Бр░нр░╛р░Хр░╛р░Вр░Хр▒Нр░╖р░▓р▒З. р░▓р▒Лр░др▒Ир░и р░╕р░Вр░нр░╛р░╖р░гр░ир▒Б р░Хр▒Кр░ир░╕р░╛р░Чр░┐р░Вр░Ър░Вр░бр░┐, р░др░░р▒Нр░╡р░╛р░д р░ор░│р▒Нр░▓р▒А р░кр▒Нр░░р░пр░др▒Нр░ир░┐р░Вр░Ър░Вр░бр░┐!',
  successMessage: 'тЬЕ р░Ьр░░р▒Нр░ир░▓р▒Н р░╡р░┐р░Ьр░пр░╡р░Вр░др░Вр░Чр░╛ р░╕р▒Гр░╖р▒Нр░Яр░┐р░Вр░Ър░мр░бр░┐р░Вр░жр░┐!',
  errorMessage: 'р░Ьр░░р▒Нр░ир░▓р▒Н р░╕р▒Гр░╖р▒Нр░Яр░┐р░Вр░Ър░бр░Вр░▓р▒Л р░▓р▒Лр░кр░В. р░жр░пр░Ър▒Зр░╕р░┐ р░ор░│р▒Нр░▓р▒А р░кр▒Нр░░р░пр░др▒Нр░ир░┐р░Вр░Ър░Вр░бр░┐.'
},'kn-IN': {
  title: 'р▓ир▓┐р▓ор│Нр▓о р▓жр│Ир▓ир▓Вр▓жр▓┐р▓и р▓кр▓др│Нр▓░р▓┐р▓Хр│Ж',
  entriesToday: 'р▓Зр▓Вр▓жр▓┐р▓и р▓╕р▓Вр▓╡р▓╣р▓ир▓Чр▓│р│Б:',
  createButton: "р▓Зр▓Вр▓жр▓┐р▓и р▓кр▓др│Нр▓░р▓┐р▓Хр│Жр▓пр▓ир│Нр▓ир│Б р▓░р▓Ър▓┐р▓╕р▓┐",
  generating: 'р▓░р▓Ър▓┐р▓╕р▓▓р▓╛р▓Чр│Бр▓др│Нр▓др▓┐р▓жр│Ж...',
  journalTitle: "р▓Зр▓Вр▓жр▓┐р▓и р▓кр▓др│Нр▓░р▓┐р▓Хр│Ж",
  noEntriesError: 'р▓Зр▓Вр▓жр▓┐р▓и р▓кр▓др│Нр▓░р▓┐р▓Хр│Жр▓пр▓ир│Нр▓ир│Б р▓░р▓Ър▓┐р▓╕р▓▓р│Б р▓Хр▓ир▓┐р▓╖р│Нр▓а р▓Тр▓Вр▓жр│Б р▓мр▓╛р▓░р▓┐ р▓╕р▓Вр▓╡р▓╣р▓и р▓ир▓бр│Жр▓╕р▓┐р▓░р▓┐.',
  noLanguageError: 'р▓нр▓╛р▓╖р│Жр▓пр▓ир│Нр▓ир│Б р▓Зр▓ир│Нр▓ир│В р▓╣р│Кр▓Вр▓жр▓┐р▓╕р▓▓р▓╛р▓Чр▓┐р▓▓р│Нр▓▓. р▓жр▓пр▓╡р▓┐р▓Яр│Нр▓Яр│Б р▓Хр▓╛р▓пр▓┐р▓░р▓┐ р▓Ер▓ер▓╡р▓╛ р▓кр│Бр▓Яр▓╡р▓ир│Нр▓ир│Б р▓░р▓┐р▓лр│Нр▓░р│Жр▓╢р│Н р▓ор▓╛р▓бр▓┐.',
  trivialError: 'р▓Зр▓Вр▓жр▓┐р▓и р▓╕р│Бр▓жр│Нр▓жр▓┐р▓Чр▓│р│Б р▓Хр│Зр▓╡р▓▓ р▓╢р│Бр▓нр▓╛р▓╢р▓пр▓Чр▓│р▓╖р│Нр▓Яр│Ж. р▓Жр▓│р▓╡р▓╛р▓ж р▓╕р▓Вр▓╡р▓╣р▓ир▓╡р▓ир│Нр▓ир│Б р▓ор▓╛р▓бр▓┐, р▓ир▓Вр▓др▓░ р▓ор▓др│Нр▓др│Ж р▓кр│Нр▓░р▓пр▓др│Нр▓ир▓┐р▓╕р▓┐!',
  successMessage: 'тЬЕ р▓кр▓др│Нр▓░р▓┐р▓Хр│Ж р▓пр▓╢р▓╕р│Нр▓╡р▓┐р▓пр▓╛р▓Чр▓┐ р▓░р▓Ър▓┐р▓╕р▓▓р▓╛р▓Чр▓┐р▓жр│Ж!',
  errorMessage: 'р▓кр▓др│Нр▓░р▓┐р▓Хр│Ж р▓░р▓Ър▓┐р▓╕р│Бр▓╡р▓▓р│Нр▓▓р▓┐ р▓жр│Лр▓╖. р▓жр▓пр▓╡р▓┐р▓Яр│Нр▓Яр│Б р▓ор▓др│Нр▓др│Ж р▓кр│Нр▓░р▓пр▓др│Нр▓ир▓┐р▓╕р▓┐.'
},'mr-IN': {
  title: 'рддреБрдордЪреА рджреИрдирдВрджрд┐рди рдЬрд░реНрдирд▓',
  entriesToday: 'рдЖрдЬрдЪреНрдпрд╛ рд╕рдВрд╡рд╛рджрд╛рдВрдЪреА рд╕рдВрдЦреНрдпрд╛:',
  createButton: "рдЖрдЬрдЪрд╛ рдЬрд░реНрдирд▓ рддрдпрд╛рд░ рдХрд░рд╛",
  generating: 'рддрдпрд╛рд░ рдХрд░рдд рдЖрд╣реЗ...',
  journalTitle: "рдЖрдЬрдЪрд╛ рдЬрд░реНрдирд▓",
  noEntriesError: 'рдЖрдЬрдЪрд╛ рдЬрд░реНрдирд▓ рддрдпрд╛рд░ рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА рдХрдореАрдд рдХрдореА рдПрдХ рд╕рдВрд╡рд╛рдж рдЖрд╡рд╢реНрдпрдХ рдЖрд╣реЗ.',
  noLanguageError: 'рднрд╛рд╖рд╛ рдЕрдЬреВрди рд╕реЗрдЯ рдХреЗрд▓реЗрд▓реА рдирд╛рд╣реА. рдХреГрдкрдпрд╛ рдереЛрдбрд╛ рд╡реЗрд│ рдерд╛рдВрдмрд╛ рдХрд┐рдВрд╡рд╛ рдкреГрд╖реНрда рд░реАрдлреНрд░реЗрд╢ рдХрд░рд╛.',
  trivialError: 'рдЖрдЬрдЪреНрдпрд╛ рдмрд╛рддрдореНрдпрд╛ рдХреЗрд╡рд│ рд╢реБрднреЗрдЪреНрдЫрд╛ рдЖрд╣реЗрдд. рд╕рдЦреЛрд▓ рд╕рдВрд╡рд╛рдж рд╕рд╛рдзрд╛ рдЖрдгрд┐ рдкреБрдиреНрд╣рд╛ рдкреНрд░рдпрддреНрди рдХрд░рд╛!',
  successMessage: 'тЬЕ рдЬрд░реНрдирд▓ рдпрд╢рд╕реНрд╡реАрд░рд┐рддреНрдпрд╛ рддрдпрд╛рд░ рдЭрд╛рд▓рд╛ рдЖрд╣реЗ!',
  errorMessage: 'рдЬрд░реНрдирд▓ рддрдпрд╛рд░ рдХрд░рддрд╛рдирд╛ рддреНрд░реБрдЯреА рдЖрд▓реА. рдХреГрдкрдпрд╛ рдкреБрдиреНрд╣рд╛ рдкреНрд░рдпрддреНрди рдХрд░рд╛.'
},'bn-IN': {
  title: 'ржЖржкржирж╛рж░ ржжрзИржирж┐ржХ ржЬрж╛рж░рзНржирж╛рж▓',
  entriesToday: 'ржЖржЬржХрзЗрж░ ржХржерзЛржкржХржержирзЗрж░ рж╕ржВржЦрзНржпрж╛:',
  createButton: "ржЖржЬржХрзЗрж░ ржЬрж╛рж░рзНржирж╛рж▓ рждрзИрж░рж┐ ржХрж░рзБржи",
  generating: 'рждрзИрж░рж┐ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ...',
  journalTitle: "ржЖржЬржХрзЗрж░ ржЬрж╛рж░рзНржирж╛рж▓",
  noEntriesError: 'ржЖржЬржХрзЗрж░ ржЬрж╛рж░рзНржирж╛рж▓ рждрзИрж░рж┐ ржХрж░рждрзЗ ржЕржирзНрждржд ржПржХржЯрж┐ ржХржерзЛржкржХржержи ржкрзНрж░ржпрж╝рзЛржЬржиред',
  noLanguageError: 'ржнрж╛рж╖рж╛ ржПржЦржирзЛ ржирж┐рж░рзНржзрж╛рж░рж┐ржд рж╣ржпрж╝ржирж┐ред ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржЕржкрзЗржХрзНрж╖рж╛ ржХрж░рзБржи ржмрж╛ ржкрзГрж╖рзНржарж╛ржЯрж┐ рж░рж┐ржлрзНрж░рзЗрж╢ ржХрж░рзБржиред',
  trivialError: 'ржЖржЬржХрзЗрж░ ржЦржмрж░ рж╢рзБржзрзБржЗ рж╢рзБржнрзЗржЪрзНржЫрж╛ред ржЖрж░ржУ ржЧржнрзАрж░ ржХржерзЛржкржХржержи ржХрж░рзБржи ржПржмржВ ржкрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржи!',
  successMessage: 'тЬЕ ржЬрж╛рж░рзНржирж╛рж▓ рж╕ржлрж▓ржнрж╛ржмрзЗ рждрзИрж░рж┐ рж╣ржпрж╝рзЗржЫрзЗ!',
  errorMessage: 'ржЬрж╛рж░рзНржирж╛рж▓ рждрзИрж░рж┐ ржХрж░рждрзЗ рждрзНрж░рзБржЯрж┐ рж╣ржпрж╝рзЗржЫрзЗред ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред'
}
,'gu-IN': {
  title: 'ркдркорк╛рк░рлБркВ ркжрлИркирк┐ркХ ркЬрк░рлНркирк▓',
  entriesToday: 'ркЖркЬркирлА рк╡рк╛ркдркЪрлАркдрлЛркирлА рк╕ркВркЦрлНркпрк╛:',
  createButton: "ркЖркЬркирлБркВ ркЬрк░рлНркирк▓ ркмркирк╛рк╡рлЛ",
  generating: 'ркмркирк╛рк╡рк╛ркИ рк░рк╣рлНркпрлБркВ ркЫрлЗ...',
  journalTitle: "ркЖркЬркирлБркВ ркЬрк░рлНркирк▓",
  noEntriesError: 'ркЖркЬркирлБркВ ркЬрк░рлНркирк▓ ркмркирк╛рк╡рк╡рк╛ ркорк╛ркЯрлЗ ркУркЫрк╛ркорк╛ркВ ркУркЫрлА ркПркХ рк╡рк╛рк░ рк╡рк╛ркдркЪрлАркд ркЬрк░рлВрк░рлА ркЫрлЗ.',
  noLanguageError: 'ркнрк╛рк╖рк╛ рк╣ркЬрлА рк╕рлБркзрлА рк╕рлБркпрлЛркЬрк┐ркд ркиркерлА. ркХрлГрккрк╛ ркХрк░рлАркирлЗ рк░рк╛рк╣ ркЬрлБркУ ркЕркерк╡рк╛ рккрлЗркЬркирлЗ рк░рк┐рклрлНрк░рлЗрк╢ ркХрк░рлЛ.',
  trivialError: 'ркЖркЬркирлА ркорк╛рк╣рк┐ркдрлА рклркХрлНркд рк╢рлБркнрлЗркЪрлНркЫрк╛ркУ ркЫрлЗ. рк╡ркзрлБ ркЧрк╛ркв рк╕ркВрк╡рк╛ркж ркХрк░рлЛ ркЕркирлЗ рккркЫрлА рклрк░рлА рккрлНрк░ркпрк╛рк╕ ркХрк░рлЛ!',
  successMessage: 'тЬЕ ркЬрк░рлНркирк▓ рк╕рклрк│ркдрк╛рккрлВрк░рлНрк╡ркХ ркмркирк╛рк╡рк╛ркпрлБркВ ркЫрлЗ!',
  errorMessage: 'ркЬрк░рлНркирк▓ ркмркирк╛рк╡рк╡рк╛ркорк╛ркВ ркнрлВрк▓ ркЖрк╡рлА ркЫрлЗ. ркХрлГрккрк╛ ркХрк░рлАркирлЗ рклрк░рлА рккрлНрк░ркпрк╛рк╕ ркХрк░рлЛ.'
},'ml-IN': {
  title: 'р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤жр┤┐р┤╡р┤╕р╡Зр┤и р┤Ьр╡Зр╡╝р┤гр╡╜',
  entriesToday: 'р┤Зр┤ир╡Нр┤ир┤др╡Нр┤др╡Ж р┤╕р┤Вр┤нр┤╛р┤╖р┤гр┤Щр╡Нр┤Щр╡╛:',
  createButton: "р┤Зр┤ир╡Нр┤ир┤др╡Нр┤др╡Ж р┤Ьр╡Зр╡╝р┤гр╡╜ р┤╕р╡Гр┤╖р╡Нр┤Яр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х",
  generating: 'р┤╕р╡Гр┤╖р╡Нр┤Яр┤┐р┤Хр╡Нр┤Хр╡Бр┤ир╡Нр┤ир╡Б...',
  journalTitle: "р┤Зр┤ир╡Нр┤ир┤др╡Нр┤др╡Ж р┤Ьр╡Зр╡╝р┤гр╡╜",
  noEntriesError: 'р┤Ьр╡Зр╡╝р┤гр╡╜ р┤╕р╡Гр┤╖р╡Нр┤Яр┤┐р┤Хр╡Нр┤Хр┤╛р╡╗ р┤Зр┤ир╡Нр┤ир╡Н р┤Хр╡Бр┤▒р┤Юр╡Нр┤Юр┤др╡Н р┤Тр┤░р╡Б р┤╕р┤Вр┤нр┤╛р┤╖р┤гр┤В р┤Йр┤гр╡Нр┤Яр┤╛р┤пр┤┐р┤░р┤┐р┤Хр╡Нр┤Хр┤гр┤В.',
  noLanguageError: 'р┤нр┤╛р┤╖ р┤Зр┤ир┤┐р┤пр╡Бр┤В р┤Хр╡Нр┤░р┤ор╡Ар┤Хр┤░р┤┐р┤Ър╡Нр┤Ър┤┐р┤Яр╡Нр┤Яр┤┐р┤▓р╡Нр┤▓. р┤жр┤пр┤╡р┤╛р┤пр┤┐ р┤Хр┤╛р┤др╡Нр┤др┤┐р┤░р┤┐р┤Хр╡Нр┤Хр╡Бр┤Х р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤кр╡Зр┤Ьр╡Н р┤▒р┤┐р┤лр╡Нр┤░р┤╖р╡Н р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х.',
  trivialError: 'р┤Зр┤ир╡Нр┤ир┤др╡Нр┤др╡Ж р┤╡р┤┐р┤╡р┤░р┤Щр╡Нр┤Щр╡╛ р┤╡р╡Жр┤▒р╡Бр┤В р┤Жр┤╢р┤Вр┤╕р┤Хр┤│р┤╛р┤гр╡Н. р┤Хр╡Вр┤Яр╡Бр┤др╡╜ р┤Жр┤┤р┤ор╡Бр┤│р╡Нр┤│ р┤╕р┤Вр┤нр┤╛р┤╖р┤гр┤В р┤ир┤Яр┤др╡Нр┤др┤┐р┤п р┤╢р╡Зр┤╖р┤В р┤╡р╡Ар┤гр╡Нр┤Яр╡Бр┤В р┤╢р╡Нр┤░р┤ор┤┐р┤Хр╡Нр┤Хр╡Бр┤Х!',
  successMessage: 'тЬЕ р┤Ьр╡Зр╡╝р┤гр╡╜ р┤╡р┤┐р┤Ьр┤пр┤Хр┤░р┤ор┤╛р┤пр┤┐ р┤╕р╡Гр┤╖р╡Нр┤Яр┤┐р┤Ър╡Нр┤Ър╡Б!',
  errorMessage: 'р┤Ьр╡Зр╡╝р┤гр╡╜ р┤╕р╡Гр┤╖р╡Нр┤Яр┤┐р┤Хр╡Нр┤Хр╡Бр┤ор╡Нр┤кр╡Лр╡╛ р┤кр┤┐р┤╢р┤Хр╡Н. р┤╡р╡Ар┤гр╡Нр┤Яр╡Бр┤В р┤╢р╡Нр┤░р┤ор┤┐р┤Хр╡Нр┤Хр╡Бр┤Х.'
},'pa-IN': {
  title: 'ридрйБри╣ри╛рибри╛ ри░рйЛриЬри╝ри╛риири╛ риЬри░риири▓',
  entriesToday: 'риЕрй▒риЬ рижрйАриЖриВ риЧрй▒ри▓римри╛ридри╛риВ:',
  createButton: 'риЕрй▒риЬ рижри╛ риЬри░риири▓ римригри╛риУ',
  generating: 'римригри╛ ри░ри╣рйЗ ри╣ри╛риВ...',
  journalTitle: 'риЕрй▒риЬ рижри╛ риЬри░риири▓',
  noEntriesError: 'риЬри░риири▓ римригри╛риЙриг ри▓риИ риХри┐ри░рикри╛ риХри░риХрйЗ риЕрй▒риЬ риШрй▒риЯрйЛ-риШрй▒риЯ риЗрй▒риХ ри╡ри╛ри░ риЧрй▒ри▓римри╛рид риХри░рйЛред',
  noLanguageError: 'ринри╛ри╕ри╝ри╛ ри╣риЬрйЗ ридрй▒риХ ри╕рйИриЯ риири╣рйАриВ ри╣рйЛриИред риХри┐ри░рикри╛ риХри░риХрйЗ риЙрибрйАриХ риХри░рйЛ риЬри╛риВ рикрйЗриЬ риирйВрй░ ри░рйАрилрйНри░рйИри╕ри╝ риХри░рйЛред',
  trivialError: 'риЕрй▒риЬ рижрйАриЖриВ риЬри╛ригриХри╛ри░рйАриЖриВ ри╕ри┐ри░рил ри╕ри╝рйБринриХри╛риориири╛ри╡ри╛риВ ри╣рииред риерйЛрйЬрйНри╣рйА ри╣рйЛри░ риЧрй░ринрйАри░ риЧрй▒ри▓римри╛рид риХри░рйЛ, рилри┐ри░ рижрйБримри╛ри░ри╛ риХрйЛри╕ри╝ри┐ри╕ри╝ риХри░рйЛ!',
  successMessage: 'тЬЕ риЬри░риири▓ ри╕рилри▓ридри╛рикрйВри░ри╡риХ римригри╛риЗриЖ риЧри┐риЖ!',
  errorMessage: 'риЬри░риири▓ римригри╛риЙриг ри╡ри┐рй▒риЪ риЧри▓ридрйА риЖриИред риХри┐ри░рикри╛ риХри░риХрйЗ рилри┐ри░ риХрйЛри╕ри╝ри┐ри╕ри╝ риХри░рйЛред'
}

>>>>>>> Stashed changes





  // Add other languages as needed
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
};

/* тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА MAIN PAGE тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА */
const JournalPage = () => {
  /* тФАтФАтФА state тФАтФАтФА */
  const [user, setUser] = useState(null);
  const [lang, setLang] = useState('en-IN');
  const [entries, setEntries] = useState([]);
  const [todayJournal, setTodayJournal] = useState(null);
  const [creating, setCreating] = useState(false);
  const [error, setError] = useState('');
  const [message, setMessage] = useState('');
<<<<<<< Updated upstream
<<<<<<< Updated upstream
  const [theme, setTheme] = useState('plain');          // ЁЯЖХ paper theme
  const themes = ['plain', 'grid', 'sticky'];
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes

  const todayISO = new Date().toISOString().split('T')[0];
  const t = journalUITranslations[lang] || journalUITranslations['en-IN'];

<<<<<<< Updated upstream
<<<<<<< Updated upstream
  /* тФАтФАтФА auth + language + existing journal тФАтФАтФА */
=======
  // Load authenticated user + language + journal
>>>>>>> Stashed changes
=======
  // Load authenticated user + language + journal
>>>>>>> Stashed changes
  useEffect(() => {
    const unsub = onAuthStateChanged(getAuth(), async (u) => {
      if (!u) return;
      setUser(u);

      try {
        const userDoc = await getDoc(doc(db, 'users', u.uid));
        if (userDoc.exists()) {
          setLang(userDoc.data().language || 'en-IN');
        }

        const journalSnap = await getDoc(
          doc(db, 'users', u.uid, 'journals', todayISO)
        );
        if (journalSnap.exists()) {
          setTodayJournal(journalSnap.data().text);
        }
      } catch (err) {
        console.error('Error loading language or journal:', err);
      }
    });
    return () => unsub();
<<<<<<< Updated upstream
<<<<<<< Updated upstream
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [todayISO]);

  /* тФАтФАтФА fetch todayтАЩs entries тФАтФАтФА */
=======
  }, []);

  // Fetch today's entries
>>>>>>> Stashed changes
=======
  }, []);

  // Fetch today's entries
>>>>>>> Stashed changes
  useEffect(() => {
    if (!user) return;

    const fetchTodayEntries = async () => {
      const now = Timestamp.now().toDate();
      const start = new Date(now); start.setHours(0, 0, 0, 0);
      const end = new Date(now); end.setHours(23, 59, 59, 999);

      const q = query(
        collection(db, 'users', user.uid, 'entries'),
        where('createdAt', '>=', Timestamp.fromDate(start)),
        where('createdAt', '<=', Timestamp.fromDate(end)),
        orderBy('createdAt')
      );
      const snap = await getDocs(q);
      setEntries(snap.docs.map(d => d.data()));
    };

    fetchTodayEntries();
  }, [user]);

<<<<<<< Updated upstream
<<<<<<< Updated upstream
  /* тФАтФАтФА create journal (logic UNTOUCHED) тФАтФАтФА */
=======
  // Create today's journal using actual conversations
>>>>>>> Stashed changes
=======
  // Create today's journal using actual conversations
>>>>>>> Stashed changes
  const createJournal = async () => {
    if (!entries.length) {
      setError(t.noEntriesError);
      return;
    }

    if (!lang) {
      setError(t.noLanguageError);
      return;
    }

    const meaningful = entries.filter(
      (e) => !isTrivial(e.input) && !isTrivial(e.response)
    );

    if (!meaningful.length) {
      setError(t.trivialError);
      return;
    }

    const combined = meaningful
      .map((e) => `Q: ${e.input}\nA: ${e.response}`)
      .join('\n\n');

    const prompt = `
You are helping an expectant mother keep a pregnancy journal. Give the journal in mothers point of view, helping her to preserve her pregnancy journey memories with emotion.

Rules:
- You must write **only in ${lang.split('-')[0]}**. Do not mix with other languages.
- You must write fully and ONLY in native script.
- Never mix Roman script or English.
- Never translate or explain anything in English except when the user language is english.
- Use ONLY what she actually shared today.
- if the conversation is just a casual one like hi how are you, give output as something like "today, I interacted with Janani Aarogya..." 
- If it's longer, use a gentle, lyrical tone, showcasing the emotions of the mother (max ~120 words).
- Never switch languages тАФ use ${lang.split('-')[0]} throughout.
- Never invent new events or feelings. Use only feelings and events shared by user.
- if the user shares something about her baby, represent the emotional love towards her baby in a creative way.

Mother's conversation today:
${combined}
    `.trim(); // тЖР prompt left EXACTLY as before

    try {
      setCreating(true);
      setError('');
      setMessage('');

      const diary = await getGeminiReply(prompt, lang, 'journal');

      await setDoc(
        doc(db, 'users', user.uid, 'journals', todayISO),
        { text: diary, createdAt: serverTimestamp() }
      );

      setTodayJournal(diary);
      setMessage(t.successMessage);
    } catch (err) {
      console.error('тЭМ Error creating journal:', err);
      setError(t.errorMessage);
    } finally {
      setCreating(false);
    }
  };

  /* тФАтФАтФА render тФАтФАтФА */
  return (
<<<<<<< Updated upstream
<<<<<<< Updated upstream
    <div className="journal-page overflow-x-hidden">
      <Navbar translations={t} />

      <main className="max-w-3xl mx-auto px-4 py-8">
        <h2 className="text-3xl font-bold text-pink-600 mb-2 text-center">{t.title}</h2>
        <p className="text-sm text-gray-600 text-center mb-6">
          {t.entriesToday} <strong>{entries.length}</strong>
        </p>

        <div className="flex justify-center mb-2">
          <button
            onClick={createJournal}
            disabled={creating || entries.length === 0 || !lang}
            className={`px-6 py-2 rounded-full font-semibold transition-all shadow ${
              entries.length === 0 || !lang
                ? 'bg-gray-300 cursor-not-allowed text-gray-600'
                : 'bg-pink-500 hover:bg-pink-600 text-white'
            }`}
          >
            {creating ? t.generating : t.createButton}
          </button>
        </div>

        {todayJournal && (
          <div className="flex justify-center mb-6">
            <label className="text-sm text-gray-700 mr-2">
              {t.themeLabel || 'Choose Paper Style'}:
            </label>
            <select
              value={theme}
              onChange={(e) => setTheme(e.target.value)}
              className="border border-rose-300 rounded px-3 py-1 text-sm focus:outline-none focus:ring focus:ring-rose-200"
            >
              {themes.map((th) => (
                <option key={th} value={th}>
                  {th.charAt(0).toUpperCase() + th.slice(1)}
                </option>
              ))}
            </select>
          </div>
        )}

        {error && <p className="text-red-500 text-center mb-4 animate-pulse">{error}</p>}
        {message && <p className="text-green-600 text-center mb-4">{message}</p>}

        {todayJournal && (
          <div className={`journal-paper ${theme}`}>
            <div className="tape-left"></div>
            <div className="tape-right"></div>

            <h3 className="font-bold text-xl mb-3 text-rose-600 border-b border-rose-200 pb-1">
              ЁЯУУ {t.journalTitle}
            </h3>

            <p className="text-gray-800 whitespace-pre-wrap leading-relaxed text-[1.05rem] tracking-wide">
              {todayJournal}
            </p>
          </div>
        )}
      </main>
=======
    <div className="p-6 max-w-3xl mx-auto">
      <h2 className="text-2xl font-bold text-pink-600 mb-4">{t.title}</h2>

      <p className="text-sm text-gray-600 mb-2">
        {t.entriesToday} <strong>{entries.length}</strong>
      </p>

      <button
        onClick={createJournal}
        disabled={creating || entries.length === 0 || !lang}
        className={`mb-6 px-4 py-2 rounded ${
          entries.length === 0 || !lang
            ? 'bg-gray-300 cursor-not-allowed'
            : 'bg-pink-500 hover:bg-pink-600 text-white'
        }`}
      >
        {creating ? t.generating : t.createButton}
      </button>

      {error && <p className="text-red-500 mb-4">{error}</p>}
      {message && <p className="text-green-600 mb-4">{message}</p>}

      {todayJournal && (
        <div className="mt-4 p-4 bg-white shadow rounded-lg">
          <h3 className="font-semibold text-gray-700 mb-2">ЁЯУУ {t.journalTitle}</h3>
          <p className="text-gray-800 whitespace-pre-wrap leading-relaxed">{todayJournal}</p>
        </div>
      )}
>>>>>>> Stashed changes
=======
    <div className="p-6 max-w-3xl mx-auto">
      <h2 className="text-2xl font-bold text-pink-600 mb-4">{t.title}</h2>

      <p className="text-sm text-gray-600 mb-2">
        {t.entriesToday} <strong>{entries.length}</strong>
      </p>

      <button
        onClick={createJournal}
        disabled={creating || entries.length === 0 || !lang}
        className={`mb-6 px-4 py-2 rounded ${
          entries.length === 0 || !lang
            ? 'bg-gray-300 cursor-not-allowed'
            : 'bg-pink-500 hover:bg-pink-600 text-white'
        }`}
      >
        {creating ? t.generating : t.createButton}
      </button>

      {error && <p className="text-red-500 mb-4">{error}</p>}
      {message && <p className="text-green-600 mb-4">{message}</p>}

      {todayJournal && (
        <div className="mt-4 p-4 bg-white shadow rounded-lg">
          <h3 className="font-semibold text-gray-700 mb-2">ЁЯУУ {t.journalTitle}</h3>
          <p className="text-gray-800 whitespace-pre-wrap leading-relaxed">{todayJournal}</p>
        </div>
      )}
>>>>>>> Stashed changes
    </div>
  );
};

export default JournalPage;