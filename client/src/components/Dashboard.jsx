  // src/components/Dashboard.jsx
  import React, { useEffect, useState } from 'react';
  import { useNavigate } from 'react-router-dom';
  import InputSection from './InputSection';
  import { getAuth } from 'firebase/auth';
  import { doc, getDoc, setDoc, updateDoc } from 'firebase/firestore';
  import { db } from '../firebase';
  import dayjs from 'dayjs';
  import Confetti from 'react-confetti';
  import { useWindowSize } from 'react-use';
  import { motion } from 'framer-motion';
  import HeroImage from '../assets/logo.png';
  import vaultImg from '../assets/vault.png';
  import yogaImg from '../assets/yoga.webp';
  import jrnlImg from '../assets/jrnl.jpg';
  import ayurvedaImg from '../assets/ayurveda.png';

  // тЬЕ keep keys allтАСlowercase and exactly the same string
  const FEATURE_IMAGES = {
    journal:jrnlImg,
    memoryvault:vaultImg,
    ayurveda: ayurvedaImg,
    yoga:yogaImg        // renamed from тАЬmaternalYogaтАЭ
  };


  const TRANSLATIONS = {
    'hi-IN': {
      title: 'рдЬрдирдиреА рдЖрд░реЛрдЧреНрдп',
      subtitle: 'рд╣рд░ рднрд╛рд░рддреАрдп рдорд╛рдБ рдХреЗ рд▓рд┐рдП рдПрдХ рдХреЛрдорд▓ рд╕рд╛рдереА',
      description1: 'рдЬрдирдиреА рдЖрд░реЛрдЧреНрдп рдЧреНрд░рд╛рдореАрдг рдорд╛рддрд╛рдУрдВ рдХрд╛ рд╕рдорд░реНрдерди рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП AI рдХреЛ рдкреНрд░рд╛рдЪреАрди рднрд╛рд░рддреАрдп рджреЗрдЦрднрд╛рд▓ рдЬреНрдЮрд╛рди рдХреЗ рд╕рд╛рде рдЬреЛрдбрд╝рддреА рд╣реИ - рдЧрд░реНрднрд╛рд╡рд╕реНрдерд╛ рд╕реЗ рдкрд╣рд▓реЗ, рдЧрд░реНрднрд╛рд╡рд╕реНрдерд╛ рдФрд░ рдкреНрд░рд╕рд╡реЛрддреНрддрд░ рдореЗрдВред',
      description2: 'рд╡реЙрдпрд╕-рдкреНрд░рдердо, рднрд╛рд╖рд╛-рдЬрд╛рдЧрд░реВрдХ рдФрд░ рдЧрд╣рд░рд╛рдИ рд╕реЗ рд╡реНрдпрдХреНрддрд┐рдЧрддред рдЖрдпреБрд░реНрд╡реЗрдж рд╕реЗ рд▓реЗрдХрд░ рдпрд╛рджреЛрдВ рддрдХ, рдпрд╣ рдЖрдкрдХреЗ рд╕рд╛рде рдЪрд▓рддрд╛ рд╣реИред',
      checklistTitle: 'ЁЯМ╕ рджреИрдирд┐рдХ рд╕реНрд╡рд╛рд╕реНрдереНрдп рдЬрд╛рдВрдЪ рд╕реВрдЪреА',
      checklistItems: [
        '3 рд▓реАрдЯрд░ рдкрд╛рдиреА рдкрд┐рдПрдВ',
        'рдорд╛рддреГ рдпреЛрдЧ рдХрд░реЗрдВ',
        'рд╕реНрд╡рд╕реНрде рднреЛрдЬрди рдХрд░реЗрдВ',
        'рдкреНрд░рд╕рд╡ рдкреВрд░реНрд╡ рд╡рд┐рдЯрд╛рдорд┐рди рд▓реЗрдВ',
        'рд╢реНрд╡рд╛рд╕ рдЕрднреНрдпрд╛рд╕ рдХрд░реЗрдВ'
      ],
      reminderTitle: 'ЁЯЧУ рдбреЙрдХреНрдЯрд░-рджреМрд░рд╛ рдЕрдиреБрд╕реНрдорд╛рд░рдХ',
      reminderLabel: 'рджреМрд░рд╛ рддрд┐рдерд┐',
      repeatLabel: 'рджреЛрд╣рд░рд╛рдПрдВ',
      frequencyOptions: [
        { value: 'once', label: 'рдПрдХ рдмрд╛рд░' },
        { value: 'weekly', label: 'рд╕рд╛рдкреНрддрд╛рд╣рд┐рдХ' },
        { value: 'monthly', label: 'рдорд╛рд╕рд┐рдХ' }
      ],
      saveReminder: 'рдЕрдиреБрд╕реНрдорд╛рд░рдХ рд╕рд╣реЗрдЬреЗрдВ',
      streakTitle: 'ЁЯФе рдЖрдк рдПрдХ рд╕реНрдЯреНрд░реАрдХ рдкрд░ рд╣реИрдВ!',
      streakText: 'рджрд┐рди {streak} рдХреА рдирд┐рд░рдВрддрд░рддрд╛',
      streakSubtext: 'рдЪрд▓рддреЗ рд░рд╣реЛ, рддреБрдо рдЕрджреНрднреБрдд рдХрд░ рд░рд╣реЗ рд╣реЛ ЁЯТк',
      features: [
        { 
          key: 'journal',
          title: 'рдЬрд░реНрдирд▓', 
          desc: 'AI рджреНрд╡рд╛рд░рд╛ рд╕рдВрдЪрд╛рд▓рд┐рдд рджреИрдирд┐рдХ рднрд╛рд╡рдирд╛рддреНрдордХ рд╕рд╛рд░рд╛рдВрд╢, рдореВрдб рд╢рд┐рдлреНрдЯ рдХреЛ рдЯреНрд░реИрдХ рдХрд░рдиреЗ рдФрд░ рдЫреЛрдЯреА рдЬреАрдд рдХрд╛ рдЬрд╢реНрди рдордирд╛рдиреЗ рдореЗрдВ рдорджрдж рдХрд░рддрд╛ рд╣реИред',
          link: '/journal',
    
        },
        { 
          key: 'memoryvault',
          title: 'рдореЗрдореЛрд░реА рд╡реЙрд▓реНрдЯ', 
          desc: 'рдорд╛рдЗрд▓рд╕реНрдЯреЛрди, рднрд╛рд╡рдирд╛рдУрдВ рдФрд░ рддрд╕реНрд╡реАрд░реЛрдВ рдХреЛ рдПрдХ рд╕реНрдерд╛рди рдкрд░ рд╕рдВрд░рдХреНрд╖рд┐рдд рдХрд░реЗрдВ рдЬрд┐рд╕реЗ рдЖрдк рдХрднреА рднреА рджреЗрдЦ рд╕рдХрддреЗ рд╣реИрдВред',
          link: '/memory-vault',
          
        },
        { key:'ayurveda',
          title: 'рдЖрдпреБрд░реНрд╡реЗрдж', 
          desc: 'рдЖрдкрдХреЗ рддреНрд░реИрдорд╛рд╕рд┐рдХ рдпрд╛ рдкреНрд░рд╕рд╡реЛрддреНрддрд░ рдХреЗ рд▓рд┐рдП рднрд╛рд░рддреАрдп рдЬреНрдЮрд╛рди - рдЖрдкрдХреЗ рд▓рд┐рдП рд╡реНрдпрдХреНрддрд┐рдЧрдд рднреЛрдЬрди, рдЬрдбрд╝реА-рдмреВрдЯрд┐рдпрд╛рдБ рдФрд░ рдЕрдиреБрд╖реНрдард╛рдиред',
          link:'/ayurveda'
        },
        { 
          key:'yoga',
          title: 'рдорд╛рддреГ рдпреЛрдЧ', 
          desc: 'рдЖрдкрдХреА рддрд╛рдХрдд, рд╢рд╛рдВрддрд┐ рдФрд░ рдЬреБрдбрд╝рд╛рд╡ рдХреЛ рдкреЛрд╖рд┐рдд рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдЪрд░рдг-рд╡рд╛рд░ рдпреЛрдЧ рджрд┐рдирдЪрд░реНрдпрд╛ред',
          link:'/yoga'
        }
      ],
      exploreNow: 'рдЕрднреА рдПрдХреНрд╕рдкреНрд▓реЛрд░ рдХрд░реЗрдВ'
    },
    'en-IN': {
      title: 'Janani Aarogya',
      subtitle: 'A gentle companion for every Indian mother',
      description1: 'Janani Aarogya blends AI with ancient Indian care wisdom to support rural mothers тАФ across pre-pregnancy, pregnancy, and postpartum.',
      description2: 'Voice-first, language-aware and deeply personal. From Ayurveda to memories, it walks with you.',
      checklistTitle: 'ЁЯМ╕ Daily Wellness Checklist',
      checklistItems: [
        'Drink 3L Water',
        'Do Maternal Yoga',
        'Eat a Healthy Meal',
        'Take Prenatal Vitamins',
        'Practice Breathing'
      ],
      reminderTitle: 'ЁЯЧУ Doctor-Visit Reminder',
      reminderLabel: 'Visit Date',
      repeatLabel: 'Repeat',
      frequencyOptions: [
        { value: 'once', label: 'Once' },
        { value: 'weekly', label: 'Weekly' },
        { value: 'monthly', label: 'Monthly' }
      ],
      saveReminder: 'Save Reminder',
      streakTitle: 'ЁЯФе You\'re on a Streak!',
      streakText: 'Day {streak} of consistency',
      streakSubtext: 'Keep going, you\'re doing amazing ЁЯТк',
      features: [
        {  key:'journal',
          title: 'Journal', 
          desc: 'Daily emotional summaries powered by AI, helping you track mood shifts and celebrate small wins.',
          link: '/journal'
        },
        {  key:'memoryvault',
          title: 'Memory Vault', 
          desc: 'Preserve milestones, emotions, and photos in one space you can revisit anytime.',
          link: '/memory-vault'
        },
        {  key:'ayurveda',
          title: 'Ayurveda', 
          desc: 'Indian wisdom for your trimester or postpartum тАФ food, herbs & rituals personalised to you.',
          link: '/ayurveda'
        },
        {  key:'yoga',
          title: 'Maternal Yoga', 
          desc: 'Stage-wise yoga routines to nurture your strength, peace and connection.',
          link: '/yoga'
        }
      ],
      exploreNow: 'Explore Now'
    },
    // Add other languages following the same pattern
    'ta-IN': {
    title: 'роЬройройро┐ роЖро░рпЛроХрпНроХро┐ропроорпН',
    subtitle: 'роТро╡рпНро╡рпКро░рпБ роЗроирпНродро┐роп родро╛ропрпНроХрпНроХрпБроорпН роТро░рпБ роорпЖройрпНроорпИропро╛рой родрпЛро┤ро░рпН',
    description1: 'роЬройройро┐ роЖро░рпЛроХрпНроХро┐ропроорпН AIропрпИ рокрогрпНроЯрпИроп роЗроирпНродро┐роп рокро░ро╛рооро░ро┐рокрпНрокрпБ роЮро╛ройродрпНродрпБроЯройрпН роЗрогрпИродрпНродрпБ роХро┐ро░ро╛роорокрпНрокрпБро▒ родро╛ропрпНрооро╛ро░рпНроХро│рпБроХрпНроХрпБ роЖродро░ро╡ро╛роХ роЙро│рпНро│родрпБ - роХро░рпНрокрпНрокродрпНродро┐ро▒рпНроХрпБ роорпБройрпН, роХро░рпНрокрпНрокроорпН рооро▒рпНро▒рпБроорпН рокро┐ро░роЪро╡родрпНродро┐ро▒рпНроХрпБрокрпН рокро┐роирпНродрпИроп роХро╛ро▓роЩрпНроХро│ро┐ро▓рпН.',
    description2: 'роХрпБро░ро▓рпН-роорпБродро▓рпН, роорпКро┤ро┐-ро╡ро┐ро┤ро┐рокрпНрокрпБроЯройрпН рооро▒рпНро▒рпБроорпН роЖро┤рооро╛роХ родройро┐рокрпНрокроЯрпНроЯродрпБ. роЖропрпБро░рпНро╡рпЗродродрпНродро┐ро▓рпН роЗро░рпБроирпНродрпБ роиро┐ройрпИро╡рпБроХро│рпН ро╡ро░рпИ, роЕродрпБ роЙроЩрпНроХро│рпБроЯройрпН роироЯроХрпНроХро┐ро▒родрпБ.',
    checklistTitle: 'ЁЯМ╕ родро┐ройроЪро░ро┐ роЖро░рпЛроХрпНроХро┐роп роЪро░ро┐рокро╛ро░рпНрокрпНрокрпБ рокроЯрпНроЯро┐ропро▓рпН',
    checklistItems: [
      '3 ро▓ро┐роЯрпНроЯро░рпН родрогрпНрогрпАро░рпН роХрпБроЯро┐роХрпНроХро╡рпБроорпН',
      'родро╛ропрпНроорпИ ропрпЛроХро╛ роЪрпЖропрпНропро╡рпБроорпН',
      'роЖро░рпЛроХрпНроХро┐ропрооро╛рой роЙрогро╡рпБ роЙрогрпНрогро╡рпБроорпН',
      'роХро░рпНрокрпНрокродрпНродро┐ро▒рпНроХрпБ роорпБройрпН ро╡рпИроЯрпНроЯрооро┐ройрпНроХро│рпН роОроЯрпБродрпНродрпБроХрпН роХрпКро│рпНро│ро╡рпБроорпН',
      'роЪрпБро╡ро╛роЪрокрпН рокропро┐ро▒рпНроЪро┐ роЪрпЖропрпНропро╡рпБроорпН'
    ],
    reminderTitle: 'ЁЯЧУ рооро░рпБродрпНродрпБро╡ро░рпН-рокро╛ро░рпНро╡рпИ роиро┐ройрпИро╡рпВроЯрпНроЯро▓рпН',
    reminderLabel: 'рокро╛ро░рпНро╡рпИ родрпЗродро┐',
    repeatLabel: 'роорпАрогрпНроЯрпБроорпН',
    frequencyOptions: [
      { value: 'once', label: 'роТро░рпБ роорпБро▒рпИ' },
      { value: 'weekly', label: 'ро╡ро╛ро░ро╛роирпНродро┐ро░' },
      { value: 'monthly', label: 'рооро╛родро╛роирпНродро┐ро░' }
    ],
    saveReminder: 'роиро┐ройрпИро╡рпВроЯрпНроЯро▓рпИ роЪрпЗрооро┐роХрпНроХро╡рпБроорпН',
    streakTitle: 'ЁЯФе роирпАроЩрпНроХро│рпН роТро░рпБ родрпКроЯро░ро┐ро▓рпН роЗро░рпБроХрпНроХро┐ро▒рпАро░рпНроХро│рпН!',
    streakText: 'роиро┐ро▓рпИродрпНродройрпНроорпИропро┐ройрпН роиро╛ро│рпН {streak}',
    streakSubtext: 'родрпКроЯро░рпНроирпНродрпБ роЪрпЖро▓рпНро▓рпБроЩрпНроХро│рпН, роирпАроЩрпНроХро│рпН роЕро░рпБроорпИропро╛роХ роЪрпЖропрпНроХро┐ро▒рпАро░рпНроХро│рпН ЁЯТк',
    features: [
      { key:'journal',
        title: 'рокродрпНродро┐ро░ро┐роХрпИ', 
        desc: 'AI роорпВро▓роорпН роЗропроХрпНроХрокрпНрокроЯрпБроорпН родро┐ройроЪро░ро┐ роЙрогро░рпНроЪрпНроЪро┐ роЪрпБро░рпБроХрпНроХроЩрпНроХро│рпН, рооройроиро┐ро▓рпИ рооро╛ро▒рпНро▒роЩрпНроХро│рпИроХрпН роХрогрпНроХро╛рогро┐роХрпНроХро╡рпБроорпН роЪро┐ро▒ро┐роп ро╡рпЖро▒рпНро▒ро┐роХро│рпИ роХрпКрогрпНроЯро╛роЯро╡рпБроорпН роЙродро╡рпБроХро┐ро▒родрпБ.',
        link: '/journal'
      },
      { key:'memoryvault',
        title: 'роиро┐ройрпИро╡рпБ роХро│роЮрпНроЪро┐ропроорпН', 
        desc: 'роорпИро▓рпНроХро▒рпНроХро│рпН, роЙрогро░рпНроЪрпНроЪро┐роХро│рпН рооро▒рпНро▒рпБроорпН рокрпБроХрпИрокрпНрокроЯроЩрпНроХро│рпИ роирпАроЩрпНроХро│рпН роОрокрпНрокрпЛродрпБ ро╡рпЗрогрпНроЯрпБрооро╛ройро╛ро▓рпБроорпН роорпАрогрпНроЯрпБроорпН рокро╛ро░рпНроХрпНроХроХрпНроХрпВроЯро┐роп роТро░рпБ роЗроЯродрпНродро┐ро▓рпН рокро╛родрпБроХро╛роХрпНроХро╡рпБроорпН.',
        link: '/memory-vault'
      },
      { key:'ayurveda',
        title: 'роЖропрпБро░рпНро╡рпЗродроорпН', 
        desc: 'роЙроЩрпНроХро│рпН роорпВройрпНро▒рпБ рооро╛род роХро╛ро▓роорпН роЕро▓рпНро▓родрпБ рокро┐ро░роЪро╡родрпНродро┐ро▒рпНроХрпБрокрпН рокро┐роирпНродрпИроп роХро╛ро▓родрпНродро┐ро▒рпНроХро╛рой роЗроирпНродро┐роп роЮро╛ройроорпН - роЙроЩрпНроХро│рпБроХрпНроХрпБ родройро┐рокрпНрокропройро╛роХрпНроХрокрпНрокроЯрпНроЯ роЙрогро╡рпБ, роорпВро▓ро┐роХрпИроХро│рпН рооро▒рпНро▒рпБроорпН роЪроЯроЩрпНроХрпБроХро│рпН.',
        link: '/ayurveda'
      },
      { key:'yoga',
        title: 'родро╛ропрпНроорпИ ропрпЛроХро╛', 
        desc: 'роЙроЩрпНроХро│рпН ро╡ро▓ро┐роорпИ, роЕроорпИродро┐ рооро▒рпНро▒рпБроорпН роЗрогрпИрокрпНрокрпИ ро╡ро│ро░рпНроХрпНроХ роиро┐ро▓рпИ ро╡ро╛ро░ро┐ропро╛роХ ропрпЛроХро╛ ро╡ро┤ро┐роХро╛роЯрпНроЯрпБродро▓рпНроХро│рпН.',
        link: '/yoga'
      }
    ],
    exploreNow: 'роЗрокрпНрокрпЛродрпБ роЖро░ро╛ропрпБроЩрпНроХро│рпН',
    journal: 'рокродрпНродро┐ро░ро┐роХрпИ',
    memoryVault: 'роиро┐ройрпИро╡рпБ роХро│роЮрпНроЪро┐ропроорпН',
    ayurveda: 'роЖропрпБро░рпНро╡рпЗродроорпН',
    yoga: 'ропрпЛроХро╛',
    dayStreak: 'роиро╛ро│рпН родрпКроЯро░рпН',
    jananiSays: 'роЬройройро┐ роХрпВро▒рпБроХро┐ро▒ро╛ро░рпН',
    reminderError: 'родропро╡рпБ роЪрпЖропрпНродрпБ роТро░рпБ родрпЗродро┐ропрпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН.',
    reminderSuccess: 'роиро┐ройрпИро╡рпВроЯрпНроЯро▓рпН роЪрпЗрооро┐роХрпНроХрокрпНрокроЯрпНроЯродрпБ!'
  },
    'te-IN': {
    title: 'р░Ьр░ир░ир░┐ р░Жр░░р▒Лр░Чр▒Нр░пр░В',
    subtitle: 'р░кр▒Нр░░р░др░┐ р░нр░╛р░░р░др▒Ар░п р░др░▓р▒Нр░▓р░┐р░Хр░┐ р░Тр░Х р░╕р▒Бр░ир▒Нр░ир░┐р░др░ор▒Ир░и р░др▒Лр░бр▒Бр░Чр░╛',
    description1: 'р░Ьр░ир░ир░┐ р░Жр░░р▒Лр░Чр▒Нр░пр░В AIр░ир░┐ р░кр▒Нр░░р░╛р░Ър▒Ар░и р░нр░╛р░░р░др▒Ар░п р░╕р░Вр░░р░Хр▒Нр░╖р░г р░Ьр▒Нр░Юр░╛р░ир░Вр░др▒Л р░Хр░▓р░┐р░кр░┐ р░Чр▒Нр░░р░╛р░ор▒Ар░г р░др░▓р▒Нр░▓р▒Бр░▓р░Хр▒Б р░ор░жр▒Нр░жр░др▒Бр░Чр░╛ р░Йр░Вр░Яр▒Бр░Вр░жр░┐ - р░Чр░░р▒Нр░нр░зр░╛р░░р░гр░Хр▒Б р░ор▒Бр░Вр░жр▒Б, р░Чр░░р▒Нр░нр░зр░╛р░░р░г р░ор░░р░┐р░пр▒Б р░кр▒Нр░░р░╕р░╡р░╛р░ир░Вр░др░░ р░Хр░╛р░▓р░Вр░▓р▒Л.',
    description2: 'р░╡р░╛р░пр░┐р░╕р▒Н-р░лр░╕р▒Нр░Яр▒Н, р░нр░╛р░╖-р░Ер░╡р░Чр░╛р░╣р░и р░ор░░р░┐р░пр▒Б р░▓р▒Лр░др▒Ир░и р░╡р▒Нр░пр░Хр▒Нр░др░┐р░Чр░др░В. р░Жр░пр▒Бр░░р▒Нр░╡р▒Зр░жр░В р░ир▒Бр░Вр░бр░┐ р░Ьр▒Нр░Юр░╛р░кр░Хр░╛р░▓ р░╡р░░р░Хр▒Б, р░Зр░жр░┐ р░ор▒Ар░др▒Л р░ир░бр▒Бр░╕р▒Нр░др▒Бр░Вр░жр░┐.',
    checklistTitle: 'ЁЯМ╕ р░░р▒Лр░Ьр▒Бр░╡р░╛р░░р▒А р░Жр░░р▒Лр░Чр▒Нр░п р░Ър▒Жр░Хр▒НтАМр░▓р░┐р░╕р▒Нр░Яр▒Н',
    checklistItems: [
      '3 р░▓р▒Ар░Яр░░р▒Нр░▓ р░ир▒Ар░░р▒Б р░др░╛р░Чр░Вр░бр░┐',
      'р░ор░╛р░др▒Г р░пр▒Лр░Чр░╛ р░Ър▒Зр░пр░Вр░бр░┐',
      'р░Жр░░р▒Лр░Чр▒Нр░пр░Хр░░р░ор▒Ир░и р░Жр░╣р░╛р░░р░В р░др░┐р░ир░Вр░бр░┐',
      'р░кр▒Нр░░р░╕р░╡ р░кр▒Вр░░р▒Нр░╡ р░╡р▒Ир░Яр░ор░┐р░ир▒Нр░▓р▒Б р░др▒Ар░╕р▒Бр░Хр▒Лр░Вр░бр░┐',
      'р░╢р▒Нр░╡р░╛р░╕ р░╡р▒Нр░пр░╛р░пр░╛р░ор░В р░Ър▒Зр░пр░Вр░бр░┐'
    ],
    reminderTitle: 'ЁЯЧУ р░бр░╛р░Хр▒Нр░Яр░░р▒Н-р░╡р░┐р░Ьр░┐р░Яр▒Н р░░р░┐р░ор▒Ир░Вр░бр░░р▒Н',
    reminderLabel: 'р░╡р░┐р░Ьр░┐р░Яр▒Н р░др▒Зр░жр▒А',
    repeatLabel: 'р░кр▒Бр░ир░░р░╛р░╡р▒Гр░др░В',
    frequencyOptions: [
      { value: 'once', label: 'р░Тр░Хр▒Нр░Хр░╕р░╛р░░р░┐' },
      { value: 'weekly', label: 'р░╡р░╛р░░р░╛р░ир░┐р░Хр▒Лр░╕р░╛р░░р░┐' },
      { value: 'monthly', label: 'р░ир▒Жр░▓р░Хр▒Лр░╕р░╛р░░р░┐' }
    ],
    saveReminder: 'р░░р░┐р░ор▒Ир░Вр░бр░░р▒Н р░╕р▒Зр░╡р▒Н р░Ър▒Зр░пр░Вр░бр░┐',
    streakTitle: 'ЁЯФе р░ор▒Ар░░р▒Б р░Тр░Х р░╕р▒Нр░Яр▒Нр░░р▒Ар░Хр▒НтАМр░▓р▒Л р░Йр░ир▒Нр░ир░╛р░░р▒Б!',
    streakText: 'р░╕р▒Нр░ер░┐р░░р░др▒Нр░╡р░В р░пр▒Кр░Хр▒Нр░Х р░░р▒Лр░Ьр▒Б {streak}',
    streakSubtext: 'р░Хр▒Кр░ир░╕р░╛р░Чр░┐р░Вр░Ър░Вр░бр░┐, р░ор▒Ар░░р▒Б р░Ер░жр▒Нр░нр▒Бр░др░Вр░Чр░╛ р░Ър▒Зр░╕р▒Нр░др▒Бр░ир▒Нр░ир░╛р░░р▒Б ЁЯТк',
    features: [
      { key:'journal',
        title: 'р░Ьр░░р▒Нр░ир░▓р▒Н', 
        desc: 'AI р░жр▒Нр░╡р░╛р░░р░╛ р░ир░бр░кр░мр░бр▒З р░░р▒Лр░Ьр▒Бр░╡р░╛р░░р▒А р░нр░╛р░╡р▒Лр░жр▒Нр░╡р▒Зр░Ч р░╕р░╛р░░р░╛р░Вр░╢р░╛р░▓р▒Б, р░ор▒Вр░бр▒Н р░ор░╛р░░р▒Нр░кр▒Бр░▓р░ир▒Б р░Яр▒Нр░░р░╛р░Хр▒Н р░Ър▒Зр░пр░бр░╛р░ир░┐р░Хр░┐ р░ор░░р░┐р░пр▒Б р░Ър░┐р░ир▒Нр░и р░╡р░┐р░Ьр░пр░╛р░▓р░ир▒Б р░Ьр░░р▒Бр░кр▒Бр░Хр▒Лр░╡р░бр░╛р░ир░┐р░Хр░┐ р░╕р░╣р░╛р░пр░кр░бр░др░╛р░пр░┐.',
        link: '/journal'
      },
      { key:'memoryvault',
        title: 'р░ор▒Жр░ор░░р▒А р░╡р░╛р░▓р▒Нр░Яр▒Н', 
        desc: 'р░ор▒Ир░▓р▒Бр░░р░╛р░│р▒Нр░▓р▒Б, р░нр░╛р░╡р░╛р░▓р▒Б р░ор░░р░┐р░пр▒Б р░лр▒Лр░Яр▒Лр░▓р░ир▒Б р░Тр░Хр▒З р░╕р▒Нр░ер░▓р░Вр░▓р▒Л р░╕р░Вр░░р░Хр▒Нр░╖р░┐р░Вр░Ър░Вр░бр░┐, р░ор▒Ар░░р▒Б р░Ор░кр▒Нр░кр▒Бр░бр▒Ир░ир░╛ р░др░┐р░░р░┐р░Чр░┐ р░Ър▒Вр░бр░╡р░Ър▒Нр░Ър▒Б.',
        link: '/memory-vault'
      },
      { key:'ayurveda',
        title: 'р░Жр░пр▒Бр░░р▒Нр░╡р▒Зр░жр░В', 
        desc: 'р░ор▒А р░др▒Нр░░р▒Ир░ор░╛р░╕р░┐р░Хр░В р░▓р▒Зр░жр░╛ р░кр▒Нр░░р░╕р░╡р░╛р░ир░Вр░др░░ р░Хр░╛р░▓р░╛р░ир░┐р░Хр░┐ р░нр░╛р░░р░др▒Ар░п р░Ьр▒Нр░Юр░╛р░ир░В - р░ор▒Ар░Хр▒Б р░╡р▒Нр░пр░Хр▒Нр░др░┐р░Чр░др░ор▒Ир░и р░Жр░╣р░╛р░░р░В, р░ор▒Вр░▓р░┐р░Хр░▓р▒Б р░ор░░р░┐р░пр▒Б р░Жр░Ър░╛р░░р░╛р░▓р▒Б.',
        link: '/ayurveda'
      },
      { key:'yoga',
        title: 'р░ор░╛р░др▒Г р░пр▒Лр░Чр░╛', 
        desc: 'р░ор▒А р░мр░▓р░В, р░╢р░╛р░Вр░др░┐ р░ор░░р░┐р░пр▒Б р░Ер░ир▒Бр░мр░Вр░зр░╛р░ир▒Нр░ир░┐ р░кр▒Жр░Вр░кр▒Кр░Вр░жр░┐р░Вр░Ър░бр░╛р░ир░┐р░Хр░┐ р░жр░╢р░▓ р░╡р░╛р░░р▒А р░пр▒Лр░Чр░╛ р░░р▒Кр░Яр▒Ар░ир▒Нр░▓р▒Б.',
        link: '/yoga'
      }
    ],
    exploreNow: 'р░Зр░кр▒Нр░кр▒Бр░бр▒Б р░Ер░ир▒Нр░╡р▒Зр░╖р░┐р░Вр░Ър░Вр░бр░┐',
    journal: 'р░Ьр░░р▒Нр░ир░▓р▒Н',
    memoryVault: 'р░ор▒Жр░ор░░р▒А р░╡р░╛р░▓р▒Нр░Яр▒Н',
    ayurveda: 'р░Жр░пр▒Бр░░р▒Нр░╡р▒Зр░жр░В',
    yoga: 'р░пр▒Лр░Чр░╛',
    dayStreak: 'р░░р▒Лр░Ьр▒Бр░▓ р░╕р▒Нр░Яр▒Нр░░р▒Ар░Хр▒Н',
    jananiSays: 'р░Ьр░ир░ир░┐ р░Ър▒Жр░кр▒Нр░кр░┐р░Вр░жр░┐',
    reminderError: 'р░жр░пр░Ър▒Зр░╕р░┐ р░Тр░Х р░др▒Зр░жр▒Ар░ир░┐ р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐.',
    reminderSuccess: 'р░░р░┐р░ор▒Ир░Вр░бр░░р▒Н р░╕р▒Зр░╡р▒Н р░Ър▒Зр░пр░мр░бр░┐р░Вр░жр░┐!'
  },'kn-IN': {
    title: 'р▓Ьр▓ир▓ир▓┐ р▓Жр▓░р│Лр▓Чр│Нр▓п',
    subtitle: 'р▓кр│Нр▓░р▓др▓┐ р▓нр▓╛р▓░р▓др│Ар▓п р▓др▓╛р▓пр▓┐р▓Чр│Ж р▓Тр▓Вр▓жр│Б р▓╕р│Мр▓ор│Нр▓пр▓╡р▓╛р▓ж р▓╕р▓Вр▓Чр▓╛р▓др▓┐',
    description1: 'р▓Ьр▓ир▓ир▓┐ р▓Жр▓░р│Лр▓Чр│Нр▓п AIр▓пр▓ир│Нр▓ир│Б р▓кр│Нр▓░р▓╛р▓Ър│Ар▓и р▓нр▓╛р▓░р▓др│Ар▓п р▓╕р▓Вр▓░р▓Хр│Нр▓╖р▓г р▓Ьр│Нр▓Юр▓╛р▓ир▓жр│Кр▓Вр▓жр▓┐р▓Чр│Ж р▓╕р▓Вр▓пр│Лр▓Ьр▓┐р▓╕р▓┐ р▓Чр│Нр▓░р▓╛р▓ор│Ар▓г р▓др▓╛р▓пр▓Вр▓жр▓┐р▓░р▓┐р▓Чр│Ж р▓мр│Жр▓Вр▓мр▓▓р▓╡р▓╛р▓Чр▓┐р▓жр│Ж - р▓Чр▓░р│Нр▓нр▓зр▓╛р▓░р▓гр│Жр▓Чр│Ж р▓ор│Бр▓Вр▓Ър│Ж, р▓Чр▓░р│Нр▓нр▓зр▓╛р▓░р▓гр│Ж р▓ор▓др│Нр▓др│Б р▓кр│Нр▓░р▓╕р▓╡р│Лр▓др│Нр▓др▓░ р▓Ер▓╡р▓зр▓┐р▓пр▓▓р│Нр▓▓р▓┐.',
    description2: 'р▓зр│Нр▓╡р▓ир▓┐-р▓ор│Кр▓жр▓▓, р▓нр▓╛р▓╖р▓╛-р▓╕р▓Ър│Зр▓др▓и р▓ор▓др│Нр▓др│Б р▓Жр▓│р▓╡р▓╛р▓Чр▓┐ р▓╡р│Ир▓пр▓Хр│Нр▓др▓┐р▓Х. р▓Жр▓пр│Бр▓░р│Нр▓╡р│Зр▓жр▓жр▓┐р▓Вр▓ж р▓ир│Жр▓ир▓кр│Бр▓Чр▓│р▓╡р▓░р│Жр▓Чр│Ж, р▓Ер▓жр│Б р▓ир▓┐р▓ор│Нр▓ор│Кр▓Вр▓жр▓┐р▓Чр│Ж р▓ир▓бр│Жр▓пр│Бр▓др│Нр▓др▓жр│Ж.',
    checklistTitle: 'ЁЯМ╕ р▓жр│Ир▓ир▓Вр▓жр▓┐р▓и р▓Жр▓░р│Лр▓Чр│Нр▓п р▓кр▓Яр│Нр▓Яр▓┐',
    checklistItems: [
      '3 р▓▓р│Ар▓Яр▓░р│Н р▓ир│Ар▓░р│Б р▓Хр│Бр▓бр▓┐р▓пр▓┐р▓░р▓┐',
      'р▓ор▓╛р▓др│Г р▓пр│Лр▓Ч р▓ор▓╛р▓бр▓┐',
      'р▓Жр▓░р│Лр▓Чр│Нр▓пр▓Хр▓░ р▓Жр▓╣р▓╛р▓░ р▓др▓┐р▓ир│Нр▓ир▓┐р▓░р▓┐',
      'р▓кр│Нр▓░р▓╕р▓╡р▓кр│Вр▓░р│Нр▓╡ р▓Ьр│Ар▓╡р▓╕р▓др│Нр▓╡р▓Чр▓│р▓ир│Нр▓ир│Б р▓др│Жр▓Чр│Жр▓жр│Бр▓Хр│Кр▓│р│Нр▓│р▓┐',
      'р▓╢р│Нр▓╡р▓╛р▓╕р│Лр▓Ър│Нр▓Ыр│Нр▓╡р▓╛р▓╕ р▓Ер▓нр│Нр▓пр▓╛р▓╕ р▓ор▓╛р▓бр▓┐'
    ],
    reminderTitle: 'ЁЯЧУ р▓╡р│Ир▓жр│Нр▓пр▓░ р▓нр│Зр▓Яр▓┐ р▓Ьр│Нр▓Юр▓╛р▓кр▓ир│Ж',
    reminderLabel: 'р▓нр│Зр▓Яр▓┐ р▓жр▓┐р▓ир▓╛р▓Вр▓Х',
    repeatLabel: 'р▓кр│Бр▓ир▓░р▓╛р▓╡р▓░р│Нр▓др▓┐р▓╕р▓┐',
    frequencyOptions: [
      { value: 'once', label: 'р▓Тр▓ор│Нр▓ор│Ж' },
      { value: 'weekly', label: 'р▓╕р▓╛р▓кр│Нр▓др▓╛р▓╣р▓┐р▓Х' },
      { value: 'monthly', label: 'р▓ор▓╛р▓╕р▓┐р▓Х' }
    ],
    saveReminder: 'р▓Ьр│Нр▓Юр▓╛р▓кр▓ир│Жр▓пр▓ир│Нр▓ир│Б р▓Йр▓│р▓┐р▓╕р▓┐',
    streakTitle: 'ЁЯФе р▓ир│Ар▓╡р│Б р▓╕р│Нр▓Яр│Нр▓░р│Ар▓Хр│НтАМр▓ир▓▓р│Нр▓▓р▓┐р▓жр│Нр▓жр│Ар▓░р▓┐!',
    streakText: 'р▓╕р│Нр▓ер▓┐р▓░р▓др│Жр▓п {streak}р▓ир│З р▓жр▓┐р▓и',
    streakSubtext: 'р▓ор│Бр▓Вр▓жр│Бр▓╡р▓░р▓┐р▓╕р▓┐, р▓ир│Ар▓╡р│Б р▓Ер▓жр│Нр▓нр│Бр▓др▓╡р▓╛р▓Чр▓┐ р▓ор▓╛р▓бр│Бр▓др│Нр▓др▓┐р▓жр│Нр▓жр│Ар▓░р▓┐ ЁЯТк',
    features: [
      { 
         key:'journal',
        title: 'р▓Ьр▓░р│Нр▓ир▓▓р│Н', 
        desc: 'AI р▓Ър▓╛р▓▓р▓┐р▓д р▓жр│Ир▓ир▓Вр▓жр▓┐р▓и р▓нр▓╛р▓╡р▓ир▓╛р▓др│Нр▓ор▓Х р▓╕р▓╛р▓░р▓╛р▓Вр▓╢р▓Чр▓│р│Б, р▓ор▓ир▓╕р│Нр▓ер▓┐р▓др▓┐ р▓мр▓жр▓▓р▓╛р▓╡р▓гр│Жр▓Чр▓│р▓ир│Нр▓ир│Б р▓Яр│Нр▓░р│Нр▓пр▓╛р▓Хр│Н р▓ор▓╛р▓бр▓▓р│Б р▓ор▓др│Нр▓др│Б р▓╕р▓гр│Нр▓г р▓╡р▓┐р▓Ьр▓пр▓Чр▓│р▓ир│Нр▓ир│Б р▓Жр▓Ър▓░р▓┐р▓╕р▓▓р│Б р▓╕р▓╣р▓╛р▓п р▓ор▓╛р▓бр│Бр▓др│Нр▓др▓жр│Ж.',
        link: '/journal'
      },
      {  key:'memoryvault',
        title: 'р▓ор│Жр▓ор│Кр▓░р▓┐ р▓╡р▓╛р▓▓р│Нр▓Яр│Н', 
        desc: 'р▓ор│Ир▓▓р▓┐р▓Чр▓▓р│Нр▓▓р│Бр▓Чр▓│р│Б, р▓нр▓╛р▓╡р▓ир│Жр▓Чр▓│р│Б р▓ор▓др│Нр▓др│Б р▓лр│Лр▓Яр│Лр▓Чр▓│р▓ир│Нр▓ир│Б р▓Тр▓Вр▓жр│З р▓╕р│Нр▓ер▓│р▓жр▓▓р│Нр▓▓р▓┐ р▓╕р▓Вр▓░р▓Хр│Нр▓╖р▓┐р▓╕р▓┐, р▓ир│Ар▓╡р│Б р▓пр▓╛р▓╡р▓╛р▓Ч р▓мр│Зр▓Хр▓╛р▓жр▓░р│В р▓кр│Бр▓ир▓Г р▓ир│Лр▓бр▓мр▓╣р│Бр▓жр│Б.',
        link: '/memory-vault'
      },
      {  key:'ayurveda',
        title: 'р▓Жр▓пр│Бр▓░р│Нр▓╡р│Зр▓ж', 
        desc: 'р▓ир▓┐р▓ор│Нр▓о р▓др│Нр▓░р│Ир▓ор▓╛р▓╕р▓┐р▓Х р▓Ер▓ер▓╡р▓╛ р▓кр│Нр▓░р▓╕р▓╡р│Лр▓др│Нр▓др▓░ р▓Ер▓╡р▓зр▓┐р▓Чр│Ж р▓нр▓╛р▓░р▓др│Ар▓п р▓Ьр│Нр▓Юр▓╛р▓и - р▓ир▓┐р▓ор▓Чр▓╛р▓Чр▓┐ р▓╡р│Ир▓пр▓Хр│Нр▓др▓┐р▓Хр▓Чр│Кр▓│р▓┐р▓╕р▓▓р▓╛р▓ж р▓Жр▓╣р▓╛р▓░, р▓Фр▓╖р▓зр▓┐р▓Чр▓│р│Б р▓ор▓др│Нр▓др│Б р▓Жр▓Ър▓░р▓гр│Жр▓Чр▓│р│Б.',
        link: '/ayurveda'
      },
      {  key:'yoga',
        title: 'р▓ор▓╛р▓др│Г р▓пр│Лр▓Ч', 
        desc: 'р▓ир▓┐р▓ор│Нр▓о р▓╢р▓Хр│Нр▓др▓┐, р▓╢р▓╛р▓Вр▓др▓┐ р▓ор▓др│Нр▓др│Б р▓╕р▓Вр▓кр▓░р│Нр▓Хр▓╡р▓ир│Нр▓ир│Б р▓мр│Жр▓│р│Жр▓╕р▓▓р│Б р▓╣р▓Вр▓д-р▓╡р▓╛р▓░р│Б р▓пр│Лр▓Ч р▓╡р│Нр▓пр▓╡р▓╕р│Нр▓ер│Ж.',
        link: '/yoga'
      }
    ],
    exploreNow: 'р▓Ир▓Ч р▓Ер▓ир│Нр▓╡р│Зр▓╖р▓┐р▓╕р▓┐',
    journal: 'р▓Ьр▓░р│Нр▓ир▓▓р│Н',
    memoryVault: 'р▓ор│Жр▓ор│Кр▓░р▓┐ р▓╡р▓╛р▓▓р│Нр▓Яр│Н',
    ayurveda: 'р▓Жр▓пр│Бр▓░р│Нр▓╡р│Зр▓ж',
    yoga: 'р▓пр│Лр▓Ч',
    dayStreak: 'р▓жр▓┐р▓ир▓Чр▓│ р▓╕р│Нр▓Яр│Нр▓░р│Ар▓Хр│Н',
    jananiSays: 'р▓Ьр▓ир▓ир▓┐ р▓╣р│Зр▓│р│Бр▓др│Нр▓др▓╛р▓│р│Ж',
    reminderError: 'р▓жр▓пр▓╡р▓┐р▓Яр│Нр▓Яр│Б р▓жр▓┐р▓ир▓╛р▓Вр▓Хр▓╡р▓ир│Нр▓ир│Б р▓Жр▓░р▓┐р▓╕р▓┐.',
    reminderSuccess: 'р▓Ьр│Нр▓Юр▓╛р▓кр▓ир│Жр▓пр▓ир│Нр▓ир│Б р▓Йр▓│р▓┐р▓╕р▓▓р▓╛р▓Чр▓┐р▓жр│Ж!'
  },'mr-IN': {
    title: 'рдЬрдирдиреА рдЖрд░реЛрдЧреНрдп',
    subtitle: 'рдкреНрд░рддреНрдпреЗрдХ рднрд╛рд░рддреАрдп рдЖрдИрд╕рд╛рдареА рдПрдХ рдХреЛрдорд▓ рд╕рд╛рдереАрджрд╛рд░',
    description1: 'рдЬрдирдиреА рдЖрд░реЛрдЧреНрдп AI рд▓рд╛ рдкреНрд░рд╛рдЪреАрди рднрд╛рд░рддреАрдп рдХрд╛рд│рдЬреА рдЬреНрдЮрд╛рдирд╛рд╕реЛрдмрдд рдПрдХрддреНрд░рд┐рдд рдХрд░реВрди рдЧреНрд░рд╛рдореАрдг рдЖрдИрдВрдирд╛ рдкрд╛рдардмрд│ рджреЗрддреЗ - рдЧрд░реНрднрдзрд╛рд░рдгреЗрдкреВрд░реНрд╡реА, рдЧрд░реНрднрдзрд╛рд░рдгрд╛ рдЖрдгрд┐ рдкреНрд░рд╕реВрддреЛрддреНрддрд░ рдХрд╛рд│рд╛рдд.',
    description2: 'рдЖрд╡рд╛рдЬ-рдкреНрд░рдердо, рднрд╛рд╖рд╛-рдЬрд╛рдЧреГрдд рдЖрдгрд┐ рдЦреЛрд▓рд╡рд░ рд╡реИрдпрдХреНрддрд┐рдХ. рдЖрдпреБрд░реНрд╡реЗрджрд╛рдкрд╛рд╕реВрди рдЖрдард╡рдгреАрдВрдкрд░реНрдпрдВрдд, рддреЗ рддреБрдордЪреНрдпрд╛рд╕реЛрдмрдд рдЪрд╛рд▓рддреЗ.',
    checklistTitle: 'ЁЯМ╕ рджреИрдирдВрджрд┐рди рдЖрд░реЛрдЧреНрдп рддрдкрд╛рд╕рдгреА рдпрд╛рджреА',
    checklistItems: [
      '3 рд▓рд┐рдЯрд░ рдкрд╛рдгреА рдкреНрдпрд╛',
      'рдорд╛рддреГ рдпреЛрдЧрд╛ рдХрд░рд╛',
      'рдирд┐рд░реЛрдЧреА рдЖрд╣рд╛рд░ рдШреНрдпрд╛',
      'рдкреНрд░рд╕реВрддрд┐рдкреВрд░реНрд╡ рдЬреАрд╡рдирд╕рддреНрддреНрд╡реЗ рдШреНрдпрд╛',
      'рд╢реНрд╡рд╛рд╕реЛрдЪреНрдЫреНрд╡рд╛рд╕рд╛рдЪрд╛ рд╕рд░рд╛рд╡ рдХрд░рд╛'
    ],
    reminderTitle: 'ЁЯЧУ рдбреЙрдХреНрдЯрд░ рднреЗрдЯреАрдЪреА рдЖрдард╡рдг',
    reminderLabel: 'рднреЗрдЯреАрдЪреА рддрд╛рд░реАрдЦ',
    repeatLabel: 'рдкреБрдирд░рд╛рд╡реГрддреНрддреА',
    frequencyOptions: [
      { value: 'once', label: 'рдПрдХрджрд╛' },
      { value: 'weekly', label: 'рд╕рд╛рдкреНрддрд╛рд╣рд┐рдХ' },
      { value: 'monthly', label: 'рдорд╛рд╕рд┐рдХ' }
    ],
    saveReminder: 'рдЖрдард╡рдг рдЬрддрди рдХрд░рд╛',
    streakTitle: 'ЁЯФе рддреБрдореНрд╣реА рдПрдХрд╛ рд╕реНрдЯреНрд░реАрдХрд╡рд░ рдЖрд╣рд╛рдд!',
    streakText: 'рд╕рд╛рддрддреНрдпрд╛рдЪрд╛ {streak} рд╡рд╛ рджрд┐рд╡рд╕',
    streakSubtext: 'рд╕реБрд░реВ рдареЗрд╡рд╛, рддреБрдореНрд╣реА рдЕрдкреНрд░рддрд┐рдо рдХрд░рдд рдЖрд╣рд╛рдд ЁЯТк',
    features: [
      {  key:'journal',
        title: 'рдЬрд░реНрдирд▓', 
        desc: 'AI-рдЪрд╛рд▓рд┐рдд рджреИрдирдВрджрд┐рди рднрд╛рд╡рдирд┐рдХ рд╕рд╛рд░рд╛рдВрд╢, рдордирд╕реНрдерд┐рддреАрддреАрд▓ рдмрджрд▓ рдЯреНрд░реЕрдХ рдХрд░рдгреНрдпрд╛рд╕ рдЖрдгрд┐ рд▓рд╣рд╛рди рд╡рд┐рдЬрдп рд╕рд╛рдЬрд░реЗ рдХрд░рдгреНрдпрд╛рд╕ рдорджрдд рдХрд░рддреЗ.',
        link: '/journal'
      },
      {  key:'memoryvault',
        title: 'рдореЗрдорд░реА рд╡реЙрд▓реНрдЯ', 
        desc: 'рдореИрд▓рд╛рдЪреЗ рджрдЧрдб, рднрд╛рд╡рдирд╛ рдЖрдгрд┐ рдлреЛрдЯреЛ рдПрдХрд╛рдЪ рдард┐рдХрд╛рдгреА рдЬрддрди рдХрд░рд╛ рдЬреЗ рддреБрдореНрд╣реА рдХрдзреАрд╣реА рдкреБрдиреНрд╣рд╛ рдкрд╛рд╣реВ рд╢рдХрддрд╛.',
        link: '/memory-vault'
      },
      {  key:'ayurveda',
        title: 'рдЖрдпреБрд░реНрд╡реЗрдж', 
        desc: 'рддреБрдордЪреНрдпрд╛ рддреНрд░реИрдорд╛рд╕рд┐рдХ рдХрд┐рдВрд╡рд╛ рдкреНрд░рд╕реВрддреЛрддреНрддрд░ рдХрд╛рд│рд╛рд╕рд╛рдареА рднрд╛рд░рддреАрдп рдЬреНрдЮрд╛рди - рддреБрдордЪреНрдпрд╛рд╕рд╛рдареА рд╡реИрдпрдХреНрддрд┐рдХ рдХреЗрд▓реЗрд▓реЗ рдЕрдиреНрди, рдФрд╖рдзреА рдЖрдгрд┐ рд╡рд┐рдзреА.',
        link: '/ayurveda'
      },
      {  key:'yoga',
        title: 'рдорд╛рддреГ рдпреЛрдЧрд╛', 
        desc: 'рддреБрдордЪреА рд╢рдХреНрддреА, рд╢рд╛рдВрддрддрд╛ рдЖрдгрд┐ рдЬреЛрдбрдгреА рд╡рд╛рдврд╡рд┐рдгреНрдпрд╛рд╕рд╛рдареА рдЯрдкреНрдкреНрдпрд╛рдиреБрд╕рд╛рд░ рдпреЛрдЧрд╛ рд░реВрдЯреАрди.',
        link: '/yoga'
      }
    ],
    exploreNow: 'рдЖрддрд╛ рдПрдХреНрд╕рдкреНрд▓реЛрд░ рдХрд░рд╛',
    journal: 'рдЬрд░реНрдирд▓',
    memoryVault: 'рдореЗрдорд░реА рд╡реЙрд▓реНрдЯ',
    ayurveda: 'рдЖрдпреБрд░реНрд╡реЗрдж',
    yoga: 'рдпреЛрдЧрд╛',
    dayStreak: 'рджрд┐рд╡рд╕рд╛рдВрдЪрд╛ рд╕реНрдЯреНрд░реАрдХ',
    jananiSays: 'рдЬрдирдиреА рдореНрд╣рдгрддреЗ',
    reminderError: 'рдХреГрдкрдпрд╛ рддрд╛рд░реАрдЦ рдирд┐рд╡рдбрд╛.',
    reminderSuccess: 'рдЖрдард╡рдг рдЬрддрди рдХреЗрд▓реА!'
  },'gu-IN': {
    title: 'ркЬркиркирлА ркЖрк░рлЛркЧрлНркп',
    subtitle: 'ркжрк░рлЗркХ ркнрк╛рк░ркдрлАркп ркорк╛ркдрк╛ ркорк╛ркЯрлЗ ркПркХ ркирк░рко рк╕рк╛ркерлА',
    description1: 'ркЬркиркирлА ркЖрк░рлЛркЧрлНркп AIркирлЗ рккрлНрк░рк╛ркЪрлАрки ркнрк╛рк░ркдрлАркп рк╕ркВркнрк╛рк│ ркЬрлНркЮрк╛рки рк╕рк╛ркерлЗ ркЬрлЛркбрлА ркЧрлНрк░рк╛ркорлАркг ркорк╛ркдрк╛ркУркирлЗ ркЯрлЗркХрлЛ ркЖрккрлЗ ркЫрлЗ - ркЧрк░рлНркнрк╛рк╡рк╕рлНркерк╛ рккрк╣рлЗрк▓рк╛ркВ, ркЧрк░рлНркнрк╛рк╡рк╕рлНркерк╛ ркЕркирлЗ рккрлНрк░рк╕рлВркдрк┐ рккркЫрлАркирк╛ рк╕ркоркпркорк╛ркВ.',
    description2: 'рк╡рлЛркЗрк╕-рклрк░рлНрк╕рлНркЯ, ркнрк╛рк╖рк╛-ркЬрк╛ркЧрлГркд ркЕркирлЗ ркКркВркбрлА рк╡рлНркпркХрлНркдрк┐ркЧркд. ркЖркпрлБрк░рлНрк╡рлЗркжркерлА ркпрк╛ркжрлЛ рк╕рлБркзрлА, ркдрлЗ ркдркорк╛рк░рлА рк╕рк╛ркерлЗ ркЪрк╛рк▓рлЗ ркЫрлЗ.',
    checklistTitle: 'ЁЯМ╕ ркжрлИркирк┐ркХ ркЖрк░рлЛркЧрлНркп ркЪрлЗркХрк▓рк┐рк╕рлНркЯ',
    checklistItems: [
      '3 рк▓рк┐ркЯрк░ рккрк╛ркгрлА рккрлАркУ',
      'ркорк╛ркдрлГ ркпрлЛркЧрк╛ ркХрк░рлЛ',
      'рк╕рлНрк╡рк╕рлНрке ркЦрлЛрк░рк╛ркХ ркЦрк╛ркУ',
      'рккрлНрк░рк╕рлВркдрк┐ рккрлВрк░рлНрк╡ рк╡рк┐ркЯрк╛ркорк┐рки рк▓рлЛ',
      'рк╢рлНрк╡рк╛рк╕ рк▓рлЗрк╡рк╛ркирлА ркХрк╕рк░ркд ркХрк░рлЛ'
    ],
    reminderTitle: 'ЁЯЧУ ркбрлЙркХрлНркЯрк░ркирлА ркорлБрк▓рк╛ркХрк╛ркдркирлА ркпрк╛ркж ркЕрккрк╛рк╡ркирк╛рк░',
    reminderLabel: 'ркорлБрк▓рк╛ркХрк╛ркд ркдрк╛рк░рлАркЦ',
    repeatLabel: 'рккрлБркирк░рк╛рк╡рк░рлНркдрки',
    frequencyOptions: [
      { value: 'once', label: 'ркПркХ рк╡рк╛рк░' },
      { value: 'weekly', label: 'рк╕рк╛рккрлНркдрк╛рк╣рк┐ркХ' },
      { value: 'monthly', label: 'ркорк╛рк╕рк┐ркХ' }
    ],
    saveReminder: 'рк░рк┐ркорк╛ркЗркирлНркбрк░ рк╕рлЗрк╡ ркХрк░рлЛ',
    streakTitle: 'ЁЯФе ркдркорлЗ рк╕рлНркЯрлНрк░рлАркХ рккрк░ ркЫрлЛ!',
    streakText: 'рк╕ркдркдркдрк╛ркирлЛ {streak}ркорлЛ ркжрк┐рк╡рк╕',
    streakSubtext: 'ркЪрк╛рк▓рлБ рк░рк╛ркЦрлЛ, ркдркорлЗ ркЕркжркнрлБркд ркХрк░рлА рк░рк╣рлНркпрк╛ркВ ркЫрлЛ ЁЯТк',
    features: [
      { key:'journal',
        title: 'ркЬрк░рлНркирк▓', 
        desc: 'AI-рк╕ркВркЪрк╛рк▓рк┐ркд ркжрлИркирк┐ркХ ркнрк╛рк╡ркирк╛ркдрлНркоркХ рк╕рк╛рк░рк╛ркВрк╢, ркорлВркб рк╢рк┐рклрлНркЯркирлЗ ркЯрлНрк░рлЕркХ ркХрк░рк╡рк╛ркорк╛ркВ ркЕркирлЗ ркирк╛ркирлА ркЬрлАркдрлЛ ркЙркЬрк╡рк╡рк╛ркорк╛ркВ ркоркжркж ркХрк░рлЗ ркЫрлЗ.',
        link: '/journal'
      },
      { key:'memoryvault',
        title: 'ркорлЗркорк░рлА рк╡рлЙрк▓рлНркЯ', 
        desc: 'ркорк╛ркЗрк▓рк╕рлНркЯрлЛрки, ркнрк╛рк╡ркирк╛ркУ ркЕркирлЗ рклрлЛркЯрк╛ ркПркХ ркЬркЧрлНркпрк╛ркП рк╕ркВркЧрлНрк░рк╣рлЛ ркЬрлЗркирлЗ ркдркорлЗ ркХрлЛркИрккркг рк╕ркоркпрлЗ рклрк░рлА ркЬрлЛркИ рк╢ркХрлЛ ркЫрлЛ.',
        link: '/memory-vault'
      },
      { key:'ayurveda',
        title: 'ркЖркпрлБрк░рлНрк╡рлЗркж', 
        desc: 'ркдркорк╛рк░рк╛ ркдрлНрк░рк┐ркорк╛рк╕рк┐ркХ ркЕркерк╡рк╛ рккрлНрк░рк╕рлВркдрк┐ рккркЫрлАркирк╛ рк╕ркоркп ркорк╛ркЯрлЗ ркнрк╛рк░ркдрлАркп ркЬрлНркЮрк╛рки - ркдркорк╛рк░рк╛ ркорк╛ркЯрлЗ рк╡рлНркпркХрлНркдрк┐ркЧркд ркЦрлЛрк░рк╛ркХ, ркЬркбрлАркмрлБркЯрлНркЯрлАркУ ркЕркирлЗ рк░рк┐рк╡рк╛ркЬрлЛ.',
        link: '/ayurveda'
      },
      { key:'yoga',
        title: 'ркорк╛ркдрлГ ркпрлЛркЧрк╛', 
        desc: 'ркдркорк╛рк░рлА рк╢ркХрлНркдрк┐, рк╢рк╛ркВркдрк┐ ркЕркирлЗ ркЬрлЛркбрк╛ркгркирлЗ рккрлЛрк╖рк╡рк╛ ркорк╛ркЯрлЗ ркдркмркХрлНркХрк╛рк╡рк╛рк░ ркпрлЛркЧрк╛ рк░рлБркЯрлАрки.',
        link: '/yoga'
      }
    ],
    exploreNow: 'рк╣рк╡рлЗ ркЕркирлНрк╡рлЗрк╖ркг ркХрк░рлЛ',
    journal: 'ркЬрк░рлНркирк▓',
    memoryVault: 'ркорлЗркорк░рлА рк╡рлЙрк▓рлНркЯ',
    ayurveda: 'ркЖркпрлБрк░рлНрк╡рлЗркж',
    yoga: 'ркпрлЛркЧрк╛',
    dayStreak: 'ркжрк┐рк╡рк╕рлЛркирлА рк╕рлНркЯрлНрк░рлАркХ',
    jananiSays: 'ркЬркиркирлА ркХрк╣рлЗ ркЫрлЗ',
    reminderError: 'ркХрлГрккрк╛ ркХрк░рлАркирлЗ ркдрк╛рк░рлАркЦ рккрк╕ркВркж ркХрк░рлЛ.',
    reminderSuccess: 'рк░рк┐ркорк╛ркЗркирлНркбрк░ рк╕рлЗрк╡ ркеркпрлБркВ!'
  },'bn-IN': {
    title: 'ржЬржиржирзА ржЖрж░рзЛржЧрзНржп',
    subtitle: 'ржкрзНрж░рждрж┐ржЯрж┐ ржнрж╛рж░рждрзАржпрж╝ ржорж╛ржпрж╝рзЗрж░ ржЬржирзНржп ржПржХржЯрж┐ ржХрзЛржорж▓ рж╕ржЩрзНржЧрзА',
    description1: 'ржЬржиржирзА ржЖрж░рзЛржЧрзНржп AI-ржХрзЗ ржкрзНрж░рж╛ржЪрзАржи ржнрж╛рж░рждрзАржпрж╝ ржкрж░рж┐ржЪрж░рзНржпрж╛рж░ ржЬрзНржЮрж╛ржирзЗрж░ рж╕рж╛ржерзЗ ржорж┐рж▓рж┐ржпрж╝рзЗ ржЧрзНрж░рж╛ржорзАржг ржорж╛ржпрж╝рзЗржжрзЗрж░ рж╕рж╣рж╛ржпрж╝рждрж╛ ржХрж░рзЗ - ржЧрж░рзНржнржзрж╛рж░ржгрзЗрж░ ржЖржЧрзЗ, ржЧрж░рзНржнрж╛ржмрж╕рзНржерж╛ ржПржмржВ ржкрзНрж░рж╕ржмрзЛрждрзНрждрж░ рж╕ржоржпрж╝рзЗред',
    description2: 'ржнржпрж╝рзЗрж╕-ржкрзНрж░ржержо, ржнрж╛рж╖рж╛-рж╕ржЪрзЗрждржи ржПржмржВ ржЧржнрзАрж░ржнрж╛ржмрзЗ ржмрзНржпржХрзНрждрж┐ржЧрждред ржЖржпрж╝рзБрж░рзНржмрзЗржж ржерзЗржХрзЗ рж╕рзНржорзГрждрж┐ ржкрж░рзНржпржирзНржд, ржПржЯрж┐ ржЖржкржирж╛рж░ рж╕рж╛ржерзЗ рж╣рж╛ржБржЯрзЗред',
    checklistTitle: 'ЁЯМ╕ ржжрзИржирж┐ржХ рж╕рзНржмрж╛рж╕рзНржерзНржп ржЪрзЗржХрж▓рж┐рж╕рзНржЯ',
    checklistItems: [
      'рзй рж▓рж┐ржЯрж╛рж░ ржЬрж▓ ржкрж╛ржи ржХрж░рзБржи',
      'ржорж╛рждрзГ ржпрзЛржЧрж╛ ржХрж░рзБржи',
      'рж╕рзНржмрж╛рж╕рзНржерзНржпржХрж░ ржЦрж╛ржмрж╛рж░ ржЦрж╛ржи',
      'ржкрзНрж░рж╕ржмржкрзВрж░рзНржм ржнрж┐ржЯрж╛ржорж┐ржи ржирж┐ржи',
      'рж╢рзНржмрж╛рж╕-ржкрзНрж░рж╢рзНржмрж╛рж╕рзЗрж░ ржЕржирзБрж╢рзАрж▓ржи ржХрж░рзБржи'
    ],
    reminderTitle: 'ЁЯЧУ ржбрж╛ржХрзНрждрж╛рж░рзЗрж░ ржнрж┐ржЬрж┐ржЯ рж░рж┐ржорж╛ржЗржирзНржбрж╛рж░',
    reminderLabel: 'ржнрж┐ржЬрж┐ржЯрзЗрж░ рждрж╛рж░рж┐ржЦ',
    repeatLabel: 'ржкрзБржирж░рж╛ржмрзГрждрзНрждрж┐',
    frequencyOptions: [
      { value: 'once', label: 'ржПржХржмрж╛рж░' },
      { value: 'weekly', label: 'рж╕рж╛ржкрзНрждрж╛рж╣рж┐ржХ' },
      { value: 'monthly', label: 'ржорж╛рж╕рж┐ржХ' }
    ],
    saveReminder: 'рж░рж┐ржорж╛ржЗржирзНржбрж╛рж░ рж╕рзЗржн ржХрж░рзБржи',
    streakTitle: 'ЁЯФе ржЖржкржирж┐ ржПржХржЯрж┐ рж╕рзНржЯрзНрж░рж┐ржХрзЗ ржЖржЫрзЗржи!',
    streakText: '{streak} ржжрж┐ржи ржзрж╛рж░рж╛ржмрж╛рж╣рж┐ржХрждрж╛',
    streakSubtext: 'ржЪрж╛рж▓рж┐ржпрж╝рзЗ ржпрж╛ржи, ржЖржкржирж┐ ржжрзБрж░рзНржжрж╛ржирзНржд ржХрж░ржЫрзЗржи ЁЯТк',
    features: [
      { key:'journal',
        title: 'ржЬрж╛рж░рзНржирж╛рж▓', 
        desc: 'AI-ржЪрж╛рж▓рж┐ржд ржжрзИржирж┐ржХ ржорж╛ржирж╕рж┐ржХ рж╕рж╛рж░рж╛ржВрж╢, ржорзЗржЬрж╛ржЬ ржкрж░рж┐ржмрж░рзНрждржи ржЯрзНрж░рзНржпрж╛ржХ ржХрж░рждрзЗ ржПржмржВ ржЫрзЛржЯ ржЬржпрж╝ ржЙржжржпрж╛ржкржи ржХрж░рждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗред',
        link: '/journal'
      },
      { key:'memoryvault',
        title: 'ржорзЗржорзЛрж░рж┐ ржнрж▓рзНржЯ', 
        desc: 'ржорж╛ржЗрж▓ржлрж▓ржХ, ржЖржмрзЗржЧ ржПржмржВ ржлржЯрзЛржЧрзБрж▓рж┐ ржПржХ ржЬрж╛ржпрж╝ржЧрж╛ржпрж╝ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рзБржи ржпрж╛ ржЖржкржирж┐ ржпрзЗржХрзЛржирзЛ рж╕ржоржпрж╝ ржЖржмрж╛рж░ ржжрзЗржЦрждрзЗ ржкрж╛рж░рзЗржиред',
        link: '/memory-vault'
      },
      { key:'ayurveda',
        title: 'ржЖржпрж╝рзБрж░рзНржмрзЗржж', 
        desc: 'ржЖржкржирж╛рж░ рждрзНрж░рзИржорж╛рж╕рж┐ржХ ржмрж╛ ржкрзНрж░рж╕ржмрзЛрждрзНрждрж░ рж╕ржоржпрж╝рзЗрж░ ржЬржирзНржп ржнрж╛рж░рждрзАржпрж╝ ржЬрзНржЮрж╛ржи - ржЖржкржирж╛рж░ ржЬржирзНржп ржмрзНржпржХрзНрждрж┐ржЧрждржХрзГржд ржЦрж╛ржмрж╛рж░, ржнрзЗрж╖ржЬ ржУ рж░рзАрждрж┐ред',
        link: '/ayurveda'
      },
      { key:'yoga',
        title: 'ржорж╛рждрзГ ржпрзЛржЧрж╛', 
        desc: 'ржЖржкржирж╛рж░ рж╢ржХрзНрждрж┐, рж╢рж╛ржирзНрждрж┐ ржПржмржВ рж╕ржВржпрзЛржЧ рж▓рж╛рж▓ржи ржХрж░рж╛рж░ ржЬржирзНржп ржкрж░рзНржпрж╛ржпрж╝ржХрзНрж░ржорж┐ржХ ржпрзЛржЧрж╛ рж░рзБржЯрж┐ржиред',
        link: '/yoga'
      }
    ],
    exploreNow: 'ржПржЦржиржЗ ржПржХрзНрж╕ржкрзНрж▓рзЛрж░ ржХрж░рзБржи',
    journal: 'ржЬрж╛рж░рзНржирж╛рж▓',
    memoryVault: 'ржорзЗржорзЛрж░рж┐ ржнрж▓рзНржЯ',
    ayurveda: 'ржЖржпрж╝рзБрж░рзНржмрзЗржж',
    yoga: 'ржпрзЛржЧрж╛',
    dayStreak: 'ржжрж┐ржирзЗрж░ рж╕рзНржЯрзНрж░рж┐ржХ',
    jananiSays: 'ржЬржиржирзА ржмрж▓рзЗржи',
    reminderError: 'ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржПржХржЯрж┐ рждрж╛рж░рж┐ржЦ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржиред',
    reminderSuccess: 'рж░рж┐ржорж╛ржЗржирзНржбрж╛рж░ рж╕рзЗржн ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ!'
  },'ml-IN': {
    title: 'р┤Ьр┤ир┤ир┤┐ р┤Жр┤░р╡Лр┤Чр╡Нр┤п',
    subtitle: 'р┤Ур┤░р╡Л р┤нр┤╛р┤░р┤др╡Ар┤п р┤Ер┤ор╡Нр┤ор┤пр╡Нр┤Хр╡Нр┤Хр╡Бр┤В р┤Тр┤░р╡Б р┤╕р╡Нр┤ир╡Зр┤╣р┤кр╡Вр╡╝р┤гр╡Нр┤г р┤Ер┤ир╡Бр┤пр┤╛р┤пр┤┐',
    description1: 'р┤Ьр┤ир┤ир┤┐ р┤Жр┤░р╡Лр┤Чр╡Нр┤п р┤кр╡Бр┤░р┤╛р┤др┤и р┤Зр┤ир╡Нр┤др╡Нр┤пр╡╗ р┤кр┤░р┤┐р┤Ър┤░р┤гр┤Ьр╡Нр┤Юр┤╛р┤ир┤╡р╡Бр┤ор┤╛р┤пр┤┐ AIр┤пр╡Ж р┤Ър╡Зр╡╝р┤др╡Нр┤др╡Н, р┤Чр╡╝р┤нр┤зр┤╛р┤░р┤гр┤др╡Нр┤др┤┐р┤ир╡Н р┤ор╡Бр┤ор╡Нр┤кр╡Н р┤ор╡Бр┤др╡╜ р┤Чр╡╝р┤нр┤Хр┤╛р┤▓р┤др╡Нр┤др┤┐р┤▓р╡Бр┤В р┤кр╡Нр┤░р┤╕р┤╡р┤╛р┤ир┤ир╡Нр┤др┤░р┤Хр┤╛р┤▓р┤др╡Нр┤др╡Бр┤В р┤Чр╡Нр┤░р┤╛р┤ор╡Ар┤г р┤Ер┤ор╡Нр┤ор┤ор┤╛р┤░р╡Ж р┤╕р┤╣р┤╛р┤пр┤┐р┤Хр╡Нр┤Хр╡Бр┤ир╡Нр┤ир╡Б.',
    description2: 'р┤╡р╡Лр┤пр╡Нр┤╕р╡Н-р┤лр┤╕р╡Нр┤▒р╡Нр┤▒р╡Н, р┤нр┤╛р┤╖р┤╛р┤╕р╡Чр┤╣р╡Гр┤жр┤кр┤░р┤╡р╡Бр┤В р┤╡р╡Нр┤пр┤Хр╡Нр┤др┤┐р┤Чр┤др┤ор┤╛р┤п р┤Ер┤ир╡Бр┤нр┤╡р┤╡р╡Бр┤ор┤╛р┤гр╡Н. р┤Жр┤пр╡Бр┤░р╡НтАНр┤╡р╡Зр┤жр┤др╡Нр┤др┤┐р┤▓р╡НтАН р┤ир┤┐р┤ир╡Нр┤ир╡Бр┤В р┤Ур┤░р╡НтАНр┤ор┤Хр┤│р┤┐р┤▓р╡Зр┤Хр╡Нр┤Хр╡Бр┤│р╡Нр┤│ р┤пр┤╛р┤др╡Нр┤░, р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Лр┤Яр╡Кр┤кр╡Нр┤кр┤В р┤ир┤Яр┤Хр╡Нр┤Хр╡Бр┤ир╡Нр┤ир╡Б.',
    checklistTitle: 'ЁЯМ╕ р┤жр╡Ир┤ир┤Вр┤жр┤┐р┤и р┤Жр┤░р╡Лр┤Чр╡Нр┤п р┤Ър╡Жр┤Хр╡НтАМр┤▓р┤┐р┤╕р╡Нр┤▒р╡Нр┤▒р╡Н',
    checklistItems: [
      '3 р┤▓р┤┐р┤▒р╡Нр┤▒р╡╝ р┤╡р╡Жр┤│р╡Нр┤│р┤В р┤Хр╡Бр┤Яр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х',
      'р┤ор┤╛р┤др╡Гр┤др╡Нр┤╡ р┤пр╡Лр┤Ч р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х',
      'р┤Жр┤░р╡Лр┤Чр╡Нр┤пр┤Хр┤░р┤ор┤╛р┤п р┤нр┤Хр╡Нр┤╖р┤гр┤В р┤Хр┤┤р┤┐р┤Хр╡Нр┤Хр╡Бр┤Х',
      'р┤Чр╡╝р┤нр┤Хр┤╛р┤▓ р┤╡р┤┐р┤▒р╡Нр┤▒р┤╛р┤ор┤┐р┤ир╡Бр┤Хр╡╛ р┤Хр┤┤р┤┐р┤Хр╡Нр┤Хр╡Бр┤Х',
      'р┤╢р╡Нр┤╡р┤╛р┤╕р╡Лр┤кр┤╢р╡Нр┤╡р┤╛р┤╕ р┤Ер┤нр╡Нр┤пр┤╛р┤╕р┤Щр╡Нр┤Щр╡╛ р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х'
    ],
    reminderTitle: 'ЁЯЧУ р┤бр╡Лр┤Хр╡Нр┤Яр╡╝ р┤╡р┤┐р┤╕р┤┐р┤▒р╡Нр┤▒р╡Н р┤Ур╡╝р┤ор╡Нр┤ор┤┐р┤кр╡Нр┤кр┤┐р┤Хр╡Нр┤Хр╡╜',
    reminderLabel: 'р┤╡р┤┐р┤╖р┤┐р┤▒р╡Нр┤▒р┤┐р┤ир╡Нр┤▒р╡Ж р┤др╡Ар┤пр┤др┤┐',
    repeatLabel: 'р┤кр╡Бр┤ир┤░р┤╛р┤╡р╡Гр┤др╡Нр┤др┤┐',
    frequencyOptions: [
      { value: 'once', label: 'р┤Тр┤░р┤┐р┤Хр╡Нр┤Хр┤▓р╡НтАН' },
      { value: 'weekly', label: 'р┤Жр┤┤р╡Нр┤Ър┤пр┤┐р┤▓р╡НтАН р┤Тр┤ир╡Нр┤ир╡Н' },
      { value: 'monthly', label: 'р┤ор┤╛р┤╕р┤др╡Нр┤др┤┐р╡╜ р┤Тр┤ир╡Нр┤ир╡Н' }
    ],
    saveReminder: 'р┤Ур╡╝р┤ор╡Нр┤ор┤┐р┤кр╡Нр┤кр┤┐р┤Хр╡Нр┤Хр╡╜ р┤╕р╡Зр┤╡р╡Н р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х',
    streakTitle: 'ЁЯФе р┤ир┤┐р┤Щр╡Нр┤Щр╡╛ р┤Тр┤░р╡Б р┤╕р╡Нр┤Яр╡Нр┤░р╡Ар┤Хр╡Нр┤Хр┤┐р┤▓р┤╛р┤гр╡Н!',
    streakText: '{streak} р┤жр┤┐р┤╡р┤╕р┤др╡Нр┤др╡Ж р┤др╡Бр┤Яр╡╝р┤Ър╡Нр┤Ъ',
    streakSubtext: 'р┤др╡Бр┤Яр┤░р╡Бр┤Х, р┤ир┤┐р┤Щр╡Нр┤Щр╡╛ р┤Ер┤др┤┐р┤╡р┤┐р┤╢р╡Зр┤╖р┤ор┤╛р┤гр╡Н ЁЯТк',
    features: [
      { key:'journal',
        title: 'р┤Ьр╡Зр╡╝р┤гр╡╜', 
        desc: 'AI-р┤ир┤┐р╡╝р┤╡р┤╛р┤╣р┤┐р┤др┤ор┤╛р┤п р┤жр╡Ир┤ир┤Вр┤жр┤┐р┤и р┤ор┤╛р┤ир┤╕р┤┐р┤Х р┤╕р┤Вр┤Чр╡Нр┤░р┤╣р┤В, р┤ор┤ир╡Лр┤нр┤╛р┤╡ р┤╡р╡Нр┤пр┤др╡Нр┤пр┤╛р┤╕р┤Щр╡Нр┤Щр╡╛ р┤Яр╡Нр┤░р┤╛р┤Хр╡Нр┤Хр╡Н р┤Ър╡Жр┤пр╡Нр┤пр┤╛р┤ир╡Бр┤В р┤Ър╡Жр┤▒р╡Бр┤Ьр┤пр┤Щр╡Нр┤Щр╡╛ р┤Жр┤Шр╡Лр┤╖р┤┐р┤Хр╡Нр┤Хр┤╛р┤ир╡Бр┤В р┤╕р┤╣р┤╛р┤пр┤┐р┤Хр╡Нр┤Хр╡Бр┤ир╡Нр┤ир╡Б.',
        link: '/journal'
      },
      { key:'memoryvault',
        title: 'р┤ор╡Жр┤ор╡Нр┤ор┤▒р┤┐ р┤╡р┤╛р╡╛р┤Яр╡Нр┤Яр╡Н', 
        desc: 'р┤ор╡Ир╡╜р┤╕р╡Нр┤▒р╡Нр┤▒р╡Лр┤гр╡Бр┤Хр╡╛, р┤╡р┤┐р┤Хр┤╛р┤░р┤Щр╡Нр┤Щр╡╛, р┤лр╡Лр┤Яр╡Нр┤Яр╡Лр┤Хр╡╛ р┤Ор┤▓р╡Нр┤▓р┤╛р┤В р┤Тр┤░р╡З р┤Зр┤Яр┤др╡Нр┤др╡Н р┤╕р╡Вр┤Хр╡Нр┤╖р┤┐р┤Хр╡Нр┤Хр┤╛р┤В, р┤ир┤┐р┤Щр╡Нр┤Щр╡╛р┤Хр╡Нр┤Хр╡Н р┤кр┤┐р┤ир╡Нр┤ир╡Ар┤Яр╡Н р┤Ор┤кр╡Нр┤кр╡Лр┤┤р╡Бр┤В р┤Хр┤╛р┤гр┤╛р╡╗ р┤Хр┤┤р┤┐р┤пр╡Бр┤ир╡Нр┤ир╡Б.',
        link: '/memory-vault'
      },
      { key:'ayurveda',
        title: 'р┤Жр┤пр╡Бр┤░р╡НтАНр┤╡р╡Зр┤жр┤В', 
        desc: 'р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤др╡Нр┤░р╡Ир┤ор┤╛р┤╕р┤┐р┤Х р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤кр╡Нр┤░р┤╕р┤╡р┤╛р┤ир┤ир╡Нр┤др┤░ р┤Шр┤Яр╡Нр┤Яр┤Щр╡Нр┤Щр╡╛р┤Хр╡Нр┤Хр┤╛р┤пр┤┐ р┤Зр┤ир╡Нр┤др╡Нр┤пр╡╗ р┤Ьр╡Нр┤Юр┤╛р┤ир┤В - р┤нр┤Хр╡Нр┤╖р┤гр┤В, р┤Фр┤╖р┤зр┤Щр╡Нр┤Щр╡╛, р┤░р╡Ар┤др┤┐ р┤Ор┤ир╡Нр┤ир┤┐р┤╡ р┤╡р╡Нр┤пр┤Хр╡Нр┤др┤┐р┤Чр┤др┤ор┤╛р┤пр┤┐ р┤Тр┤░р╡Бр┤Хр╡Нр┤Хр╡Бр┤ир╡Нр┤ир╡Б.',
        link: '/ayurveda'
      },
      { key:'yoga',
        title: 'р┤ор┤╛р┤др╡Гр┤др╡Нр┤╡ р┤пр╡Лр┤Ч', 
        desc: 'р┤╢р┤Хр╡Нр┤др┤┐р┤пр╡Бр┤В р┤╕р┤ор┤╛р┤зр┤╛р┤ир┤╡р╡Бр┤В р┤мр┤ир╡Нр┤зр┤╡р╡Бр┤В р┤╡р┤│р╡╝р┤др╡Нр┤др╡Бр┤ир╡Нр┤и р┤Шр┤Яр╡Нр┤Яр┤╛р┤ир╡Бр┤╕р╡Гр┤д р┤пр╡Лр┤Чр┤╛ р┤▒р╡Вр┤Яр╡Нр┤Яр╡Ар╡╗.',
        link: '/yoga'
      }
    ],
    exploreNow: 'р┤Зр┤кр╡Нр┤кр╡Лр╡╛ р┤др┤ир╡Нр┤ир╡Ж р┤Ор┤Хр╡Нр┤╕р╡Нр┤кр╡Нр┤▓р╡Лр╡╝ р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х',
    journal: 'р┤Ьр╡Зр╡╝р┤гр╡╜',
    memoryVault: 'р┤ор╡Жр┤ор╡Нр┤ор┤▒р┤┐ р┤╡р┤╛р╡╛р┤Яр╡Нр┤Яр╡Н',
    ayurveda: 'р┤Жр┤пр╡Бр┤░р╡НтАНр┤╡р╡Зр┤жр┤В',
    yoga: 'р┤пр╡Лр┤Ч',
    dayStreak: 'р┤жр┤┐р┤и р┤╕р╡Нр┤Яр╡Нр┤░р╡Ар┤Хр╡Нр┤Хр╡Н',
    jananiSays: 'р┤Ьр┤ир┤ир┤┐ р┤кр┤▒р┤пр╡Бр┤ир╡Нр┤ир╡Б',
    reminderError: 'р┤жр┤пр┤╡р┤╛р┤пр┤┐ р┤Тр┤░р╡Б р┤др╡Ар┤пр┤др┤┐ р┤др┤┐р┤░р┤Юр╡Нр┤Юр╡Жр┤Яр╡Бр┤Хр╡Нр┤Хр╡Бр┤Х.',
    reminderSuccess: 'р┤Ур╡╝р┤ор╡Нр┤ор┤┐р┤кр╡Нр┤кр┤┐р┤Хр╡Нр┤Хр╡╜ р┤╕р╡Зр┤╡р╡Н р┤Ър╡Жр┤пр╡Нр┤др╡Б!'
  },'pa-IN': {
    title: 'риЬриириирйА риЖри░рйЛриЧри┐риЖ',
    subtitle: 'ри╣ри░ ринри╛ри░ридрйА риори╛риВ ри▓риИ риЗрй▒риХ риири░рио ри╕ри╛риерйА',
    description1: 'риЬриириирйА риЖри░рйЛриЧри┐риЖ риПриЖриИ риирйВрй░ рикрйНри░ри╛риЪрйАрии ринри╛ри░ридрйА рижрйЗриЦринри╛ри▓ рижрйЗ риЧри┐риЖрии риири╛ри▓ риЬрйЛрйЬрижрйА ри╣рйИ ридри╛риВ риЬрйЛ рикрйИриВрибрйВ риори╛ри╡ри╛риВ рижрйА риорижриж риХрйАридрйА риЬри╛ ри╕риХрйЗ - риЧри░рин ризри╛ри░риг ридрйЛриВ рикри╣ри┐ри▓ри╛риВ, риЧри░ринри╛ри╡ри╕риери╛ рижрйМри░ри╛рии риЕридрйЗ риЬригрио ридрйЛриВ римри╛риЕрижред',
    description2: 'риЖри╡ри╛риЬри╝-рикри╣ри┐ри▓ри╛риВ, ринри╛ри╕ри╝ри╛-ри╕риЪрйЗрид риЕридрйЗ рибрйВрй░риШрйА ридри░рйНри╣ри╛риВ риири┐рй▒риЬрйАред риЖрипрйБри░ри╡рйЗриж ридрйЛриВ ри▓рйИ риХрйЗ рипри╛рижри╛риВ ридрй▒риХ, риЗри╣ ридрйБри╣ри╛рибрйЗ риири╛ри▓ риЪрй▒ри▓рижрйА ри╣рйИред',
    checklistTitle: 'ЁЯМ╕ ри░рйЛриЬри╝ри╛риири╛ ри╕ри┐ри╣рид риЪрйИрй▒риХри▓ри┐ри╕риЯ',
    checklistItems: [
      '3 ри▓рйАриЯри░ рикри╛ригрйА рикрйАриУ',
      'риори╛ридри╛ рипрйЛриЧ риХри░рйЛ',
      'ри╕ри┐ри╣ридриорй░риж риЦри╛ригри╛ риЦри╛риУ',
      'риЧри░ринрикрйВри░ри╡ ри╡риЯри╛риори┐рии ри▓ри╡рйЛ',
      'ри╕ри╛ри╣ ри▓рйИриг рижрйЗ риЕринри┐риЖри╕ риХри░рйЛ'
    ],
    reminderTitle: 'ЁЯЧУ рибри╛риХриЯри░ рижрйМри░рйЗ рижрйА рипри╛риж рижри┐ри╡ри╛риИ',
    reminderLabel: 'риори┐ри▓риг рижрйА ридри╛ри░рйАриЦ',
    repeatLabel: 'рижрйБри╣ри░ри╛риЙригри╛',
    frequencyOptions: [
      { value: 'once', label: 'риЗрй▒риХ ри╡ри╛ри░рйА' },
      { value: 'weekly', label: 'ри╣рилридри╛ри╡ри╛ри░' },
      { value: 'monthly', label: 'риори╛ри╕ри┐риХ' }
    ],
    saveReminder: 'ри░рйАриори╛риИриВрибри░ ри╕рйЗри╡ риХри░рйЛ',
    streakTitle: 'ЁЯФе ридрйБри╕рйАриВ риЗрй▒риХ ри╕риЯрйНри░рйАриХ тАЩридрйЗ ри╣рйЛ!',
    streakText: '{streak} рижри┐риири╛риВ рижрйА ри▓риЧри╛ридри╛ри░ридри╛',
    streakSubtext: 'риЬри╛ри░рйА ри░рй▒риЦрйЛ, ридрйБри╕рйАриВ ри╕ри╝ри╛риирижри╛ри░ риХри░ ри░ри╣рйЗ ри╣рйЛ ЁЯТк',
    features: [
      { key:'journal',
        title: 'риЬри░риири▓', 
        desc: 'риПриЖриИ-риЪри▓ри┐рид ри░рйЛриЬри╝ри╛риири╛ риори╛риири╕ри┐риХ ри╕рй░риЦрйЗрик, риорйВриб римрижри▓ри╛риЕ риирйВрй░ риЯри░рйИриХ риХри░рии риЕридрйЗ риЫрйЛриЯрйАриЖриВ риЦрйБри╕ри╝рйАриЖриВ риориири╛риЙриг ри╡ри┐рй▒риЪ риорижриж риХри░рижри╛ ри╣рйИред',
        link: '/journal'
      },
      { key:'memoryvault',
        title: 'риорйИриорйЛри░рйА ри╡ри╛ри▓риЯ', 
        desc: 'риориирйЛри░рие, ринри╛ри╡риири╛ ридрйЗ рилрйЛриЯрйЛриЖриВ риирйВрй░ риЗрй▒риХ риери╛риВ ри╕рй░ринри╛ри▓рйЛ риЬрйЛ ридрйБри╕рйАриВ риХри┐ри╕рйЗ ри╡рйА ри╕риорйЗриВ ри╡ри╛рикри╕ рижрйЗриЦ ри╕риХрижрйЗ ри╣рйЛред',
        link: '/memory-vault'
      },
      { key:'ayurveda',
        title: 'риЖрипрйБри░ри╡рйЗриж', 
        desc: 'ридрйБри╣ри╛рибрйЗ ридри┐риори╛ри╣рйА риЬри╛риВ риЬригрио ридрйЛриВ римри╛риЕриж рижрйЗ рикрйЬри╛риЕ ри▓риИ ринри╛ри░ридрйА риЧри┐риЖрии - ри╡ри┐риЕриХридрйАриЧрид ринрйЛриЬрии, риЬрйЬрйАриЖриВ риЕридрйЗ ри░ри┐ри╡ри╛риЬред',
        link: '/ayurveda'
      },
      { key:'yoga',
        title: 'риори╛ридри╛ рипрйЛриЧ', 
        desc: 'ридри╛риХрид, ри╕ри╝ри╛риВридрйА риЕридрйЗ риЬрйБрйЬри╛риЕ риирйВрй░ рикри╛ри▓риг ри▓риИ рикрйЬри╛риЕ риЕриирйБри╕ри╛ри░ рипрйЛриЧ ри░рйВриЯрйАрииред',
        link: '/yoga'
      }
    ],
    exploreNow: 'ри╣рйБригрйЗ риРриХри╕рикри▓рйЛри░ риХри░рйЛ',
    journal: 'риЬри░риири▓',
    memoryVault: 'риорйИриорйЛри░рйА ри╡ри╛ри▓риЯ',
    ayurveda: 'риЖрипрйБри░ри╡рйЗриж',
    yoga: 'рипрйЛриЧ',
    dayStreak: 'рижри┐рии ри╕риЯрйНри░рйАриХ',
    jananiSays: 'риЬриириирйА риХри╣ри┐рй░рижрйА ри╣рйИ',
    reminderError: 'риХри┐ри░рикри╛ риХри░риХрйЗ риЗрй▒риХ ридри╛ри░рйАриЦ риЪрйБригрйЛред',
    reminderSuccess: 'ри░рйАриори╛риИриВрибри░ ри╕рйЗри╡ риХри░ рижри┐рй▒ридри╛ риЧри┐риЖ ри╣рйИ!'
  }


    // Continue for other languages
  };
  function Dashboard() {
    const [aiReply, setAiReply] = useState('');
    const [stage, setStage] = useState('');
    const [checks, setChecks] = useState([]);
    const [streak, setStreak] = useState(0);
    const [reminderDate, setReminderDate] = useState('');
    const [reminderFreq, setReminderFreq] = useState('once');
    const [msg, setMsg] = useState(null);
    const [showConfetti, setShowConfetti] = useState(false);
    const [language, setLanguage] = useState('en-IN');
    const [translations, setTranslations] = useState(TRANSLATIONS['en-IN']);

    const auth = getAuth();
    const navigate = useNavigate();
    const { width, height } = useWindowSize();

    useEffect(() => {
      const savedLang = localStorage.getItem('lang') || 'en-IN';
      setLanguage(savedLang);
      setTranslations(TRANSLATIONS[savedLang] || TRANSLATIONS['en-IN']);
    }, []);

    const CHECK_ITEMS = translations.checklistItems;

    const todayKey = () => `checklist_${new Date().toISOString().split('T')[0]}`;

    useEffect(() => {
      const key = todayKey();
      const saved = JSON.parse(localStorage.getItem(key) || '[]');
      if (Array.isArray(saved) && saved.length === CHECK_ITEMS.length) {
        setChecks(saved);
      } else {
        const fresh = Array(CHECK_ITEMS.length).fill(false);
        setChecks(fresh);
        localStorage.setItem(key, JSON.stringify(fresh));
      }
    }, [CHECK_ITEMS.length]);

    useEffect(() => {
      const unsub = auth.onAuthStateChanged(async (user) => {
        if (!user) return;
        const snap = await getDoc(doc(db, 'users', user.uid));
        if (snap.exists()) {
          const d = snap.data();
          setStage(d.stage || 'prepregnancy');
          setStreak(d.streak || 0);
        }
      });
      return () => unsub();
    }, [auth]);

    const triggerCelebration = () => {
      setShowConfetti(true);
      setTimeout(() => setShowConfetti(false), 5000);
    };

    const updateStreakInFirestore = async () => {
      const user = auth.currentUser;
      if (!user) return;
      const ref = doc(db, 'users', user.uid);
      const snap = await getDoc(ref);
      if (!snap.exists()) return;

      const today = dayjs().format('YYYY-MM-DD');
      const yesterday = dayjs().subtract(1, 'day').format('YYYY-MM-DD');
      const data = snap.data();

      if (data.lastCheckinDate === today) return;
      const newStreak = data.lastCheckinDate === yesterday ? (data.streak || 0) + 1 : 1;

      await updateDoc(ref, { streak: newStreak, lastCheckinDate: today });
      setStreak(newStreak);
    };

    const saveReminder = async () => {
      const user = auth.currentUser;
      if (!user) return;
      if (!reminderDate) {
        setMsg({ type: 'error', text: translations.reminderError || 'Please pick a date.' });
        return;
      }
      try {
        await setDoc(
          doc(db, 'users', user.uid, 'reminder', 'settings'),
          {
            email: user.email,
            date: reminderDate,
            frequency: reminderFreq,
          },
          { merge: true }
        );
        setMsg({ type: 'success', text: translations.reminderSuccess || 'Reminder saved!' });
      } catch (err) {
        console.error(err);
        setMsg({ type: 'error', text: translations.reminderError || 'Could not save reminder.' });
      }
    };

    const getAyurvedaPath = () =>
      stage === 'prepregnancy'
        ? '/preconception-ayurveda'
        : stage === 'pregnancy'
        ? '/pregnancy-ayurveda'
        : '/post-ayurveda';

    const getYogaPath = () =>
      stage === 'prepregnancy'
        ? '/preconception-yoga'
        : stage === 'pregnancy'
        ? '/pregnancy-yoga'
        : '/post-yoga';

    return (
      <div className="min-h-screen bg-rose-50 relative overflow-x-hidden">
        {/* Navbar */}
        <nav className="bg-white shadow-md sticky top-0 z-50 px-6 py-4 flex justify-between items-center border-b border-rose-200">
          <h1 className="text-2xl font-extrabold text-rose-600 tracking-wide">{translations.title}</h1>
          <div className="flex gap-4 items-center text-sm font-semibold text-gray-700">
            {streak > 0 && <span className="bg-yellow-100 text-yellow-800 px-3 py-1 rounded-full text-xs">ЁЯФе {streak}-{translations.dayStreak || 'day Streak'}</span>}
            <button onClick={() => navigate('/journal')} className="hover:text-rose-600">{translations.journal || 'Journal'}</button>
            <button onClick={() => navigate('/memory-vault')} className="hover:text-rose-600">{translations.memoryVault || 'Memory Vault'}</button>
            <button onClick={() => navigate(getAyurvedaPath())} className="hover:text-rose-600">{translations.ayurveda || 'Ayurveda'}</button>
            <button onClick={() => navigate(getYogaPath())} className="hover:text-rose-600">{translations.yoga || 'Yoga'}</button>
            <button onClick={() => navigate('/profile')} className="w-8 h-8 bg-rose-100 text-rose-700 rounded-full flex items-center justify-center hover:ring hover:ring-rose-300">ЁЯСд</button>
          </div>
        </nav>

        {/* Hero Section */}
        <motion.section
          initial={{ opacity: 0, scale: 0.95 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{ duration: 0.7 }}
          className="max-w-6xl mx-auto mt-6 bg-white border border-rose-100 rounded-3xl shadow-2xl p-10 flex flex-col md:flex-row items-center gap-8 hover:shadow-pink-200"
        >
          <motion.div initial={{ x: -30, opacity: 0 }} animate={{ x: 0, opacity: 1 }} transition={{ delay: 0.3 }} className="flex-1">
            <h2 className="text-4xl font-bold text-rose-700 mb-4 leading-snug">{translations.subtitle}</h2>
            <p className="text-gray-700 mb-2 leading-relaxed">{translations.description1}</p>
            <p className="text-gray-700">{translations.description2}</p>
          </motion.div>
          <motion.img src={HeroImage} alt="Hero" className="w-full md:w-80 rounded-xl shadow-md object-cover" initial={{ x: 30, opacity: 0 }} animate={{ x: 0, opacity: 1 }} transition={{ delay: 0.4 }} />
        </motion.section>

        {/* Input Section + AI Reply */}
        <div className="mt-8 px-4">
          <div className="flex justify-center">
            <InputSection onReply={setAiReply} />
          </div>
          {aiReply && (
            <div className="mt-4 mx-auto w-11/12 md:w-2/3 bg-white p-4 rounded-lg shadow text-gray-800">
              <strong>{translations.jananiSays || 'Janani Says'}:</strong>
              <div>{aiReply}</div>
            </div>
          )}

          {/* Checklist + Reminder */}
          <div className="mt-8 grid grid-cols-1 md:grid-cols-2 gap-6 max-w-4xl mx-auto">
            {/* Checklist */}
            <div className="bg-white p-6 rounded-lg shadow-md">
              <h2 className="text-lg font-semibold text-pink-600 mb-3">{translations.checklistTitle}</h2>
              <ul className="space-y-2">
                {CHECK_ITEMS.map((item, idx) => (
                  <li key={idx} className="flex items-center gap-3">
                    <input
                      type="checkbox"
                      checked={checks[idx] || false}
                      onChange={async () => {
                        const updated = [...checks];
                        updated[idx] = !updated[idx];
                        setChecks(updated);
                        localStorage.setItem(todayKey(), JSON.stringify(updated));
                        if (updated.every(Boolean)) {
                          triggerCelebration();
                          await updateStreakInFirestore();
                        }
                      }}
                      className="w-5 h-5 text-pink-500 focus:ring-pink-400"
                    />
                    <span className={checks[idx] ? 'line-through text-gray-400' : 'text-gray-700'}>{item}</span>
                  </li>
                ))}
              </ul>
            </div>

            {/* Reminder */}
            <div className="bg-white p-6 rounded-lg shadow-md">
              <h3 className="text-lg font-semibold text-pink-600 mb-3">{translations.reminderTitle}</h3>
              <div className="space-y-4">
                <div>
                  <label className="block text-sm font-medium mb-1">{translations.reminderLabel}</label>
                  <input type="date" value={reminderDate} onChange={(e) => setReminderDate(e.target.value)} className="w-full border rounded p-2" />
                </div>
                <div>
                  <label className="block text-sm font-medium mb-1">{translations.repeatLabel}</label>
                  <select value={reminderFreq} onChange={(e) => setReminderFreq(e.target.value)} className="w-full border rounded p-2">
                    {translations.frequencyOptions.map(option => (
                      <option key={option.value} value={option.value}>{option.label}</option>
                    ))}
                  </select>
                </div>
                <button onClick={saveReminder} className="w-full bg-pink-500 hover:bg-pink-600 text-white py-2 rounded-lg font-medium">
                  {translations.saveReminder}
                </button>
                {msg && (
                  <p className={`text-sm ${msg.type === 'success' ? 'text-green-600' : 'text-red-500'}`}>
                    {msg.text}
                  </p>
                )}
              </div>
            </div>
          </div>

          {/* Streak Card */}
          {streak > 0 && (
            <div className="mt-6 max-w-xl mx-auto bg-white border-2 border-yellow-300 rounded-lg shadow-md p-6 text-center animate-pulse">
              <h2 className="text-xl font-bold text-yellow-600 mb-1">{translations.streakTitle}</h2>
              <p className="text-lg text-gray-700">{translations.streakText.replace('{streak}', streak)}</p>
              <p className="text-sm text-gray-500 mt-1">{translations.streakSubtext}</p>
            </div>
          )}

          {/* Features Grid with local images */}
          <div className="mt-10 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 max-w-6xl mx-auto px-4">
            {translations.features.map(({ key, title, desc, link }) => {
              let path = link;
              if (!path) {
                if (key === 'yoga') path = getYogaPath();
                if (key === 'ayurveda') path = getAyurvedaPath();
              }
              return (
                <div key={key || title} className="bg-white shadow-md rounded-lg overflow-hidden hover:shadow-lg transition duration-300">
                  <img
                    src={FEATURE_IMAGES[key?.toLowerCase()] || '/assets/placeholder.png'}
                    alt={title}
                    className="w-full h-32 object-cover"
                  />
                  <div className="p-4">
                    <h3 className="text-lg font-semibold mb-1 text-pink-600">{title}</h3>
                    <p className="text-sm text-gray-600 mb-2">{desc}</p>
                    {path && (
                      <button onClick={() => navigate(path)} className="text-sm font-medium text-white bg-pink-500 px-4 py-1.5 rounded hover:bg-pink-600">
                        {translations.exploreNow}
                      </button>
                    )}
                  </div>
                </div>
              );
            })}
          </div>
        </div>

        {showConfetti && (
          <div className="fixed inset-0 z-50 pointer-events-none">
            <Confetti width={width} height={height} numberOfPieces={280} recycle={false} />
          </div>
        )}
      </div>
    );
  }

  export default Dashboard;